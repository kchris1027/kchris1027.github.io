<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>InAction</title>
  <icon>http://kongcai.tech/icon.png</icon>
  
  <link href="http://kongcai.tech/link/atom.xml" rel="self"/>
  
  <link href="http://kongcai.tech/"/>
  <updated>2025-01-05T11:55:13.943Z</updated>
  <id>http://kongcai.tech/</id>
  
  <author>
    <name>kchris</name>
    <email>1098158356@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Follow - 新一代RSS阅读器</title>
    <link href="http://kongcai.tech/post/c1ea16e5.html"/>
    <id>http://kongcai.tech/post/c1ea16e5.html</id>
    <published>2024-12-16T13:15:17.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h2><blockquote><p>” 我们身处信息爆炸的时代，只是信息爆炸了，但知识并没有爆炸。海量的信息不仅增加了我们甄别筛选知识的难度，还让我们随时随地处于即时信息和肤浅信息的包围中。“</p></blockquote><h3 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h3><p>如今的社会中，信息是个既廉价又宝贵的资源。廉价到通过手机唾手可得，却又在某些时刻，贵重到一个信息差，能拉开人与人之间的社会差距。</p><p>在和同事的一次闲聊中，我聊到自己不太喜欢国内这种全家桶式的软件设计。于是他接过话题，开始说到微信这款国民级软件，广告越来越多、刷不到自己想看到的信息…是的，刷不到自己想看到的信息，这也是目前国内主流互联网平台的共通问题所在了。如今的平台靠着大数据和推荐算法在刻意为用户制造对平台有益的“信息茧房”，让用户只看到他们想让用户看到的信息，而这个信息通过一些手段，包装成用户自己想看到的信息。</p><p>为了避免这种情况，我开始选择性的过滤掉对自己无用信息，只是这个过程还是浪费了大量时间。随着生活和工作节奏的加快，时间对于我而言成为一个日渐短缺的资源。于是我开始寻求解决方案。</p><p>首先确定的一个大方向是，尽可能接触一手信息。基于这个目标，我开始在互联网上搜罗，紧接着了解并接触到 RSS，一种很原始的网站订阅方式。尽管原始，但纵观目前互联网主流平台上的关注、公众号、动态…这些功能的本质也是一种 RSS 订阅，只不过是平台为了完成圈地而制造的新概念，并借机将用户的数字信息据为己有，所获而来的信息通过各种商业模式完成变现。</p><h3 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h3><ul><li><p><strong>RSS</strong></p><p>  RSS（Really Simple Syndication 或 Rich Site Summary）是一种用于订阅和自动获取网站内容更新的技术和格式。它允许用户通过聚合器（又称 RSS 阅读器）方便地接收和阅读来自不同网站的最新信息，而无需访问每个网站。</p><p>  早年间的个人博客基本就靠这个来进行传播，只是现在平台垄断越发明显，个人RSS成为孤岛，难以为继。</p></li><li><p><strong>RSS 阅读器</strong></p><p>  RSS 阅读器是一种专门用于订阅、聚合和管理 RSS Feed 的工具或应用程序。通过 RSS 阅读器，用户可以集中查看来自不同网站的最新内容，而无需频繁访问每个网站。这种工具对于希望跟踪多个新闻来源、博客、播客或其他内容发布平台的用户尤其有用。</p></li></ul><h2 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><div class="note warning simple"><p>简介内容由AI总结输出。</p></div><p>RSS 工具 Follow 主要面向互联网用户，尤其是那些希望方便快捷地获取信息和内容的用户。</p><h3 id="软件简要描述："><a href="#软件简要描述：" class="headerlink" title="软件简要描述："></a>软件简要描述：</h3><p>Follow 是一款现代化的 RSS 阅读器，旨在帮助用户方便地订阅和管理各种内容源。其主要功能包括：</p><ul><li><strong>用户友好的界面</strong>：简单直观的设计，让用户能够快速找到所需的信息。</li><li><strong>多源订阅</strong>：支持多种类型的 RSS 源订阅，用户可以根据自己的需求自由选择。</li><li><strong>内容分类</strong>：提供分类管理功能，帮助用户将不同主题的内容进行整理。</li><li><strong>离线功能</strong>：支持离线阅读，用户可以在没有网络连接时访问之前存储的内容。</li><li><strong>跨设备同步</strong>：支持账户同步功能，用户在任何设备上都能获取最新的订阅更新。</li><li><strong>推送通知</strong>：实时推送最新更新，确保用户不会错过重要信息。</li></ul><h3 id="衍生内容："><a href="#衍生内容：" class="headerlink" title="衍生内容："></a>衍生内容：</h3><p>除了 Follow，用户也可以探索其他类似的 RSS 工具和应用，如 Feedly、Inoreader 和 The Old Reader。这些工具各有特点，如 Feedly 强调社交功能，Inoreader 提供高级订阅管理选项，而 The Old Reader 则更注重简洁的阅读体验。用户可以根据自身需求，选择最合适的工具来管理自己的信息获取方式。</p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><ul><li><p>可以直接从官网下载对应平台安装包。</p><ul><li><a href="https://follow.is/">Follow</a></li></ul></li><li><p>如果能访问外网的话，也可以从 GitHub 上找到最新的 Release 下载。</p><ul><li><a href="https://github.com/RSSNext/Follow">https://github.com/RSSNext/Follow</a></li></ul></li></ul><h3 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h3><ul><li><p><strong>订阅源配置</strong></p><ol><li><p>点击“+”，打开发现页面。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_1.png" alt="alt text"></p></li><li><p>选择感兴趣的信息源。<br> 优先选择热门推荐的信息源（比较稳定）。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_2.png" alt="alt text"></p></li><li><p>点击“预览”，选择分组，完成订阅。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_3.png" alt="alt text"></p></li><li><p>订阅的信息源会在左侧栏中显示，接着便可以像微信公众号一样进行信息浏览了。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_4.png" alt="alt text"></p></li></ol></li><li><p><strong>自动化配置</strong></p><p>  在设置页面中可以找到一些诸如：AI摘要、翻译、阅读模式、原文显示等自动化的规则设置，这部分属于个人定制化的操作了，可以匹配个人习惯自动完成一些重复操作。</p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_5.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_6.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_7.png" alt="alt text"></p></li></ul><h3 id="信息源获取"><a href="#信息源获取" class="headerlink" title="信息源获取"></a>信息源获取</h3><p>除了软件发现页面推荐的信息源，我们还可以自己选择信息源，应该说这才是我们使用这个软件的本质目的——打造一套自己的信息流。</p><p>信息源的获取有以下几种途径：</p><ul><li><p><strong>网站 RSS 链接</strong></p><ol><li>一般允许被订阅的网站都会带有“RSS”图形或是文字标识，点击后即可获得订阅链接。这个属于官方的订阅链接了，优先推荐。</li></ol><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_8.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_9.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_10.png" alt="alt text">  </p></li><li><p><strong>RSS 生成器（第三方）</strong></p><ol><li>如果第一种方式是官方行为，那么这种方式可以戏称为“民间行为”了。调侃归调侃，互联网本身就是主打开源精神，RSS从道德层面上来讲本身就是面向开放给所有人的。只是当代互联网平台通过利益绑架了这种开源精神，所以才有了民间开源。</li><li>目前主流的第三方RSS生成器是RSSHub，通过浏览器插件，可以快速获取到未开放RSS网站的订阅链接。Follow 软件的前身就是 RSSHub。有兴趣的朋友可以去官方了解下。</li></ol><p>  <a href="https://rsshub.netlify.app/zh/">介绍 | RSSHub</a>  </p></li><li><p><strong>RSS 生成器（自建）</strong></p><ol><li>由于第三方生成器并不能保证提供所有个人想订阅的网站RSS，且数据更新并非及时有效。所以有需求的同学可以自行搭建，通过自己本地主机或服务器生成有效的网页数据RSS。</li><li>具体搭建方式可见上述 RSSHub 官网介绍。</li></ol></li></ul><h2 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h2><p>总的来说，这款软件还是比较符合我个人诉求的。</p><p>不过依然存在以下不足：</p><ul><li>订阅源经常失效</li><li>信息相较于网站来说更新不及时，受限于订阅源服务器的更新频率。</li></ul><p>当然以上问题也是有解决方案，就是根据自己的诉求自建一个专属RSS源。现阶段的我实在没精力再往下折腾了，等后面有空再折腾下看看效果。</p><p>回归软件本身的工具属性而言，这款软件已经做得很棒了！对于使用者来说，更重要还是信息源。搜寻并整理自己所需信息，进行持续的价值积累，才是这款软件的意义所在。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;背景说明&quot;&gt;&lt;a href=&quot;#背景说明&quot; class=&quot;headerlink&quot; title=&quot;背景说明&quot;&gt;&lt;/a&gt;背景说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;”</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Obsidian多端同步方案</title>
    <link href="http://kongcai.tech/post/55f95be9.html"/>
    <id>http://kongcai.tech/post/55f95be9.html</id>
    <published>2024-04-05T17:55:46.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>自从折腾过自己的服务器，就老想着让服务器的价值最大化，真的就停不下来。思来想去，刚好最近有一个笔记数据多端同步的诉求，以便随时查阅。<br>你问我怎么不直接上Notion或是其他类似的笔记软件？<br>不好意思，是真怕它们跑路，数据放自己手里才是最安心的。加上离线运行效率还是要比在线高出不少，查找数据更加快捷，最终选择了Obsidian+多端同步的组合方案。</p><h2 id="方案分析"><a href="#方案分析" class="headerlink" title="方案分析"></a>方案分析</h2><h3 id="云盘"><a href="#云盘" class="headerlink" title="云盘"></a>云盘</h3><p>这个是我目前在用的方式，微软的OneDrive和百度云的同步空间都用过。 PC端的同步体验目前来说还不错，只是在手机和Pad上的同步体验就有些差强人意了。主要表现在手机数据管理不便，以及软件常驻后台的可操作性不大。</p><p>如果不想折腾，或是没有随时随地的查看诉求，我还是比较推荐微软OneDrive的方案。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>得益于 Obsidian 成熟的插件市场，搜索后如下：</p><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Plugin.png" alt="Alt text"></p><p>一般来说优先下载量和最近更新日期作为选择标准，于是我选择了 <code>Self-hosted LiveSync</code> 这款插件。不是 <code>Remotely Save</code> 不够好，而是 <code>Self-hosted LiveSync</code> 的名字更深得我心。论取名的艺术~</p><h2 id="方案详情"><a href="#方案详情" class="headerlink" title="方案详情"></a>方案详情</h2><p>需要提前准备一台安装有 Docker 的服务器和一台安装有 Obsidian 的客户端。</p><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="配置-CouchDB"><a href="#配置-CouchDB" class="headerlink" title="配置 CouchDB"></a>配置 CouchDB</h4><p>新建文件 <code>local.ini</code> 上传至服务器并获得路径地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[couchdb]</span><br><span class="line">single_node=true</span><br><span class="line">max_document_size = 50000000</span><br><span class="line"></span><br><span class="line">[chttpd]</span><br><span class="line">require_valid_user = true</span><br><span class="line">max_http_request_size = 4294967296</span><br><span class="line"></span><br><span class="line">[chttpd_auth]</span><br><span class="line">require_valid_user = true</span><br><span class="line">authentication_redirect = /_utils/session.html</span><br><span class="line"></span><br><span class="line">[httpd]</span><br><span class="line">WWW-Authenticate = Basic realm=&quot;couchdb&quot;</span><br><span class="line">enable_cors = true</span><br><span class="line"></span><br><span class="line">[cors]</span><br><span class="line">origins = app://obsidian.md,capacitor://localhost,http://localhost</span><br><span class="line">credentials = true</span><br><span class="line">headers = accept, authorization, content-type, origin, referer</span><br><span class="line">methods = GET, PUT, POST, HEAD, DELETE</span><br><span class="line">max_age = 3600</span><br></pre></td></tr></table></figure><h4 id="部署-CounchDB"><a href="#部署-CounchDB" class="headerlink" title="部署 CounchDB"></a>部署 CounchDB</h4><ul><li>Dokcer 安装<br>通过 <code>local.ini</code> 配置，在Docker中运行 CouchDB:</li></ul><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --restart always </span></span><br><span class="line">-e COUCHDB_USER=admin                       <span class="comment">#admin改成自己的用户名</span></span><br><span class="line">-e COUCHDB_PASSWORD=password                <span class="comment">#password改成自己设定的密码</span></span><br><span class="line">-v /path/to/local.ini:/opt/couchdb/etc/local.ini</span><br><span class="line">-p <span class="number">5984</span>:<span class="number">5984</span> </span><br><span class="line">couchdb</span><br></pre></td></tr></table></figure><p>其中 <code>/path/to/local.ini</code> 替换成实际的文件存放路径。</p><ul><li>Docekr Compose 安装<br>创建一个文件夹, 将你的 <code>local.ini</code> 放在文件夹内, 然后在文件夹内创建 <code>docker-compose.yml</code>. 请确保对 <code>local.ini</code> 有读写权限并且确保在容器运行后能创建 <code>data</code> 文件夹. 文件夹结构大概如下:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obsidian-livesync</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── local.ini</span><br></pre></td></tr></table></figure><p>参照以下内容编辑 <code>docker-compose.yml</code> :</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  couchdb:</span><br><span class="line">    image: couchdb</span><br><span class="line">    container_name: obsidian-livesync</span><br><span class="line">    <span class="keyword">user</span>: <span class="number">1000</span>:<span class="number">1000</span></span><br><span class="line">    environment:</span><br><span class="line">      - COUCHDB_USER=admin                    <span class="comment">#admin改成自己的用户名</span></span><br><span class="line">      - COUCHDB_PASSWORD=password             <span class="comment">#password改成自己设定的密码</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/opt/couchdb/data</span><br><span class="line">      - ./local.ini:/opt/couchdb/etc/local.ini</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">5984</span>:<span class="number">5984</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>创建并启动容器：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><ol><li>访问 <code>http://localhost:5984/_utils</code> ，输入部署容器时配置好的账号和密码。</li><li>点击 <code>Create Database</code> ，根据个人喜好创建数据库，名称随便。</li></ol><h4 id="设置域名"><a href="#设置域名" class="headerlink" title="设置域名"></a>设置域名</h4><p>设置一个指向你服务器的 A 记录，并在服务器端通过 <code>Nignx/Caddy</code> 获取 SSL 证书。<br>这一步主要目的是获取合法的SSL，不然客户端插件无法与同步服务器建立连接。</p><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>应用市场搜索 <code>Self-hosted LiveSync</code> ，并安装启用。<br>首次启用会打开如下页面（可以忽略）：<br><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Setting.png" alt="alt text"></p><h4 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h4><ol><li>设置向导 (The Setup wizard)<br>在设置对话框中打开 <code>🧙‍♂️ Setup wizard</code>. 如果之前未配置插件, 则会自动打开该页面。</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Setup%20wizard.png" alt="alt text"></p><ul><li><code>Use</code>: 使用已有配置，一般用于第二台及之后的设备的配置。</li><li><code>Start</code>: 根据引导进行配置。一般用于第一台设备配置，根据引导进行一些简单且必要的配置。</li><li><code>Enable</code>: 根据个人喜好进行手动配置。</li></ul><ol start="2"><li>配置远程数据库<br>在引导页面点击 <code>Start</code> 后弹出如下页面：</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Remote%20Database.png" alt="alt text"></p><ul><li><p>Remote Database configuration</p><ul><li>依次输入服务器地址、用户名、密码和数据库名称。</li><li>点击 <code>Check</code> 按钮进行连通性测试。</li></ul></li><li><p>Confidentiality</p><ul><li>End to End Enctryption ： 是否启用端到端加密。推荐勾选。</li><li>Passphrase : 设置加密密码。</li><li>Path Obfuscation : 混淆路径。多一重加密保证，推荐勾选。</li></ul></li></ul><p>配置完成点击 <code>Next</code> 。</p><ol start="3"><li>同步设置</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Sync%20Settings.png" alt="alt text"></p><p>选择自己要使用的同步方法，推荐 <code>LiveSync</code> ，也是这个插件比较特色的同步方式了。 然后点击 <code>Apply</code> 初始化并按要求建立本地和远程数据库。如果显示 <code>All done!</code> ，就完成了全部配置。此时 <code>Copy setup URI</code> 将自动打开，并要求我们输入密码以加密 <code>Setup URI</code> 。</p><p>之后等待本地与服务器完成同步。当状态不再变化并显示 ⏹️ 图标表示 COMPLETED（没有 ⏳ 和 🧩 图标）时，您就可以与服务器同步了。</p><ol start="4"><li>后续设备的配置<br>通过首次启用插件的弹窗或是设置向导 (The Setup wizard)中选择 <code>Use the copied setup URI</code> ，点击 <code>Use</code> , 输入前置 <code>Copy setup URI</code> 中复制的链接并输入密码。在弹窗中选择以下内容：</li></ol><ul><li><code>Importing LiveSync&#39;s conf, OK?</code> 选择 <code>Yes</code></li><li><code>How would you like to set it up?</code> 选择 <code>Set it up as secondary or subsequent device</code><br>然后，配置将生效并开始复制。接着，等待文件完成同步。</li></ul><ol start="5"><li>详细配置<br>更多配置说明详见官方文档：<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/vrtmrz/obsidian-livesync/blob/main/docs/settings.md">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/vrtmrz/obsidian-livesync/blob/main/docs/settings.md.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">obsidian-livesync</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div></li></ol><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><p>同步状态将显示在状态栏。</p><ul><li><p>状态</p><ul><li>⏹️ 就绪</li><li>💤 LiveSync 已启用，正在等待更改。</li><li>⚡️ 同步中。</li><li>⚠ 一个错误出现了。</li><li>↑ 上传的 chunk 和元数据数量</li><li>↓ 下载的 chunk 和元数据数量</li><li>⏳ 等待的过程的数量</li><li>🧩 正在等待 chunk 的文件数量 如果你删除或更名了文件，请等待 ⏳ 图标消失。</li></ul></li><li><p>提示</p><ul><li>如果文件夹在复制后变为空，则默认情况下该文件夹会被删除。您可以在同步设置中关闭此行为。</li><li>移动平台上的 Obsidian 无法连接到非安全 (HTTP) 或本地签名的服务器，即使设备上安装了根证书。</li><li>同步时，文件按修改时间进行比较，较旧的将被较新的文件覆盖。然后插件检查冲突，如果需要合并，将打开一个对话框。</li><li>使用此插件时，应避免同时使用其他同步软件。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在各种终端设备上尝试使用下来确实感觉不错，如官方所述，几乎达到了一字一句的实时同步。<br><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Demo.gif" alt="alt text"></p><p>不过之前在用 <code>cloudflare</code> 做域名解析时，还是会存在同步不及时的情况。后来拿 <code>Aliyun</code> 做域名解析就好了很多。推荐大家还是选择自己所在网络更好的域名及服务器运营商。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;需求来源&quot;&gt;&lt;a href=&quot;#需求来源&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Linux" scheme="http://kongcai.tech/categories/Linux/"/>
    
    
    <category term="Docker" scheme="http://kongcai.tech/tags/Docker/"/>
    
    <category term="Obsidian" scheme="http://kongcai.tech/tags/Obsidian/"/>
    
  </entry>
  
  <entry>
    <title>游戏设计基础理论</title>
    <link href="http://kongcai.tech/post/428cf2d9.html"/>
    <id>http://kongcai.tech/post/428cf2d9.html</id>
    <published>2024-03-14T15:04:53.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>鉴于工作中的需求，一些个人认为有趣的想法与设计需要一些通用理论作为支撑，由此想着将一些适用面广泛且有效的理论整理于此，方便查阅。</p></blockquote><h2 id="风险与回报（Risk-vs-Reward）"><a href="#风险与回报（Risk-vs-Reward）" class="headerlink" title="风险与回报（Risk vs. Reward）"></a>风险与回报（Risk vs. Reward）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Risk%20And%20Reward.png" alt="Alt text"></p><p>风险与回报理论在游戏设计中是一个核心概念，它强调玩家为了获得更大的奖励愿意承担更高的风险。这个理念不仅适用于游戏设计，也广泛存在于经济学、心理学和决策理论等多个领域中。在游戏设计中，这个理论用来创建平衡和吸引人的游戏机制，激励玩家探索、尝试和克服挑战。</p><h3 id="出处"><a href="#出处" class="headerlink" title="出处"></a>出处</h3><p>风险与回报的概念，并没有一个具体的“出生地点”或单一来源，在游戏设计领域，它更像是从实践中逐渐发展起来的共通理解。随着游戏产业和理论研究的发展，很多游戏设计师和理论家都对这个主题进行了探讨和应用，但很难归功于某个特定的人或文献。</p><h3 id="游戏设计中的应用"><a href="#游戏设计中的应用" class="headerlink" title="游戏设计中的应用"></a>游戏设计中的应用</h3><p>在游戏设计中，风险与回报的概念用于平衡游戏的挑战度和奖励系统。设计师通过调整任务的难度、敌人的强度、资源的稀缺性等因素，来创造玩家需要权衡风险与可能获得的回报的情境。有效使用这一概念可以增加游戏的深度和复杂性，提升玩家的参与度和满足感。</p><ul><li><strong>风险：</strong> 玩家在游戏中面临的挑战或可能导致失败的元素。风险可以是敌人、障碍、时间限制或资源损失等。</li><li><strong>回报：</strong> 作为克服风险的奖励，回报可以是分数、装备、能力提升、故事进展或解锁新内容等。</li></ul><p>设计师会仔细考虑如何设置风险与回报，以保证玩家既感受到挑战，又在成功后获得成就感。例如，一个高风险的战斗挑战可能会给予玩家珍贵的物品或大量经验值，鼓励玩家接受挑战并投入努力。</p><h3 id="关键原则"><a href="#关键原则" class="headerlink" title="关键原则"></a>关键原则</h3><ul><li><strong>平衡：</strong> 保证风险与回报之间有合理的平衡，避免游戏过于困难或过于简单。</li><li><strong>透明度：</strong> 让玩家能够预见到潜在的风险和可能获得的回报，以便做出有根据的决策。</li><li><strong>多样性：</strong> 提供不同层次的风险和回报，以满足不同类型玩家的需求和偏好。</li></ul><p>风险与回报理论是游戏设计师工具箱中的重要工具，帮助他们创造更加引人入胜和令人满意的游戏体验。</p><h2 id="三循环理论（Game-Loop-Theory）"><a href="#三循环理论（Game-Loop-Theory）" class="headerlink" title="三循环理论（Game Loop Theory）"></a>三循环理论（Game Loop Theory）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/GameLoop.png" alt="Alt text"></p><p>三循环理论（Second to Second, Minute to Minute, Session to Session）是一个在游戏设计领域经常被提及的概念，用于描述和分析玩家在不同时间尺度上的游戏体验。这个理论帮助游戏设计师确保玩家在短期内（每秒钟）、中期内（每分钟）和长期内（每次游戏会话）都能获得满足和乐趣。</p><h3 id="出处与普及"><a href="#出处与普及" class="headerlink" title="出处与普及"></a>出处与普及</h3><p>这个理论并没有一个明确的“发明者”或是第一次被提出的具体文献来源。它更像是游戏设计实践中逐渐形成并被广泛接受的一个概念框架。随着时间的推移，它已经被许多游戏开发者和设计师所采纳，并在各种形式的讲座、教程、书籍和在线资源中被讨论。</p><h3 id="理论解释"><a href="#理论解释" class="headerlink" title="理论解释"></a>理论解释</h3><ul><li><p><strong>Second to Second</strong>：这一层面关注的是游戏中最基本的交互和反馈机制，比如角色的移动、射击、碰撞等。游戏在这个层面需要给玩家即时的反馈和满足感，确保基本的操作和交互设计流畅且富有乐趣。</p></li><li><p><strong>Minute to Minute</strong>：这一层面涵盖了玩家在较短时间内的游戏体验，包括任务的完成、战斗的胜利、资源的收集和使用等。游戏需要在这个水平上提供有意义的挑战和奖励，以维持玩家的兴趣和参与感。</p></li><li><p><strong>Session to Session</strong>：这一层面关注的是玩家每次游戏会话之间的连续性和发展，例如角色成长、故事进展、解锁新内容等。在这个水平上，游戏设计目标是让玩家有持续回归游戏的动力，通过提供新的目标、挑战和奖励来增强游戏的可玩性和深度。</p></li></ul><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>三循环理论为游戏设计师提供了一个检视和优化游戏体验的框架，帮助他们平衡和调整游戏的各个方面，确保玩家在所有这些不同的时间尺度上都能获得满意和愉悦的游戏体验。通过关注这三个层面的设计，可以增强游戏的吸引力和留存率，构建起更加完善和圆润的游戏体验。</p><h3 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h3><ul><li><a href="https://gamedesignskills.com/game-design/core-loops-in-gameplay/#rpg-core-loop-examples">Designing The Core Gameplay Loop: A Beginner’s Guide</a></li></ul><h2 id="心流理论（Flow-Theory）"><a href="#心流理论（Flow-Theory）" class="headerlink" title="心流理论（Flow Theory）"></a>心流理论（Flow Theory）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Flow.png" alt="Alt text"></p><p>心流理论（Flow Theory）最初由匈牙利心理学家米哈伊·契克森米哈伊（Mihaly Csikszentmihalyi）在20世纪70年代提出。心流是指个体在进行某项活动时完全投入其中，达到高度专注和满足感的心理状态。在这种状态下，人们会经历时间感的扭曲（通常感觉时间过得更快）、自我忘怀以及对活动结果的深切享受。</p><h3 id="心流理论在游戏设计中的应用"><a href="#心流理论在游戏设计中的应用" class="headerlink" title="心流理论在游戏设计中的应用"></a>心流理论在游戏设计中的应用</h3><p>在游戏设计领域，心流理论被广泛应用于创造引人入胜的游戏体验。游戏设计师利用心流理论的原则，设计游戏以维持玩家的高度参与度和兴趣。为了实现心流状态，游戏需要满足以下几个关键条件：</p><ul><li><strong>挑战与技能平衡</strong>：游戏的挑战程度需要与玩家的技能水平相匹配。如果挑战太低，玩家可能会感到无聊；如果挑战太高，玩家可能会感到沮丧。</li><li><strong>明确的目标</strong>：游戏需要有清晰、可理解的目标，让玩家知道他们应该做什么。</li><li><strong>即时反馈</strong>：玩家的行为需要得到即时的反馈，以便他们可以根据这些信息调整自己的行动。</li><li><strong>专注度的增强</strong>：通过减少干扰和提供吸引人的内容，游戏应鼓励玩家完全投入其中，从而进入心流状态。</li></ul><p>通过遵循心流理论的这些原则，游戏可以更有效地促进玩家的投入度和整体游戏体验的质量。心流状态不仅能提升玩家的娱乐体验，还能促进学习和技能提升，这是教育游戏和训练模拟中尤为重要的。</p><h3 id="心流理论的影响"><a href="#心流理论的影响" class="headerlink" title="心流理论的影响"></a>心流理论的影响</h3><p>心流理论对于理解人类如何与复杂系统交互、如何在困难任务中找到满足感和乐趣以及如何通过设计提升用户体验等方面，都提供了极其宝贵的见解。在游戏设计之外，心流概念也被应用于运动、工作、艺术创作等多个领域，旨在提高个体的表现和幸福感。</p><p>随着游戏产业和用户体验（UX）设计的发展，心流理论继续在设计实践和研究中发挥着关键作用，帮助设计师创建更具吸引力和参与性的产品和服务。</p><h2 id="情绪曲线（Emotional-Curve）"><a href="#情绪曲线（Emotional-Curve）" class="headerlink" title="情绪曲线（Emotional Curve）"></a>情绪曲线（Emotional Curve）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Emotional%20Curve.png" alt="Alt text"></p><p>游戏设计中的情绪曲线（Emotional Curve）概念，并没有一个明确的单一来源，类似于许多游戏设计理论和技术，它是随着时间逐渐发展和完善的。情绪曲线通常用于描述玩家在游戏过程中经历的情绪变化，包括兴奋、紧张、放松和满足等。这个概念有助于游戏设计师规划和优化游戏体验，确保玩家不会感到无聊或过度挫败。</p><h3 id="历史背景与相关概念"><a href="#历史背景与相关概念" class="headerlink" title="历史背景与相关概念"></a>历史背景与相关概念</h3><p>虽然情绪曲线本身可能没有特定的出处，但它与一些著名的叙事和体验设计理论密切相关：</p><ul><li><p><strong>弗雷塔格三角形（Freytag’s Pyramid）</strong>：这是一种分析叙事结构的方法，由19世纪德国剧作家古斯塔夫·弗雷塔格（Gustav Freytag）提出。它将故事分为五个部分——引子、上升动作、高潮、下降动作和结局，形成了一个金字塔形状的结构。这个理论被广泛应用在文学、电影和游戏叙事中，为情绪曲线的思考提供了基础。</p></li><li><p><strong>英雄之旅（Hero’s Journey）</strong>：由约瑟夫·坎贝尔（Joseph Campbell）在其作品《千面英雄》中提出，描绘了英雄从平凡世界出发，经历试炼，最终取得胜利并归来的经典叙事框架。游戏设计中的情绪曲线经常借鉴英雄之旅中的元素来营造玩家的情绪起伏。</p></li></ul><h3 id="应用于游戏设计"><a href="#应用于游戏设计" class="headerlink" title="应用于游戏设计"></a>应用于游戏设计</h3><p>在游戏设计中，情绪曲线被用来规划玩家的体验，以确保游戏能够持续吸引玩家，并给他们留下深刻的印象。设计师会精心设计游戏的关键事件、挑战和奖励，以促使玩家经历各种情绪状态，如期待、惊喜、紧张、兴奋和成就感等。</p><p>通过调节游戏难度、故事情节、视觉和音效等元素，可以有效地控制玩家的情绪强度和节奏，从而创造出富有吸引力和挑战性的游戏体验。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>情绪曲线在游戏设计中的应用反映了设计师对玩家体验的深入思考。尽管该概念并非源自某个具体的理论或研究，但它汇集了叙事理论、心理学和用户体验设计等领域的智慧，成为指导游戏设计的重要工具之一。通过利用情绪曲线，设计师能够更好地把握玩家的情绪变化，提升游戏的沉浸感和吸引力。</p><h2 id="游戏节点切分（Gameplay-Breakdown）"><a href="#游戏节点切分（Gameplay-Breakdown）" class="headerlink" title="游戏节点切分（Gameplay Breakdown）"></a>游戏节点切分（Gameplay Breakdown）</h2><p>游戏设计中的“游戏节点切分”（Gameplay Decomposition 或 Gameplay Breakdown）并不是源自某个单一的出处或论文，而是游戏设计实践中逐渐形成的一种方法论。这种方法旨在通过将游戏体验分解成更小、更易于管理和分析的部分来理解和优化游戏设计。</p><h3 id="背景与应用"><a href="#背景与应用" class="headerlink" title="背景与应用"></a>背景与应用</h3><p>游戏节点切分本质上是对游戏元素和机制进行系统化的分析，这包括但不限于玩家行动、游戏规则、挑战、故事情节、界面设计等方面。通过这种分析，设计师能够识别游戏的核心组成部分，评估它们如何独立工作以及相互之间如何交互，从而提高游戏的整体质量和玩家体验。</p><h3 id="游戏节点切分的关键步骤"><a href="#游戏节点切分的关键步骤" class="headerlink" title="游戏节点切分的关键步骤"></a>游戏节点切分的关键步骤</h3><ol><li><p><strong>识别游戏元素</strong>：明确游戏中的所有关键元素和机制，包括玩家可以进行的操作、游戏环境、NPC（非玩家角色）、任务&#x2F;目标、奖励等。</p></li><li><p><strong>分析元素之间的关系</strong>：探究这些元素如何独立运作，以及它们之间如何相互影响。例如，玩家如何与环境互动？任务完成后给予玩家什么样的反馈？</p></li><li><p><strong>评估游戏循环</strong>：识别和评估游戏中的各种循环（如核心游戏循环、次级循环等），这些循环定义了玩家参与游戏的方式，以及游戏如何提供持续的动力和奖励。</p></li><li><p><strong>优化和调整</strong>：基于以上分析，确定游戏设计中的强项和弱点，进而做出必要的调整以增强玩家体验。</p></li></ol><h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>游戏节点切分允许设计师更加深入地理解游戏的运作机制，并且提供了一个框架来思考如何提升游戏的互动性和参与度。它是一种有效的工具，可以帮助设计师优化游戏流程、增强游戏的吸引力以及预测可能的设计问题。</p><h3 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h3><p>尽管“游戏节点切分”并没有一个明确的起源或单一的权威来源，但它已经成为游戏设计和分析中普遍采用的一种方法。通过系统地分析游戏的各个方面，设计师可以创建出更加深入和丰富的游戏体验，满足不同玩家群体的需求和期望。</p><h2 id="二八定律（Pareto-Principle）"><a href="#二八定律（Pareto-Principle）" class="headerlink" title="二八定律（Pareto Principle）"></a>二八定律（Pareto Principle）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Pareto%20Principle.png" alt="Alt text"></p><p>二八定律，又称为帕累托原则（Pareto Principle），最初是由意大利经济学家维尔弗雷多·帕累托（Vilfredo Pareto）在20世纪初提出的。他在研究财富分配时发现，大约80%的意大利土地由大约20%的人口所拥有。这个原则后来被广泛应用于各种领域，包括商业管理、软件工程，以及游戏设计中。</p><h3 id="二八定律在游戏设计中的应用"><a href="#二八定律在游戏设计中的应用" class="headerlink" title="二八定律在游戏设计中的应用"></a>二八定律在游戏设计中的应用</h3><p>在游戏设计中，二八定律可以以多种方式被解释和应用。以下是一些常见的例子：</p><ul><li><p><strong>玩家参与</strong>：可能只有大约20%的玩家会产生80%的游戏互动次数或完成度。这意味着游戏设计师需要特别关注这小部分玩家的体验和需求，同时也要确保其他80%的玩家仍然能找到游戏的乐趣和价值。</p></li><li><p><strong>内容消费</strong>：在许多游戏中，玩家可能只会体验到全部内容的一小部分（大约20%），但这一小部分内容提供了大部分的游戏乐趣和满足感（80%）。因此，重点放在核心和高质量的内容上，可能比尝试填充游戏世界以大量未经优化的内容更为重要。</p></li><li><p><strong>收益来源</strong>：对于盈利型游戏，通常只有大约20%的玩家会贡献出80%的收入。这就提示开发者们需要了解这些玩家的偏好，并为他们提供价值，以保持游戏的盈利性和可持续性。</p></li><li><p><strong>问题和解决方案</strong>：在优化游戏过程中，可能只有20%的问题导致了玩家体验中80%的困扰。识别并解决这些关键问题可以显著提升游戏质量。</p></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>虽然二八定律提供了一个有用的视角来理解和优化游戏设计，但它并不是一个硬性规则，实际比例可能会有所不同。游戏设计师应该将其作为一个指导原则，而不是一个严格遵守的法则。成功的游戏设计需要考虑到所有玩家的体验，并努力打造包容性和多样性的游戏世界。</p><p>总之，二八定律在游戏设计中的应用突显了资源分配和优先级设置的重要性，帮助设计师和开发者识别和专注于那些最能影响玩家体验和游戏成功的因素。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;鉴于工作中的需求，一些个人认为有趣的想法与设计需要一些通用理论作为支撑，由此想着将一些适用面广泛且有效的理论整理于此，方便查阅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;风险与回报（Risk-vs-Reward）&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>《Brotato》玩法解析</title>
    <link href="http://kongcai.tech/post/7fa73044.html"/>
    <id>http://kongcai.tech/post/7fa73044.html</id>
    <published>2024-02-29T23:36:09.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[ <iframe src="https://store.steampowered.com/widget/1942280/" frameborder="0" width="100%" height="190"></iframe> <h2 id="玩法特点"><a href="#玩法特点" class="headerlink" title="玩法特点"></a>玩法特点</h2><p>一款符合现代碎片化生活节奏的，具有<code>短平快</code>特点的爽感<code>Rouge</code>。</p><h2 id="系统组成"><a href="#系统组成" class="headerlink" title="系统组成"></a>系统组成</h2><table><thead><tr><th align="center">序号</th><th align="center">系统名称</th><th align="center">详细数据</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">角色</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Characters">Character</a></td><td align="center">共44个角色，初始解锁5个。</td></tr><tr><td align="center">2</td><td align="center">属性</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Stats">Stats</a></td><td align="center">共12类属性。</td></tr><tr><td align="center">3</td><td align="center">武器</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Weapons">Weapons</a></td><td align="center">分为四个品阶：白&#x2F;蓝&#x2F;紫&#x2F;红。</td></tr><tr><td align="center">4</td><td align="center">道具</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Items">Items</a></td><td align="center">共177种道具。</td></tr><tr><td align="center">5</td><td align="center">敌人</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Enemies">Enemies</a></td><td align="center">共36种敌人。</td></tr><tr><td align="center">6</td><td align="center">升级</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Upgrades">Upgrades</a></td><td align="center">每次升级时，都可以选择一种属性进行提升。</td></tr><tr><td align="center">7</td><td align="center">商店</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Shop">Shop</a></td><td align="center">在商店中可以购买道具和武器，并且是除战前自选武器之外的唯一武器来源途径。</td></tr><tr><td align="center">8</td><td align="center">成就</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Progress">Progress</a></td><td align="center">局外收集。</td></tr></tbody></table><p>该游戏的系统组成并不复杂，甚至如果你对RougeLike有一定的了解，会发现它们几乎算是该品类游戏的核心系统组成了。</p><h2 id="游玩规则"><a href="#游玩规则" class="headerlink" title="游玩规则"></a>游玩规则</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E6%B8%B8%E7%8E%A9%E6%B5%81%E7%A8%8B.png" alt="Alt text"></p><p>整个流程可以简单的概括为：<code>杀怪-成长-再杀怪</code>的不断循环，直至通关或死亡。</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>每局总共20波怪物，每波持续时长约为1min左右。计时结束后玩家未死亡则获得胜利。<ul><li>采用倒计时的形式更具紧迫感。初始20s，随着波次增加，游玩时长也在增加。</li><li>单波次的时间周期内，怪物刷出数量会不断增加。压力会随着怪物数量增加而不断积累，在计时为零的瞬间得到释放。</li></ul></li><li>每波结束后，会有一个属性升级选项和商店购买选择。<ul><li>属性升级选项的可选次数由玩家本波次挑战过程中升级次数决定，主要是用来提升角色属性，刷新品质随机。</li><li>商店可购买到道具和武器，刷新品质随机。</li></ul></li><li>武器可以选择同品质二合一的方式进行升级，提升了属性的同时，也空出了一个武器格子。<ul><li>武器装备数量上限为 6 。（部分角色天赋可以突破这个上限）</li><li>武器作为主要攻击手段和 build 构建方向。</li></ul></li><li>道具可携带数量不设限（目前还没测试上限数量，先暂且理解为无上限设定），但不同道具有不同的携带数量上限设置。<ul><li>道具主要作用为增加角色基础属性和提供一些被动效果。</li></ul></li></ul><h2 id="体验感知"><a href="#体验感知" class="headerlink" title="体验感知"></a>体验感知</h2><p> 体验是一个游戏带给玩家最直接的感受，如果要用一个词来概括这个游戏或者说这类游戏带给玩家的游戏体验，我会用“爽”这个词。而爽感的来源又是多方面的，以我个人的主观视角来看，这个游戏的爽感主要来源于 <strong>成长、惊喜和策略。</strong></p><h3 id="成长"><a href="#成长" class="headerlink" title="成长"></a>成长</h3><p>本作成长感受表现的最为明显。</p><p><img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E6%88%90%E9%95%BF.png" alt="Alt text"></p><p>成长的感受主要来自于以下几个方面：</p><h4 id="属性成长"><a href="#属性成长" class="headerlink" title="属性成长"></a>属性成长</h4><ul><li>玩家通过击杀敌人获取材料从而提升角色等级，之后可以在每波挑战结束后选择自己想要的属性进行提升。</li><li>属性是数值成长最直接的体现。</li></ul><h4 id="武器获得"><a href="#武器获得" class="headerlink" title="武器获得"></a>武器获得</h4><ul><li>玩家通过击杀敌人获取金币后，可以在商店购买自己想要的武器。同种类同品级的武器可以升级为更高品级的武器。</li><li>武器主要决定玩家的攻击手段（主动技能），伴随着数值成长和外观表现。</li></ul><h4 id="道具获得"><a href="#道具获得" class="headerlink" title="道具获得"></a>道具获得</h4><ul><li>玩家可以在商店购买自己想要的道具。道具携带数量不设上限。</li><li>道具会给玩家提供一些被动技能效果、部分系统规则的变更、以及一些直接的属性成长。</li></ul><h4 id="成就解锁"><a href="#成就解锁" class="headerlink" title="成就解锁"></a>成就解锁</h4><ul><li>玩家在不断地游玩中，解锁对应成就和图鉴（角色、武器、道具、敌人）。</li><li>属于一种局外的收集玩法了。</li></ul><p>游戏通过设定简单清晰的目标——<code>生存至最后1s</code>，并在玩家每次完成目标时及时给予奖励——<code>武器和道具代表的技能机制、角色属性的数值成长以及外观装扮</code>，接着迅速开启下一波挑战，让玩家不断地感觉自己越来越强。</p><p>通过设立清晰目标与及时反馈机制，玩家感受并了解到自己的表现与进步，从而增强了学习性和成长感，以此不断良性循环。</p><h3 id="惊喜"><a href="#惊喜" class="headerlink" title="惊喜"></a>惊喜</h3><p>惊喜可以说是影响一个游戏能否有让人有持续玩下去的动力的重要因素了。惊喜的另一种表达是有趣，也是我个人评判一个游戏是否好玩的决定性因素。</p><p> <img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E6%83%8A%E5%96%9C.png" alt="Alt text"></p><p>本作的惊喜主要呈现在两方面：概率随机与Build构建。</p><h4 id="概率随机"><a href="#概率随机" class="headerlink" title="概率随机"></a>概率随机</h4><ul><li>掉落随机<ul><li>每波次通关会有一定概率掉落随机的道具。</li></ul></li><li>品质随机<ul><li>每次升级的属性提升和商店的开启都伴随着品质的随机。</li></ul></li><li>属性类型随机<ul><li>每次升级后成长属性随机，四选一。</li></ul></li><li>商品类型随机<ul><li>每次开启商店后，可购买物品在道具和武器之间随机。随机刷出四种。</li></ul></li></ul><p>虽然我个人比较讨厌随机，因为它会让我感觉缺乏对游玩的掌控性，正如我不喜欢赌博一样。但随机的不确定性无时无刻不在给玩家提供新鲜刺激和充满惊喜的体验，有关随机的详细阐释可以去看看例如Jesse Schell的《游戏设计的艺术》、Greg Costikyan的《不确定性在游戏中的应用》以及Katie Salen的《游戏设计原理：好游戏如何让玩家更上瘾》，随机对于游戏的可玩性提升还是有很大帮助的。</p><h4 id="Build-构建"><a href="#Build-构建" class="headerlink" title="Build 构建"></a>Build 构建</h4><ul><li>玩法机制<ul><li>不同武器与道具的组合构建出不同的玩法策略。</li></ul></li><li>视觉呈现<ul><li>很多的装备和道具会影响玩家的外观，而外观的变化往往伴随着玩家实力的变强。</li><li>一些独特的技能组合也会迸发出一些绚丽的技能效果。</li></ul></li></ul><h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h3><p>本作的策略主要以玩家的选择为主，辅以简单的操作。乍一看没啥深度，实则设计精妙。简单的操作让其几乎没有什么上手门槛，选择的操作也主要由思考决定，而在每一波挑战结束后的每一次选择作者都留有足够的时间让玩家去思考，并辅以Tag及颜色上的引导，更进一步降低玩家理解门槛。</p><p> <img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E7%AD%96%E7%95%A5.png" alt="Alt text"></p><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul><li>移动走位<ul><li>只有上下左右四个按键操作。</li></ul></li><li>选择点击<ul><li>只会出现在每一波挑战的结束到下一波挑战开启之前。</li></ul></li></ul><h4 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h4><ul><li>战前选择<ul><li>选择初始角色和武器，决定了build构建的大方向。</li></ul></li><li>战中选择<ul><li>升级属性提升类型选择，选择是提升生存能力还是提升伤害能力。</li><li>商店购买物品类型选择，这里的选择是整个游戏体验的灵魂所在，玩家的每一次选择都极大的影响着后续游玩的体验走向。商品种类的设计，以及随机投放规则设计，可以说是本作乃至 Rouge 整个品类游戏的设计重心了。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本作我目前体验下来可能不到20h（游戏人没时间玩游戏…&#x2F;(ㄒoㄒ)&#x2F;~~），所以能聊的主要还是以个人感受为主，其中有关设计部分的内容更多来自于我以前参与的Rouge项目经验，分析的也比较浅薄，日后若有机会制作此类型项目时，再做深入分析。</p><p>说了这么多，好像只说了本作的优点，这个游戏就没有缺点么？</p><p>一个好玩的游戏，优点往往先于缺点展现，并且体量越小的游戏漏洞越少。因此对于并未深入游玩的我来说，暂不想去剖析其中的不足之处，有种挑刺的嫌疑。但以下的几个问题，或许在深入游玩之后，我会拿出来再思索一下：</p><ol><li><p>重复感。<br>尽管有着随机的buff加成，但在游玩过一定时长后（<em>以我个人的感觉预计大约在50h左右，对这类游戏越熟悉，这个时间则越短</em>），每一局的感觉会越来越熟悉，新鲜要素不在。这也是大多数 Rouge 游戏的通病了。</p></li><li><p>我命由天不由我。<br>当build存在最优解时（往往是数值导向），每当刷出的东西不是自己想要的，往往这局的游戏体验就已达到峰终时刻，随着游戏的继续进行，玩家的期待值只会越来越低，直至死亡失败或是选择重开。</p></li></ol><p>随着玩家对游戏的逐渐熟练，操作的部分已经不足以形成挑战，剩下的就只能交给运气了，比起选择逆天改命，或许大部分的玩家更愿意选择重来。</p><p>每种类型的游戏都有着自己的缺点，RougeLike 也不例外。而如何打破缺点或是通过改进规则来让这个品类的游戏在新的时代焕发新的生命力，正是我等游戏从业者该去思考的问题。</p>]]></content>
    
    
      
      
        
        
    <summary type="html"> &lt;iframe src=&quot;https://store.steampowered.com/widget/1942280/&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;190&quot;&gt;&lt;/iframe&gt; 

&lt;h2 id=&quot;玩法特点&quot;&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基于个人服务器的VPN构建</title>
    <link href="http://kongcai.tech/post/93337678.html"/>
    <id>http://kongcai.tech/post/93337678.html</id>
    <published>2024-02-19T12:14:07.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>   每次因为个人网站而购买国外服务器时，就总想着把服务器的价值最大化。而 VPN 算是自工作以来的一个必备工具了，虽然之前也折腾过许久，但都因为各种原因容易导致 IP 被封，连带服务器无法使用。<br>   我也尝试过去购买别人的产品，只是别人的产品要不然就是太贵了，或是限流量和限设备，还有隐私等问题，总有让人不满意的点。<br>   于是最近假期期间，趁着空闲，又折腾了起来。并发掘了一些可靠好用的工具。</p><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><h3 id="FranzKafkaYu-x2F-x-ui"><a href="#FranzKafkaYu-x2F-x-ui" class="headerlink" title="FranzKafkaYu&#x2F;x-ui"></a>FranzKafkaYu&#x2F;x-ui</h3><ul><li>推荐指数 ⭐⭐⭐⭐⭐</li><li>脚本+可视化面板的组合，支持支持单端口多用户、多协议。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/FranzKafkaYu/x-ui">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/FranzKafkaYu/x-ui.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FranzKafkaYu/x-ui</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="233boy-x2F-Xray"><a href="#233boy-x2F-Xray" class="headerlink" title="233boy&#x2F;Xray"></a>233boy&#x2F;Xray</h3><ul><li>推荐指数 ⭐⭐⭐⭐</li><li>一款超便捷的构建脚本，开箱即用。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/233boy/Xray">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/233boy/Xray.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">233boy/Xray</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="wulabing-x2F-Xray-onekey"><a href="#wulabing-x2F-Xray-onekey" class="headerlink" title="wulabing&#x2F;Xray_onekey"></a>wulabing&#x2F;Xray_onekey</h3><ul><li>推荐指数 ⭐⭐⭐</li><li>听说口碑不错，不过由于我之前已经安装了Nginx，脚本构建过程中失败后也就没有继续尝试下去了，有兴趣的朋友可以试试。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/wulabing/Xray_onekey">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/wulabing/Xray_onekey.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">wulabing/Xray_onekey</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="构建流程"><a href="#构建流程" class="headerlink" title="构建流程"></a>构建流程</h2><p>大部分的使用说明看对应项目的 Wiki 即可，这里主要补充说明一些我遇到的问题。</p><p>从这些工具的说明文档里，我大概了解到了以前主机IP容易被封是因为缺少加密协议 <code>TSL（Transport Layer Security）</code>，相当于在互联网裸奔，因此极容易被检测管制。</p><ol><li><p>购买域名并托管</p><ul><li>域名购买 <a href="https://www.namesilo.com/">namesilo</a>。</li><li>替换域名服务商 <a href="https://dash.cloudflare.com/">cloudflare</a>，具体步骤可自行 Google 。</li><li>解析域名 DNS 至服务器 IP 地址并获取 cloudflare 对应域名管理 API 。</li></ul></li><li><p>一键SSL证书申请并自动续签</p><ul><li>该功能一般脚本都自带，直接跟随操作步骤执行即可。</li></ul></li><li><p>服务端配置</p><ul><li>按照脚本说明进行配置，一般配置成功后会生成对应订阅链接或二维码。</li></ul></li><li><p>客户端配置</p><ul><li>下载客户端软件 <a href="https://github.com/2dust/v2rayN">v2rayN</a> 并根据生成链接获取订阅。</li><li>只要是支持 Xray 协议的客户端就行。</li></ul></li></ol><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>我目前在使用的是 <code>FranzKafkaYu/x-ui</code>，在按照使用说明操作的过程中，有几个需要注意的点，否则无法连接至服务器：</p><ol><li><p>在 <a href="https://dash.cloudflare.com/">cloudflare</a> 托管的域名DNS解析中，代理状态需要关闭，即代理状态需要调整至 <code>仅DNS</code> 。</p></li><li><p>x-ui 管理面板中添加的入站对应端口，需要加入服务器防火墙的白名单中。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开放端口</span></span><br><span class="line">sudo ufw allow 端口号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口开放状态</span></span><br><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure></li><li><p>入站配置中的域名需要修改为 cloudflare 托管的域名名称，而非 IP 地址。</p></li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;需求来源&quot;&gt;&lt;a href=&quot;#需求来源&quot; class=&quot;headerlink&quot; title=&quot;需求来源&quot;&gt;&lt;/a&gt;需求来源&lt;/h2&gt;&lt;p&gt;   每次因为个人网站而购买国外服务器时，就总想着把服务器的价值最大化。而 VPN</summary>
        
      
    
    
    
    <category term="Linux" scheme="http://kongcai.tech/categories/Linux/"/>
    
    
    <category term="VPN" scheme="http://kongcai.tech/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>分镜与故事板</title>
    <link href="http://kongcai.tech/post/711e32fe.html"/>
    <id>http://kongcai.tech/post/711e32fe.html</id>
    <published>2023-10-07T19:42:10.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>最近由于工作需要，需要对自己负责设计的角色产出大招分镜的制作需求，于是开始琢磨着研究如何输出更专业的分镜需求文档。算是现学现卖了，顺便给学习的内容做个总结。</p><h2 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h2><h3 id="分镜（Shot-List）"><a href="#分镜（Shot-List）" class="headerlink" title="分镜（Shot List）"></a>分镜（Shot List）</h3><p>分镜设计是影视、动画等视觉创作领域中的一项重要工作，用于规划和组织场景的每个镜头，是导演、编剧和其他创作人员进行沟通的工具之一。它是在影片或动画制作之前，通过一系列画面来呈现整个作品的构图、动作和情节的过程，从而帮助团队理解和共同追求创作的视觉效果和叙事目标。</p><p>分镜通常包含以下信息：</p><table><thead><tr><th>序号</th><th>信息类型</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>镜头编号</td><td>个镜头都应该有一个独一无二的编号，以便在制作中进行引用。</td></tr><tr><td>2</td><td>镜头描述</td><td>对于每个镜头，描述应该简洁而清晰，包括场景的位置、角色的动作和对白。</td></tr><tr><td>3</td><td>画面构图</td><td>显示每个画面中主要元素的相对位置，包括角色、背景、道具等。画面构图通常是一个简化的示意图，用于表示镜头的基本组成。</td></tr><tr><td>4</td><td>角度和距离</td><td>指定摄影机的角度和距离，以及视角的选择。这可以包括镜头是俯视、仰视还是平视，以及摄影机离主体的远近。</td></tr><tr><td>5</td><td>过渡效果</td><td>规定不同镜头之间的过渡效果，比如淡入淡出、切割等。这有助于确保场景之间的平滑过渡。</td></tr><tr><td>6</td><td>动作安排</td><td>描述角色和物体的动作，包括姿势、表情和动作的顺序。这有助于指导动画师或演员的表演。</td></tr><tr><td>7</td><td>对白和声音</td><td>如果有对白或声音效果，分镜也可以包含相应的文字说明或标记。</td></tr><tr><td>8</td><td>时间标记</td><td>指定每个镜头或画面的停留时间，以确保整体流畅。</td></tr><tr><td>9</td><td>备注和说明</td><td>提供任何与镜头相关的额外信息或特殊说明。</td></tr><tr><td>10</td><td>背景图示</td><td>在需要时，可以添加简化的背景示意图，以便更清楚地传达场景的背景。</td></tr></tbody></table><p>以上信息的类型，具体程度和深度取决于制作团队的工作流程和项目的要求。重要的是确保分镜提供足够的信息，使得整个制作团队能够理解并按照设计的方向进行工作。</p><h3 id="故事板（Storyboard）"><a href="#故事板（Storyboard）" class="headerlink" title="故事板（Storyboard）"></a>故事板（Storyboard）</h3><p>故事板是一种用于视觉叙事规划的工具，通常以序列动画的形式展示影片、动画、广告等项目的场景、动作和对白。故事板帮助创作者将故事的想法转化为图像，以更好地可视化并组织叙事元素。</p><p>故事板着重描述故事走向，展示故事创意；分镜侧重讲述拍摄制作的执行。</p><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://app.mediastory.cc/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/app.mediastory.cc/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">闪电分镜</div>            <div class="tag-link-sitename">影视飓风</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>影视飓风制作的一款多人在线分镜制作的网页工具，可在分镜列表和故事板之间进行切换预览，亦可直接导出为可供下载的 PDF 文件。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/584086863">全方位教你搞懂故事板（概念、术语、例子、工具）</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/203091191">关于分镜的一切</a></p></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;需求来源&quot;&gt;&lt;a href=&quot;#需求来源&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>樱井老师的开发课堂</title>
    <link href="http://kongcai.tech/post/a82bd550.html"/>
    <id>http://kongcai.tech/post/a82bd550.html</id>
    <published>2023-07-30T10:26:22.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文章内容摘录自樱井老师个人 YouTube 账号视频内容。</p></blockquote><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.youtube.com/channel/UCv1DvRY5PyHHt3KN9ghunuw">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.youtube.com/channel/UCv1DvRY5PyHHt3KN9ghunuw.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Masahiro Sakurai on Creating Games</div>            <div class="tag-link-sitename">Youtube</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h1 id="Work-Ethic-职业素养"><a href="#Work-Ethic-职业素养" class="headerlink" title="Work Ethic 职业素养"></a>Work Ethic 职业素养</h1><h1 id="Game-Essence-游戏性"><a href="#Game-Essence-游戏性" class="headerlink" title="Game Essence 游戏性"></a>Game Essence 游戏性</h1><h2 id="Risk-and-Reward-风险回报理论"><a href="#Risk-and-Reward-风险回报理论" class="headerlink" title="Risk and Reward 风险回报理论"></a>Risk and Reward 风险回报理论</h2><h3 id="游戏性"><a href="#游戏性" class="headerlink" title="游戏性"></a>游戏性</h3><p>何为游戏性？樱井政博对此的定义是游戏的“推和拉”或“风险和收益”。</p><p>此处举例经典飞行射击游戏《太空侵略者》：</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690699586432.png" alt="Alt text"></p><ul><li><p>游戏规则很简单，操作下方炮台歼灭空中左右移动的侵略者。侵略者会水平运动，在触碰屏幕边界后再往下推进，若侵略者抵达最下方，则敌人侵略成功，游戏结束。</p></li><li><p>因为玩家和侵略者只能垂直射击，所以当玩家与侵略者距离较远时，游戏处于“无风险·无回报”状态；但随着玩家移动，与侵略者距离越近，越容易被侵略者击中，此时风险增加，收益为令侵略者逐渐进入自身打击范围。再进一步，则风险显著增加，但从这里开始就可以获得“打中敌人”的回报了。</p></li></ul><p><code>冒“风险”以得“回报”，这就是“拉扯程度”和“游戏性”的本质。</code>对“攻略”这一要素也有着重大的影响，“攻略”和“拉扯程度”其实是同一个概念的不同表述。</p><p><code>“游戏性”是指控制风险并获得回报的乐趣，而“攻略”是指控制风险并获得回报的方法。</code>前者是游戏系统的角度，后者是玩家的角度。</p><h3 id="攻略"><a href="#攻略" class="headerlink" title="攻略"></a>攻略</h3><p>在《太空侵略者》中，敌人从右往左进行攻击时，若是玩家从右往左追击侵略者，则玩家在进入敌人攻击范围内，不仅风险很高，而且与侵略者的距离太远导致打不中侵略者，这种就是纯粹的无意义风险了。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690688042269.png" alt="Alt text"></p><p>而在玩家从左往右攻击时，尽管同样进入敌人攻击范围时风险相同，但此时的玩家时可以打中敌人了。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690688336674.png" alt="Alt text"></p><p>因此《太空侵略者》的攻略是：迎击优于追击。</p><p>此外，玩家操控机体的宽度判定是游戏平衡性的关键因素，该参数决定了风险程度。不单是视觉层面的设计，也决定了游戏的深度和乐趣。</p><p>能控制风险的机制也是游戏平衡性的关键。如玩家可以躲在掩体之下。</p><p><code>控制并降低“风险”从而更容易获得“回报”，此为“攻略”。</code></p><h3 id="死亡之墙"><a href="#死亡之墙" class="headerlink" title="死亡之墙"></a>死亡之墙</h3><p>只要一个侵略者到达屏幕底部，此时玩家无论剩余多少条命都会立即结束游戏。此时游戏处于相当危险的境地，即风险达到极限的时刻。</p><p>但是，此时侵略者的激光是无法击中你的，故玩家的风险又降低的不少。</p><p>总体而言，死亡之墙就是风险和回报均处于最大的状态。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>风险与回报之间必须紧密连结，同时还要具备适当的量度。</p><p>所谓的“游戏性”，或是“拉扯程度”，只是电子游戏本身的一个特征。令玩家感受到沉浸感并使人娱乐其间的体验形式还有不少，并非所有游戏都是通过“游戏性”传达体验的。</p><h3 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h3><p>当一个游戏提高了自身“游戏性”后，所谓的“公众性”会随之降低。</p><p>以初代《星之卡比》为例，樱井政博选择了简化游戏操作，从而吸引更广泛的玩家群体。</p><h2 id="Squeeze-and-Release-压力的施加与释放"><a href="#Squeeze-and-Release-压力的施加与释放" class="headerlink" title="Squeeze and Release 压力的施加与释放"></a>Squeeze and Release 压力的施加与释放</h2><p>电子游戏的一大乐趣在于，游戏如何对玩家施压，又如何令玩家对其解压，这可谓是游戏乐趣的核心元素。</p><p>压力本身并无乐趣，但当它对玩家施压到一定程度后，突然将其释放，此时玩家将得到相当的爽快感。</p><ol><li><p>包括放置杂兵、设置障碍要素或解谜要素，总之就是对玩家的游戏造成妨碍作用的内容；在玩家除去上述压力要素之后，他们必然会有爽快感。</p></li><li><p>在玩家完成设置的挑战后，我们应该奖励玩家，为他们提供能更有效处理压力要素的手段。</p><ul><li>比如说经验值和新技能这类的东西，它们就是为了让玩家便于应对更强大的敌人。</li><li>使用游戏内货币购买更好的新装备也是一种不错的奖励机制。</li><li>让玩家随着流程推进而自行得到奖励要素，并将路线选择的自主权交予玩家本身，如此亦能提高游戏性。</li></ul></li></ol><p><code>施加压力之后，再予以释放，并令玩家为接下来的流程打好基础。</code>此为游戏设计中的压力元素。</p><h2 id="Game-Essence-in-Role-Playing-Games-RPG的游戏性"><a href="#Game-Essence-in-Role-Playing-Games-RPG的游戏性" class="headerlink" title="Game Essence in Role-Playing Games  RPG的游戏性"></a>Game Essence in Role-Playing Games  RPG的游戏性</h2><h3 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h3><p>首先，RPG 游戏需要构造一个让人随时面对未知挑战的冒险，探险的区域越为深入，则亦将面对愈加强大的敌人。但与此同时，挑战越危险的地方得到的收益也越大。</p><p>对于那种允许自行直接离开迷宫的游戏，或者是战败非强制掉落现已收集的所有奖励要素，这类游戏通常更为轻度一些。但不是说这种游戏不会提供高难度挑战，提供特定战斗的难度，这也不失为一种好的平衡。</p><h3 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h3><p>就对战而言，动作型角色扮演游戏（ARPG）需要把战斗场面平衡至对战策略之中。</p><p>例如从敌人外观上呈现对战策略：</p><ul><li>敌人现身，玩家需要根据敌方的相貌特征及攻击方式决定对战策略。敌人看上去弱火，此时给敌人上个招式，收效不错，这时候我们就有经验了，所谓玩家经验正是如此。</li></ul><p><code>针对敌人的弱点选用攻击招式以达到输出最大化，这便为游戏的策略性，亦为游戏性。</code></p><p>对于轻度游戏，最好不要搞出过分复杂化的策略内容。</p><ul><li>以《女神异闻录》系列为例，系统直接给出当前敌人的弱点属性以便于玩家自身连击，如此为对战带来了一定的多样性和节奏感。对于那种鼓励玩家使用克制属性进行攻击的游戏，这样的设计倒是完善了平衡性。</li></ul><p>虽然 RPG 游戏可以归纳出两个核心游戏性元素：探索、战斗，但 RPG 本身就是一个广阔复杂的大类，所以制作游戏的时候可不能让思维被现有通用游戏性元素所局限哦！</p><h2 id="Fun-Beyond-Game-Essence-游戏性之外的乐趣"><a href="#Fun-Beyond-Game-Essence-游戏性之外的乐趣" class="headerlink" title="Fun Beyond Game Essence 游戏性之外的乐趣"></a>Fun Beyond Game Essence 游戏性之外的乐趣</h2><p>一款电子游戏的乐趣并不局限于其游戏性。</p><ol><li><p>由操作自身带来乐趣</p><ul><li>电子游戏可以仅通过操作来提供大量的乐趣，屏幕内的世界不受自然法则的约束，对于现实世界的人来说，这是一个神秘且迷人的世界。若仅通过操作创造乐趣，对创作者而言，需要选好合适的设计方式，也要有感触及调谐改善手感的能力。</li></ul></li><li><p>冒险游戏和视觉小说</p><ul><li>这类游戏并不重视“风险回报”，乐趣来源点在剧情推进之上。</li><li>虽然它们可以被看做是小说或者电影的延伸产物，但仅靠一个引人注目的故事本身并不足以成为优秀的作品。与小说不用，游戏可以利用好电脑的交互。它们利用这一点来构建剧情，因此也成了此类游戏的乐趣及魔力所在。</li></ul></li><li><p>电影式及以剧情为主的游戏</p><ul><li>和第二类有点相似，但这一类的剧情元素可以融入各种游戏中，无论游戏类型。</li><li>电影式的表达手法以及剧情本身并非游戏性的必要组成元素。然而，二者均可为提升游戏性的关键，它们可以成为促使玩家向前推进直面前方危机的驱动力。</li><li>此外，鲜活的角色及世界观有助于加深玩家对游戏的印象，以创造出玩家与屏幕上正在发生的事件之间的内在联系。</li></ul></li><li><p>改编游戏</p><ul><li>这种游戏与电影、玩具、集换式卡牌等娱乐内容相关，均为针对某些特定 IP 的粉丝向相关产品。这不是一个游戏本身是否有趣的话题，而是这部游戏可否让一个 IP 的粉丝们在这个游戏世界中获得愉快的体验。如果玩家本身并非此 IP 受众，则评价游戏本身也没多大价值。对这样的游戏来说，游戏性并不在最重要的位置之上。</li></ul></li><li><p>生活模拟类游戏</p><ul><li>这些游戏重现了现实生活之中错综复杂的体验。在一个模拟世界里玩一个拟真的游戏能提供许多游戏性之外的乐趣。</li><li>这种游戏越贴近现实生活，玩家们就越能开始感觉到比实际显示在眼前的更多的信息以及更深层次的体验。</li></ul></li><li><p>建造类游戏</p><ul><li>这种游戏的乐趣本身就在于创造。但要是能配合得体的机制，如高空坠落死亡判定、制作东西来抵御敌人、或者冒着危险来收集材料，如此为此类游戏带来风险回报，则让游戏能提供更充足的乐趣。</li><li>此类游戏与生活模拟类游戏存在交际，诸如《我的世界》《动物森友会》。</li></ul></li><li><p>节奏游戏</p><ul><li>从音乐节奏得来快感是我们的天性，而非游戏提供的乐趣。对于这类游戏而言，玩家对当前曲目越为熟悉，也就越能体验到乐趣。</li><li>此类游戏围绕着“熟悉歌曲再打对节奏”进行设计，当然根据具体的设计手段也能带来拉扯程度，说明这种游戏也可将风险回报理论付诸实践。</li></ul></li></ol><p><strong>体育类游戏</strong></p><ul><li>现实中的体育活动均存在不同程度的拉扯，所以用数字化的形式重现体育项目，可以说它天生就带有一定的游戏性。</li><li>此外，运动之所有由观赏性，是因为观众都有自己支持的队伍，这些观众在玩游戏时很自然会将支持的队伍放在操作首选的位置，并能很强烈地感受到这个游戏里地起起伏伏。</li></ul><p>游戏性并非提供游戏乐趣地唯一要素。<code>先学会感受乐趣，再去学习如何打破常规。</code></p><h2 id="The-Fiend’s-Cauldron-“恶魔之缶”机制介绍"><a href="#The-Fiend’s-Cauldron-“恶魔之缶”机制介绍" class="headerlink" title="The Fiend’s Cauldron “恶魔之缶”机制介绍"></a>The Fiend’s Cauldron “恶魔之缶”机制介绍</h2><p>说到游戏难度，大部分游戏基本上都是“简单”、“普通”、“困难”三个等级。</p><p>“恶魔之缶”为《新光神话：帕鲁缇娜之镜》引入的难度调节机制。</p><ol><li><p>进入关卡前，画面中会先出现这个恶魔之缶。这是调节“紧张值”的东西，默认紧张值为2.0。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690707805627.png","alt":"恶魔之缶"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690708017732.png","alt":"恶魔之缶"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>当玩家往缶里加红心，后者为本作的结算货币，此时可以提高关卡的紧张值。随着紧张值的上升，游戏自身难度亦得以提高，此时敌人会变得更有攻击性，其攻击防御数值都会更高一些。但同时，得到的收益也会越多，可以获得更多的红心以及更为强力的武器。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709357716.png","alt":"恶魔之缶"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709382530.png","alt":"恶魔之缶"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>若是在关卡中死亡，此时缶中的红心就会撒掉一些，此时选择继续通关则会降低难度继续游戏。也会掉落一部分当前得到的红心，此时亦更难获得更高价值的收益要素。<br><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709443232.png" alt="恶魔之缶"></p></li><li><p>若想降低难度，也可以花费红心减少紧张值；紧张值降到0的话，此时玩家近乎无敌。<br><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709484191.png" alt="恶魔之缶"></p></li></ol><p>机制优势: </p><ul><li>玩家不用像采用传统难度机制的游戏那样用着简单难度一直打</li><li>玩家不会在一些高难度桥段卡关</li><li>风险回报理论的应用</li></ul><p>机制劣势：</p><ul><li>对于新玩家而言，容易让他们觉得这游戏过分硬核。这种促使玩家挑战极限的游戏自然难以与“休闲”二字挂钩。</li><li>2.0以下的紧张值对于可以降低难度这件事不怎么直观。新玩家是最需要降低难度的玩家群体。</li></ul><p>游戏性、拉扯程度、风险回报理论，以上内容赋予了“游戏感”的体验，但与此同时也让电子游戏显得不那么友好。</p><p>“恶魔之缶”虽然不完美，但它提供了电子游戏难度调节的全新设计思路，至今依然有学习参考的价值。</p><h2 id="Let-Players-Cheat-the-System-允许合法开挂"><a href="#Let-Players-Cheat-the-System-允许合法开挂" class="headerlink" title="Let Players Cheat the System 允许合法开挂"></a>Let Players Cheat the System 允许合法开挂</h2><p><code>游戏中的“策略”可以被定义为玩家最小化损失(Losses)和最大化收益(Gains)的过程。</code></p><p>游戏中的策略经常会以某些复杂的形式而构建，所以有时候可以利用系统机制玩出所谓“作弊”的手段。换句话说，就是完全不承担任何损失的情况下获得收益。</p><ul><li>在黑魂中，站在某个特定位置可以骗敌人自己掉下去摔死。</li></ul><h2 id="Falling-Sells-the-Feeling-of-Flight-飞行操作"><a href="#Falling-Sells-the-Feeling-of-Flight-飞行操作" class="headerlink" title="Falling Sells the Feeling of Flight 飞行操作"></a>Falling Sells the Feeling of Flight 飞行操作</h2><p>如果想在游戏制作过程中营造出在空中自由飞翔的感觉，首先要做的就是加入坠落伤害或是类似的惩罚机制。</p><p>大家当然想在那些存在飞行操作的游戏中做出好的手感，但是如果没有和飞行这个动作相左的元素的话，就总会让人觉得少了点什么。在有飞行要素的游戏中，此等“相左”元素即为坠落。</p><ul><li><p>在高速移动的作品中，玩家在触发某种条件后会减速。</p></li><li><p>在初代《皇牌空战》中，玩家在飞过海洋的路上会遇到一座特别长的桥梁，大家都想试试从桥下钢架穿过，从桥下成功拉起高度的感觉不要太爽。这种爽感的来源正式动作附带的风险以及成功将其克服的感觉。</p></li><li><p>在《飞天赛车》中，玩家的赛车在冲过特殊坡道后是会飞起来的，这样不光寻找飞行点会很有趣，赛车的能飞与否可让飞行本身的乐趣更上一层楼。</p></li></ul><p><code>在为作品添加机制的时候也要记得想想与之相反的机制，好比玩家的攻击手段和敌方的攻击手段理应成对出现，风险与回报也正是这相同硬币的两面。</code></p><h2 id="Do-We-Really-Need-Enemies-敌人存在的意义"><a href="#Do-We-Really-Need-Enemies-敌人存在的意义" class="headerlink" title="Do We Really Need Enemies? 敌人存在的意义"></a>Do We Really Need Enemies? 敌人存在的意义</h2><p>除开一些主打故事的以及益智游戏之外，绝大多数游戏里都有玩家需要打败的敌人。</p><p>除开个例，多数游戏给予玩家乐趣的方式是先施加，再释放压力。</p><ol><li>先制造障碍，障碍即是<code>压力（Stress）</code>。</li><li>障碍解除，是为<code>释放（Relief）</code>,这时玩家感到浑身轻松。</li><li>接着玩家获得物品或经验奖励，帮助玩家变得更强，此为<code>成长（Growth）</code>。</li><li>这样玩家就会对后续展开保持期待，并获得高度的满足感。结果便是移除下一个障碍变得更加轻松，谓之<code>推进（Progress）</code>，代表玩家可以进一步地探索作品。</li></ol><p>撇开打头阵的压力，剩下三个是让游戏真正变得好玩的要素，但是没有压力就很难做好后三者。</p><p>压力是有多种呈现形式的，并不一定非得通过杀敌和游戏机制设计不可。</p><ul><li>冒险游戏中的主人公和队友可能会深陷危机，这是压力。玩家则可以寻找能够释放这层压力的方式，并通过推进流程本身获得乐趣和愉悦感</li><li>购物的需要同样也是一种从施压到解压的过程，设置一些高价物品可以让玩家积累资源并怀有消费它们的期待感。</li></ul><p>游戏中是可以没有敌人的，但敌人带来施压和解压过程依旧必不可少，在设计作品时不妨尽可能试着引入成长和推进游戏的要素。</p><h2 id="Consider-Rewards-First-优先考虑奖励元素"><a href="#Consider-Rewards-First-优先考虑奖励元素" class="headerlink" title="Consider Rewards First 优先考虑奖励元素"></a>Consider Rewards First 优先考虑奖励元素</h2><p>游戏是需要在玩家击败敌方以及完成任务后提供奖励或是回报的，尤其是那些战斗占比较大的作品。</p><p>现今的游戏奖励可以表现为强化、金钱、经验值、技能点等形式。</p><p>回报，总体上讲，是玩家会去投入一款游戏的根本源泉。</p><p>像是金钱或分数即为随着游戏推进而不断积累的数值奖励，也需要同步设计对应的消费机制。</p><p>如果说一款游戏的消费体验打动不了玩家或者不顺畅，结果同样好不到哪去。</p><ul><li>素材也是一种可以用数值形式呈现的奖励，玩家收集来的素材能够接着创造新的物件，而游戏必须做到让玩家觉得能从整个过程中受益，且最终获得的物品极具价值，可以说这是一种相当高效的奖励机制。</li><li>其他类型奖励还有收集品，比如可用角色或装备。是否允许玩家用所持资源兑换这些收集品也取决于游戏本身的目标。</li></ul><p><code>奖励机制是让玩家持续玩下去的关键！</code></p><h2 id="Do-Competitive-Games-Have-to-Be-Complex-对抗型游戏的复杂度"><a href="#Do-Competitive-Games-Have-to-Be-Complex-对抗型游戏的复杂度" class="headerlink" title="Do Competitive Games Have to Be Complex? 对抗型游戏的复杂度"></a>Do Competitive Games Have to Be Complex? 对抗型游戏的复杂度</h2><p>要想入坑今时今日的对抗性游戏可得要点勇气，不少人都会犹豫，皆因这些游戏机制实在复杂，到了哪怕是看着别人玩都未必能搞懂这类游戏的玩法规则的地步。</p><p>有没有办法能让对抗游戏变得简单一点呢？</p><p>这里我们代入一下格斗游戏的场景：</p><ul><li>如果一个格斗游戏玩家没法移动，且只能使用单一拳击招式的话，这种游戏根本没有“对抗”可言，就是无聊至极的把对面按到死罢了。</li><li>于是我们加入了“走动”，这样就往对局中引入了“距离”的概念，但这还不够。</li><li>那么接着让玩家拳脚相交，亦能让踢技的硬直时间比拳头更长，踢技失误后对面还能还手。</li><li>再继续引入跳跃、防御、投技，每一点都可以让游戏的深度更上一层楼。</li></ul><p>在对抗格斗类游戏兴起之初，这类游戏的操作空间比起同时期的其他街机要来的更多，也就是所谓的“更有深度”。</p><p>招式绝对不是简简单单的出拳踢脚就罢了。将格斗游戏这个类型发扬光大的作品是《街霸2》，本作正是在对决设计上下了一番功夫，而其中诸多招式的特定使用规则更是让本作的游玩深度倍增。</p><p>当然这不意味着什么游戏都得把深度做到这种程度，只要广大玩家玩得开心就没问题。</p><p>不过如果想让游戏系统经得起长期推敲的话，其机制势必存在一定的复杂度。但至于这深度和广度的度在哪里，其实很难说。</p><p>其实某种程度上说，游戏的复杂性这事没法避免，但还是不要把习惯视为理所当然的好。</p><h2 id="Game-Essence-in-Falling-Block-Puzzle-Games-下落消除型游戏的游戏性"><a href="#Game-Essence-in-Falling-Block-Puzzle-Games-下落消除型游戏的游戏性" class="headerlink" title="Game Essence in Falling-Block Puzzle Games 下落消除型游戏的游戏性"></a>Game Essence in Falling-Block Puzzle Games 下落消除型游戏的游戏性</h2><p>市面上有不少类型的益智游戏，尽管说拼图类游戏并不存在任何博弈元素，而益智游戏的乐趣多源于“消除”的成就感。</p><p>《俄罗斯方块》理念最初来自于一种叫做“五联骨牌”的益智桌游，这款桌游需要玩家将12块形状各异的图块拼成一个完整的长方形。但和拼图游戏类似，五联骨牌也毫无游戏性可言。然而俄罗斯方块却有不少，产生差别的原因自然是因为后者存在风险与回报。</p><ul><li>下落消除型益智游戏的风险源自不断垒高的方块，垒得越高，自身思考的时间就越少。</li><li>相应的，玩家将方块消除即可减缓风险。要想一次性消除很多方块，玩家就得将自己置于险境之中，因此带来更强烈的满足感。</li><li>此外，游戏中方块的下落速度亦会随着时间推移变得越来越快，这样同样能增强风险，也让游戏过程更加刺激。</li><li>后续的俄罗斯方块还增加了一项机制，即玩家可以在方块落地后继续旋转和平移方块。这一点非常重要，皆因这种在刀尖上起舞的操作赋予了游戏更高一层的风险。</li></ul><p>消除解谜游戏非常简单直观，这就让这类游戏性同样十分好懂，设计这种游戏切勿只是从“消除方块”着手，相反应该去思考消除之所以有趣的原因。</p><p>只要能够理解游戏性的准则，就算是面对自己不擅长的类型也能很快完成构思。</p><h2 id="Dying-Comes-as-a-Relief-败北带来的快感"><a href="#Dying-Comes-as-a-Relief-败北带来的快感" class="headerlink" title="Dying Comes as a Relief? 败北带来的快感"></a>Dying Comes as a Relief? 败北带来的快感</h2><p>据某个海外的研究显示，人们在对抗型 FPS 游戏里击杀对手后会十分焦虑，反倒是在被击杀时会感到轻松。</p><ol><li><p>首先，角色可以不作为强调对象。</p><ul><li>想象角色死亡时的情景，如果游戏去强调角色本身的话，那每死一次都会让玩家心生不悦，但这并非此类游戏的实际情况。</li></ul></li><li><p>其次，失望情绪可以运用游戏规则扫清。</p><ul><li>不管是时间持续推进还是重新开新对局，只要能比较迅速的重新开启对局，玩家就可以接着玩下去，因为没有拿来沮丧的时间。</li></ul></li><li><p>最后，击败对方或许算不上一种回报。</p><ul><li>玩家的终极目标是获得胜利，如果打败的对手无法终结掉对局，目标便仍未达成，也就是说还不能放松。击败对手某种程度上也会向玩家展示一下自身被击败的样子。</li></ul></li></ol><p>不论玩家是击败了对手还是身为败北的一方，只要这些瞬间的乐趣能够打动玩家，那么它们就是最棒的娱乐消遣。</p><p>制作游戏时一定要仔细考虑这些方面，也包括如何让玩家失利后依旧继续游戏。</p><h2 id="Mountain-Climbing-Is-More-Than-Just-Climbing-有峰有谷的难度曲线"><a href="#Mountain-Climbing-Is-More-Than-Just-Climbing-有峰有谷的难度曲线" class="headerlink" title="Mountain Climbing Is More Than Just Climbing 有峰有谷的难度曲线"></a>Mountain Climbing Is More Than Just Climbing 有峰有谷的难度曲线</h2><p>在角色扮演以及其他一些含有角色成长要素的游戏里，需要在愈发难以对付的敌人和障碍中平衡好玩家的强度。</p><p>理想的玩家和敌人难度曲线应该是路途中要有峰有谷，过程中需要克服一定量的挑战，也会有一些平地供人休息。</p><p>一般来说，挑战通常都分布在 BOSS 战附近。<code>BOSS 不应该只是杂兵的加强版，相反 BOSS 战应该能迫使玩家形成对策，并且玩家在打过 BOSS 后也需要拿到与之匹配的丰厚奖励。</code></p><p>如果一个游戏的系统是敌人会和玩家同步强化，那么玩家推进游戏的动力将大打折扣，解决这种问题有多种不同办法，但任何办法都要为有趣对策留足生存空间。</p><h2 id="Make-Retries-Quick-落败重试一定要快"><a href="#Make-Retries-Quick-落败重试一定要快" class="headerlink" title="Make Retries Quick 落败重试一定要快"></a>Make Retries Quick 落败重试一定要快</h2><p>假设玩家在游戏里死亡了，需要重来，虽说具体还是根据游戏的总体目标和游戏性来定，但一般来说肯定是尽可能迅速要来得更好。</p><p>重开得快，玩家也就更有可能再次尝试而非直接放弃。试着减少让玩家感到无所事事的时间长度，让演出更加紧凑，读取时间也一定要短。</p><p>以重试来说，就其所带来的惩罚以及玩家需要重走流程量的内容度而言，也会影响玩家是否继续坚持玩下去，但最重要的还得数这一点：重开一定要快！</p><p>重开够快便能提升玩家对游戏难度和受阻之处的容忍度。</p><p>一味推进游戏并不足以让玩家一直保持兴致，关键是要让人上手操作。做到这点可以简单到让玩家按个键读读屏幕上的信息，但最好的办法莫过于尽快让人重新上手去玩。</p><p>要让玩家在失利的时候有切身实感，可以把失利时的效果做的浮夸而有力，但记得弄完就赶紧翻篇。这个效果的具体时长还是取决于游戏类型，不过应以 1~4 秒为主，再长就不太好了。并且演出效果放完后就赶紧让人上手操作，还要确保玩家不会一重开就被敌人弄死。</p><h2 id="Is-Your-Game-Appealing-Enough-to-Start-Over-作品是否有值得反复落败的魅力"><a href="#Is-Your-Game-Appealing-Enough-to-Start-Over-作品是否有值得反复落败的魅力" class="headerlink" title="Is Your Game Appealing Enough to Start Over? 作品是否有值得反复落败的魅力"></a>Is Your Game Appealing Enough to Start Over? 作品是否有值得反复落败的魅力</h2><p>受《恶魔之魂》《黑暗之魂》等魂类游戏大热的影响，从2010年代后期开始，高难度游戏的数量越发增多。这类游戏会互相影响，并进一步带热这股风潮。尤其可以指出的是那些有着角色会永久死亡及类似机制的游戏，也就是游戏失败就得从头再来，这种机制可谓构成 Rougelike 和 Rougelite 类游戏的核心。</p><p>Rougelike: 总的来说，是一类地图和道具随机生成，且死亡后从头开始的游戏。早期的 PC 游戏里有一个叫 Rouge 的作品，这个词就是从这来的。</p><p>Rougelite: 只包含了部分 Rouge 元素。和原版 Rouge 类型不同的那些动作类作品应该是 Rougelite，这类游戏所包含的十分灵活的动作和表现形式让它们玩起来颇具爽感，与此同时随机的装备，道具还有事件又会给每局游戏带来不同的体验。</p><p>类似 Rouge 的游戏就是 Rougelike，而仅仅只借鉴部分要素的就属于 Roguelite 。然后之其中的区别只有在提到 Rougelite 概念的时候才成立，所以把这类游戏统称 “Rougelike” 也无不妥。</p><p>死了就要重开这种机制其实非常适合独立游戏，游戏说到底本就已经需要重复劳作，那么有了这个机制，独立游戏就无须去做那么多的素材了，是件好事。</p><p>不过如果仔细想想，绝大多数玩家肯定不会喜欢一遍遍的从头开始并无限重复相同的内容。对于想要推进的人而言，他们更需要的是驱动力。动力一般来说即为想看接下来发展的感觉，但为了引出这点期望，需要给玩家一点能够期盼的盼头。换句话说，游戏本身要有足够的吸引力，如此方可吸引玩家继续推进。要是新引力不足或是变化不足，玩家就不会想进行重复的劳作。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E4%BD%9C%E5%93%81%E6%98%AF%E5%90%A6%E6%9C%89%E5%80%BC%E5%BE%97%E5%8F%8D%E5%A4%8D%E8%90%BD%E8%B4%A5%E7%9A%84%E9%AD%85%E5%8A%9B/1690726580787.png" alt="Alt text"></p><p>那我们又该怎样推出可以推动玩家前进的要素呢？</p><p>这就完全取决于游戏的体量，剧情讲述方式，以及填充内容的方式了。</p><p><code>身为游戏创作者，去思考自己作品能给到玩家怎样的吸引力会很有好处，尤其应该试着去思考玩家对于反复游玩同一块内容的感受。</code></p><h1 id="Planning-amp-Game-Design-企划和游戏设计"><a href="#Planning-amp-Game-Design-企划和游戏设计" class="headerlink" title="Planning &amp; Game Design 企划和游戏设计"></a>Planning &amp; Game Design 企划和游戏设计</h1><h1 id="Design-Specifics-设计细节"><a href="#Design-Specifics-设计细节" class="headerlink" title="Design Specifics 设计细节"></a>Design Specifics 设计细节</h1><h2 id="Stop-for-Big-Moments-画面定格"><a href="#Stop-for-Big-Moments-画面定格" class="headerlink" title="Stop for Big Moments! 画面定格"></a>Stop for Big Moments! 画面定格</h2><p>不要吝啬停顿效果的使用。</p><p>打击定格（Hit Stop）：指代触发特定动作之后所造成的停顿效果，是否应用此效果会直接影响打击力度的直观体现，是个非常重要的效果。</p><p>首领定格（Boss Stop）：指代的是击败 BOSS 那一刻所出现的画面停顿效果</p><p>在你游戏的关键时刻进行定格，让玩家们直观感受到胜利或挫败感吧。</p><h2 id="Giving”Weight”to-Buttons-构造操作手感"><a href="#Giving”Weight”to-Buttons-构造操作手感" class="headerlink" title="Giving”Weight”to Buttons 构造操作手感"></a>Giving”Weight”to Buttons 构造操作手感</h2><p>单纯是角色移动速度就会影响手感，还有诸如惯性、跳跃的物理机制、延迟、帧率等因素。</p><p>电子游戏是通过人与游戏设备的交互来游玩的，玩家通过眼睛和耳朵接收信息，然后用手的操作输入反馈信息。大家也许认为这两种传输是单向的，但是手是可以感知反馈的。</p><p>每种游戏设备的操作摇杆千差万别，所以在开发游戏的时候也需要考虑到摇杆自身的参数。</p><h2 id="Jump-Physics-跳跃机制"><a href="#Jump-Physics-跳跃机制" class="headerlink" title="Jump Physics 跳跃机制"></a>Jump Physics 跳跃机制</h2><p>首先，跳跃操作在编程时需要考虑哪些参数？</p><p>重点要设定一个角色处于空中时的落地方向加速度。首先设定默认的垂直方向上速度。</p><p>在任天堂全明星大乱斗SP中，每个角色的跳跃均设置了很高的起跳速度，随着帧数的推移，落地加速度也会逐步增大；当跳跃到最高点时，落地加速度会恢复为默认值。这样一来，即便玩家没有及时反应过来也可以跟上操作。如此引入了更多的参数以丰富该机制。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E8%B7%B3%E8%B7%83%E6%9C%BA%E5%88%B6/1690791713304.png" alt="Alt text"></p><h2 id="Eight-Hit-Stop-Techniques-大乱斗SP的打击定格设计技巧"><a href="#Eight-Hit-Stop-Techniques-大乱斗SP的打击定格设计技巧" class="headerlink" title="Eight Hit Stop Techniques 大乱斗SP的打击定格设计技巧"></a>Eight Hit Stop Techniques 大乱斗SP的打击定格设计技巧</h2><ol><li><p>提高受击角色晃动程度</p><ul><li>打击定格可令双方同时停止运动，打击受击方表现出更大的晃动，输出方晃动程度较低。</li></ul></li><li><p>勿动伤害判定区域（Hit Box）</p><ul><li>要是一个角色在受到打击时呈现晃动效果，到头来相当于也让其伤害判定区一起动，如此易使连招打空。在大乱斗中，仅角色建模晃动，自身伤害判定区域不动。</li></ul></li><li><p>地面水平方向晃动，空中随意方向晃动</p><ul><li>考虑到角色双方面对朝向问题，纵向晃动的表现效果会更好一些，但在地面上就容易搞出建模卡地板的问题。</li></ul></li><li><p>晃动幅度衰减</p><ul><li>晃动程度并非定量，它触发初始数值大，结束的时候数值小，可以按打击定格持续帧数去给合适的衰减渐变量。</li></ul></li><li><p>控制打击定格变量</p><ul><li>在大乱斗系列中，力度越高的招式其打击定格持续帧越多，有时候也会令其持续帧翻倍。以马尔斯横吹飞为例，它剑柄为输出更低的最次打击点，故晃动反馈较少；剑端为输出更高的最佳打击点，故而晃动明显。这不仅限于伤害输出区别，其表现效果也有成倍的差异。</li></ul></li><li><p>插入动作转化帧</p><ul><li>在不少游戏中，受到打击的角色会在打击定格时原地触发冻结帧，也就是固定一个姿势。但在大乱斗系列中，角色在受击时会有几帧转化动作的动画效果，不会直接冻结动作，也不会卡在特定受击反馈姿势上，而是在受击时以<code>4帧</code>左右的受击变化动画去过渡自身动作 <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793094038.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793147748.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793173908.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793207178.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li></ul></li><li><p>打击定格期间继续推进攻击方的微小动作</p><ul><li>如马尔斯朝对面的敌人横向挥挑时，打击定格期间，挥挑动作依然保持上挑的运动幅度。在打击定格中，攻击方动作的幅度相对较低，与常规帧相比微乎其微。完成打击定格后，动作幅度又会恢复至原有程度。这种效果可以针对性的开启，不是每个招式都有这种效果。</li></ul></li><li><p>晃动幅度以镜头相对距离而定</p><ul><li>当镜头拉远时，角色的晃动幅度通常要大一些，如此来保证无论镜头远近，打击定格所造成的晃动效果一致。</li></ul></li></ol><h2 id="Don’t-Anchor-Your-Center-Point-3D游戏的角色中心点"><a href="#Don’t-Anchor-Your-Center-Point-3D游戏的角色中心点" class="headerlink" title="Don’t Anchor Your Center Point 3D游戏的角色中心点"></a>Don’t Anchor Your Center Point 3D游戏的角色中心点</h2><p>3D游戏的镜头基本都会聚焦在一个“注视点”上，这个点通常是不可见的，但有镜头机制的游戏里通常都会有它。</p><p>游戏的视角之所以可以紧紧围绕玩家的角色旋转，正是因为镜头的中心就位于角色之上。换句话说，注视点锁定在了角色身上，但是不要把注视点安在角色上！</p><p>以《神游马力欧》为例，马力欧在地面移动的时，人物一直处于镜头中心；而在跳跃时，马力欧会偏离画面中心，到画面相对偏上的位置。</p><p>如果把注视点放在角色身上，镜头完全跟随角色移动的话，就很难分辨马力欧到底跳了多高。因此注视点不应该，或者尽可能低幅度以 Y 轴进行追踪，这样跳跃动作才会给玩家以高度感。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/3D%E6%B8%B8%E6%88%8F%E7%9A%84%E8%A7%92%E8%89%B2%E4%B8%AD%E5%BF%83%E7%82%B9/1690810214945.png" alt="Alt text"></p><p>选择正确的镜头形式能极大提升游戏表现力，但还是需要根据游戏类型选择合适的镜头效果。</p><ul><li><p>在《装甲核心》中，在上下左右移动之时，玩家操作的 AC 会避开画面中心，这样玩家能更容易看清需要躲开的子弹与导弹。</p></li><li><p>锁定注视点的做法和追求逼真的第三人称竞速游戏会很合拍。</p></li><li><p>《飞天赛车》中，当玩家漂移时，飞天赛车会略微偏移注视点。这么做是为了给玩家以真切的操作反馈，以及增强漂移时那种飞檐走壁的快感。</p></li><li><p>而对于那些意图提供更广阔视野的横板卷轴游戏，其镜头会更多去展现玩家前方的场景。</p></li></ul><p>总之，<code>切勿默认游戏镜头就应该跟随操作角色，而是应该根据游戏机制和表现需要做出合适选择。</code></p><h2 id="Say-No-to-Slow-！-规避“慢”的问题"><a href="#Say-No-to-Slow-！-规避“慢”的问题" class="headerlink" title="Say No to Slow ！ 规避“慢”的问题"></a>Say No to Slow ！ 规避“慢”的问题</h2><p>这个“慢”当然包括类似角色走不快这种字面意思上的慢，但更要紧的还得数那些过于耗费时间的东西，以及让人无事可做的大段空闲时间，具体来说指的就是那些没拿来爽玩反而被浪费掉的时间。</p><p>制作游戏时需要注意实际游戏时长，即真正由玩家操作的时长。在总游戏时长中属于玩家操作的时间有多少，无法操作的有多少<br>，以及纯粹无用的时间又有多少，需要悉数盘点。</p><p><code>让玩家等待是一种罪过！</code>虽然如今的游戏规模越来越大，大场面越来越多，但还是应该尽量轻装上阵，如此方为正道。</p><h2 id="Units-of-Speed-速度单位"><a href="#Units-of-Speed-速度单位" class="headerlink" title="Units of Speed 速度单位"></a>Units of Speed 速度单位</h2><p>速度即距离&#x2F;时间，知任意两项便可求第三项。</p><p>早期的像素游戏一般用“p来表示速度，意为每帧像素数，表示单个物件每帧会有多少像素产生移动。</p><p>3D游戏时代，不少作品角色和环境都按照真实比例制作，可以很方便的使用“公里小时”这样现实世界的单位。当然，根据游戏情况，依然需要用其他方式来表示速度。</p><p>不管是写文档还是调参，无法表示速度就无从开展工作，因此一定要用具体的速度标准和整个团队达成意义一致。</p><h1 id="Animation-动画"><a href="#Animation-动画" class="headerlink" title="Animation 动画"></a>Animation 动画</h1><h1 id="Graphics-图形"><a href="#Graphics-图形" class="headerlink" title="Graphics 图形"></a>Graphics 图形</h1><h1 id="Effect-特效"><a href="#Effect-特效" class="headerlink" title="Effect 特效"></a>Effect 特效</h1><h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><h1 id="Team-Management-团队管理"><a href="#Team-Management-团队管理" class="headerlink" title="Team Management 团队管理"></a>Team Management 团队管理</h1><h1 id="Audio-音效"><a href="#Audio-音效" class="headerlink" title="Audio 音效"></a>Audio 音效</h1><h1 id="Programming-amp-Tech-编程和技术"><a href="#Programming-amp-Tech-编程和技术" class="headerlink" title="Programming &amp; Tech 编程和技术"></a>Programming &amp; Tech 编程和技术</h1><h1 id="Marketing-市场营销"><a href="#Marketing-市场营销" class="headerlink" title="Marketing 市场营销"></a>Marketing 市场营销</h1><h1 id="Grab-Bag-杂谈"><a href="#Grab-Bag-杂谈" class="headerlink" title="Grab Bag  杂谈"></a>Grab Bag  杂谈</h1><h1 id="Game-Concepts-开发理念"><a href="#Game-Concepts-开发理念" class="headerlink" title="Game Concepts 开发理念"></a>Game Concepts 开发理念</h1>]]></content>
    
    
    <summary type="html">优秀的人永远值得被学习</summary>
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="游戏开发" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="任天堂" scheme="http://kongcai.tech/tags/%E4%BB%BB%E5%A4%A9%E5%A0%82/"/>
    
  </entry>
  
  <entry>
    <title>Camera Framework Essentials for Games</title>
    <link href="http://kongcai.tech/post/7f3fe033.html"/>
    <id>http://kongcai.tech/post/7f3fe033.html</id>
    <published>2023-07-15T15:01:07.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://dev.epicgames.com/community/learning/courses/RRr/unreal-engine-camera-framework-essentials-for-games">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/dev.epicgames.com/community/learning/courses/RRr/unreal-engine-camera-framework-essentials-for-games.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Camera Framework Essentials for Games</div>            <div class="tag-link-sitename">Epic</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="Understanding-Camera-Actors"><a href="#Understanding-Camera-Actors" class="headerlink" title="Understanding Camera Actors"></a>Understanding Camera Actors</h2><ul><li>Camera Component</li></ul><p>摄像机组件属于摄像机Actor类</p><ul><li>Camera Actor</li></ul><p>摄像机Actor是摄像机组件的封装类，这使得它们可以直接放入世界中。</p><p>视图窗口 <code>Show-&gt;Advanced-&gt;Camera Frustums</code> 可打开场景中的摄像机视锥范围显示</p><ul><li>Camera Responsibility Chain 摄像机责任链</li></ul><p>重要程度或管理顺序依次为：</p><p>Camera Component -&gt; Actor or Player Controller -&gt; Player Controller Manager</p><h2 id="Static-Dynamic-and-Active-Cameras"><a href="#Static-Dynamic-and-Active-Cameras" class="headerlink" title="Static,Dynamic,and Active Cameras"></a>Static,Dynamic,and Active Cameras</h2><p>Types of Camera:</p><ul><li>Static&#x2F;Fixed 静态或固定摄像机</li><li>Dynamic 动态摄像机</li><li>Active 激活的摄像机</li></ul><h2 id="Using-Spring-Arms"><a href="#Using-Spring-Arms" class="headerlink" title="Using Spring Arms"></a>Using Spring Arms</h2><p>创建组件 SpringArmsComponent，然后将Camera组件放在它的下一层级</p><h2 id="Common-Spring-Arm-Features"><a href="#Common-Spring-Arm-Features" class="headerlink" title="Common Spring Arm Features"></a>Common Spring Arm Features</h2><ul><li><p>Socket Offset<br>插槽偏移</p></li><li><p>Target Offset<br>目标偏移</p></li><li><p>Camera Collision<br>摄像机碰撞</p></li><li><p>Use Pawn Control Rotation<br>使用控制器的旋转控制摄像机旋转</p></li><li><p>lag<br>滞后、延迟</p><ul><li>Camera Lag<br>  摄像机延迟</li><li>Camera Rotation Lag<br>  旋转延迟</li><li>Camera Lag Speed<br>  延迟速度。数值越高，延迟越低。</li></ul></li></ul><h2 id="Types-of-Camera-Shake"><a href="#Types-of-Camera-Shake" class="headerlink" title="Types of Camera Shake"></a>Types of Camera Shake</h2><p>新建类-&gt; ALL ClASSES 中搜索 <code>Camera Shake</code>:</p><ul><li><code>CameraShakeBase</code><ul><li><code>DefaultCameraShakeBase</code> 和CameraShakeBase的唯一区别是会默认使用柏林噪声</li><li><code>MatineeCameraShake</code> 旧版摄像机抖动</li></ul></li></ul><h2 id="Single-Shot-Shake-Landing-Impact"><a href="#Single-Shot-Shake-Landing-Impact" class="headerlink" title="Single Shot Shake - Landing Impact"></a>Single Shot Shake - Landing Impact</h2><p>蓝图节点 <code>Play World Camera Shake</code></p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/Camera-Framework-Essentials-for-Games/1689424038814.png","alt":"Play World Camera Shake"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li>Shake 选取CameraShake类的预设</li><li>Epicenter 震中，即抖动输入的位置，代表抖动开始的位置</li><li>Inner Radius 内径，晃动最剧烈的区域</li><li>Outer Radius 外径，影响最远的区域</li></ul><p>摄像机是否能够看到震动，与玩家位置无关，取决于摄像机与震中的距离。</p><p>在场景中实时测试并查看抖动效果:</p><ol><li>确保视口菜单中的 <code>Realtime</code> 已开启</li><li>在场景中添加一<code>CameraShakeSourceActor</code></li><li>在视口菜单中勾选 <code>Allow Camera Shakes</code></li><li>菜单栏打开 <code>Window-&gt;Cinematics-&gt;Camera Shake Previewer</code></li><li>视口靠近抖动源，点击<code>Play</code>后即可看到抖动效果</li></ol><h2 id="Continuous-Camera-Shake-Sprinting"><a href="#Continuous-Camera-Shake-Sprinting" class="headerlink" title="Continuous Camera Shake - Sprinting"></a>Continuous Camera Shake - Sprinting</h2><p>编辑器中 <code>Shit + 鼠标左键</code> 可展开折叠栏下的所有折叠项</p><p><img src="/../img/Camera-Framework-Essentials-for-Games/1689420425301.png" alt="蓝图实现冲刺抖动示例"></p><h2 id="Switching-Cameras-with-View-Target-Blend-Method-1"><a href="#Switching-Cameras-with-View-Target-Blend-Method-1" class="headerlink" title="Switching Cameras with View Target Blend - Method 1"></a>Switching Cameras with View Target Blend - Method 1</h2><p>蓝图节点 <code>Set View Target with Blend</code></p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Camera-Framework-Essentials-for-Games/1689424362620.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>它会使用“设置混合”函数，随着时间的推移是视图目标过渡到新的Actor</p><h2 id="Switching-Cameras-with-View-Target-Blend-Method-2"><a href="#Switching-Cameras-with-View-Target-Blend-Method-2" class="headerlink" title="Switching Cameras with View Target Blend - Method 2"></a>Switching Cameras with View Target Blend - Method 2</h2><p>C++的实现方式</p><h2 id="Conclusion-to-Cameras-Framework-Essentials-for-Games"><a href="#Conclusion-to-Cameras-Framework-Essentials-for-Games" class="headerlink" title="Conclusion to Cameras Framework Essentials for Games"></a>Conclusion to Cameras Framework Essentials for Games</h2>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;div calss=&#39;anzhiyu-tag-link&#39;&gt;&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot;</summary>
        
      
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Game Ability System</title>
    <link href="http://kongcai.tech/post/a131da00.html"/>
    <id>http://kongcai.tech/post/a131da00.html</id>
    <published>2023-07-14T12:20:31.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GAS插件介绍"><a href="#GAS插件介绍" class="headerlink" title="GAS插件介绍"></a>GAS插件介绍</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1X5411V7jh/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1X5411V7jh/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">GAS插件介绍（入门篇） | 伍德 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Gameplay Ability System，简称（GAS）。是一个健壮的，高度可拓展的gameplay框架，通常用于构建RPG、MOBA等游戏的完整战斗逻辑框架。</p><p>通过GAS，可以快速地制作游戏中的主动&#x2F;被动技能、各种效果buff、计算属性伤害、处理玩家各种战斗状态逻辑。</p><p><strong>GAS提供了哪些功能？</strong></p><ol><li>实现了带有消耗和冷却功能的角色技能</li><li>处理数值属性（生命、魔法、攻击力、防御力）</li><li>应用状态效果（击飞、着火、眩晕）</li><li>应用游戏标签（GameplayTags）</li><li>生成特效和音效</li><li>完整的网络复制、预测功能</li></ol><p><strong>适合使用GAS的项目</strong></p><ol><li>C++项目，开发人员有充足的C++开发经验</li><li>使用Dedicated Server的联机游戏</li><li>项目有大量且复杂的技能逻辑设计需求</li></ol><p><strong>插件推荐</strong></p><ul><li><a href="https://marketplace-website-node-launcher-prod.ol.epicgames.com/ue/marketplace/en-US/product/able-ability-system">Able Ability System</a></li><li><a href="https://marketplace-website-node-launcher-prod.ol.epicgames.com/ue/marketplace/en-US/product/ascent-combat-framework-c-action-rpg-creator">Ascent Comba</a></li></ul><h3 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h3><h4 id="Ability-System-Component"><a href="#Ability-System-Component" class="headerlink" title="Ability System Component"></a>Ability System Component</h4><p>Ability System Component (ASC)是整个GAS的基础组件。</p><p>ASC本质上是一个UActorComponent，用于处理整个框架下的交互逻辑，包括<code>使用技能</code>（GameplayAbility）、包含<code>属性</code>（AttributeSet）、处理各种<code>效果</code>（GameplayEffect）。</p><p>所有需要应用GAS的对象（Actor），都必须拥有GAS组件。</p><p>拥有ASC的Actor被称为ASC的<code>OwnerActor</code>，ASC实际作用的Actor叫做<code>AvatarActor</code>。</p><p>ASC可以被赋予某个角色ASC，也可以被赋予PlayerState（可以保存死亡角色的一些数据）。</p><h4 id="GamePlay-Tags"><a href="#GamePlay-Tags" class="headerlink" title="GamePlay Tags"></a>GamePlay Tags</h4><p>FGameplayTags 是一种<code>层级标签</code>，有父子级关系，如 Parent.child.GrandChild 。通过 GamePlayTagManager 进行注册。</p><p>替代了原来的 Bool ,或 Enum 的结构，可以在玩法设计中更高效的标记对象的行为或状态。</p><h4 id="Gameplay-Ability"><a href="#Gameplay-Ability" class="headerlink" title="Gameplay Ability"></a>Gameplay Ability</h4><p>Gameplay Ability(GA) 标识了游戏中的一个对象（Actor）可以做的<code>行为或技能</code>。</p><p>能力（Ability）可以是<code>普通攻击</code>或者<code>吟唱技能</code>，可以是角色被<code>击飞倒地</code>，还可以是<code>使用某种道具</code>、<code>交互某个物件</code>，甚至<code>跳跃</code>、<code>飞行</code>等角色行为也可以是 Ability 。</p><p>Ability 可以被赋予对象或从对象的 ASC 中移除，对象同时可以激活多个 GameplayAbility 。</p><p><strong>基本的移动输入、UI交互行为则不能或不建议通过GA来实现。</strong></p><p><img src="/../img/Game%20Ability%20System/1690206082610.png" alt="GAS流程图"></p><h4 id="Gameplay-Effect"><a href="#Gameplay-Effect" class="headerlink" title="Gameplay Effect"></a>Gameplay Effect</h4><p>Gameplay Effect(GE) 是 Ability 对自己或他人<code>产生影响</code>的途径。</p><p>GE 通常可以被理解为我们游戏中的 buff 。 比如增益&#x2F;减益效果（修改属性）。</p><p>但是 GAS 中的 GE 也更加广义，释放技能时候的<code>伤害结算</code>，施加特殊效果的<code>控制</code>、<code>霸体</code>效果（修改 GameplayTag ）都是通过 GE 来实现的。</p><p>GE 相当于一个可配置的<code>数据表</code>，不可以添加逻辑。开发者创建一个 UGameplayEffect 的派生蓝图，就可以根据需求制作想要的效果。</p><h4 id="Attribute-Set"><a href="#Attribute-Set" class="headerlink" title="Attribute Set"></a>Attribute Set</h4><p>AttributeSet 负责定义和持有属性，并且管理属性的<code>变化</code>，包括<code>网络同步</code>。</p><p>需要在 Actor 中被添加为成员变量，并注册到 ASC(C++)。</p><p>一个 ASC 可以拥有<code>一个或多个（不同的）</code>AttributeSet，因此可以角色共享一个很大的 Attribute Set，也可以每个角色按需添加 Attribute Set。</p><p>可以在属性变化前（PreAttributeChange）后（PostCameplayEffectExecute）处理相关逻辑，可以通过委托的方式绑定属性变化。</p><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><ol><li><p>创建 <code>C++</code> 工程，开启 GAS 插件。</p></li><li><p>注册插件（C++中完成注册）</p></li></ol><p><code>/Source/GASSample/GASSample.Bulid.cs</code> 注册插件，自定义Task需要</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnrealBuildTool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GASSample</span> : ModuleRules</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GASSample</span><span class="params">(ReadOnlyTargetRules Target)</span> : base(Target)</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;</span><br><span class="line"></span><br><span class="line">PublicDependencyModuleNames.<span class="built_in">AddRange</span>(<span class="keyword">new</span> string[] &#123; <span class="string">&quot;Core&quot;</span>, <span class="string">&quot;CoreUObject&quot;</span>, <span class="string">&quot;Engine&quot;</span>, <span class="string">&quot;InputCore&quot;</span>, <span class="string">&quot;HeadMountedDisplay&quot;</span>, </span><br><span class="line"><span class="string">&quot;GameplayAbilities&quot;</span>,<span class="comment">/* 修改：注册插件 */</span></span><br><span class="line"><span class="string">&quot;GameplayTags&quot;</span>, <span class="string">&quot;GameplayTasks&quot;</span><span class="comment">/* 修改：自定义Task需要 */</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>修改 character 文件</li></ol><ul><li><code>/Source/GASSample/GASSampleCharacter.h</code>中添加引用、继承接口、申明ASC、实现接口方法、声明Ability数组。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CoreMinimal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/Character.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：添加引用</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AbilitySystemInterface.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AbilitySystemComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SampleAttributeSet.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GASSampleCharacter.generated.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">UCLASS</span>(config=Game)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AGASSampleCharacter</span> : <span class="keyword">public</span> ACharacter,</span><br><span class="line"><span class="keyword">public</span> IAbilitySystemInterface <span class="comment">//修改：继承接口</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">GENERATED_BODY</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Camera boom positioning the camera behind the character */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = Camera, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">USpringArmComponent</span>* CameraBoom;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Follow camera */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = Camera, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UCameraComponent</span>* FollowCamera;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：申明ASC</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = GameplayAbilities, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UAbilitySystemComponent</span>* AbilitySystem;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：实现接口方法</span></span><br><span class="line"><span class="function">UAbilitySystemComponent* <span class="title">GetAbilitySystemComponent</span><span class="params">()</span><span class="type">const</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：声明Ability数组</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category = Abilities)</span><br><span class="line">TArray&lt;TSubclassOf&lt;UGameplayAbility&gt;&gt; MyAbilities;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UPROPERTY</span>()</span><br><span class="line">USampleAttributeSet* AttributeSet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">AGASSampleCharacter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=Camera)</span><br><span class="line"><span class="type">float</span> BaseTurnRate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=Camera)</span><br><span class="line"><span class="type">float</span> BaseLookUpRate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改：添加BeginPlay</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">BeginPlay</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Resets HMD orientation in VR. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnResetVR</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Called for forwards/backward input */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveForward</span><span class="params">(<span class="type">float</span> Value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Called for side to side input */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveRight</span><span class="params">(<span class="type">float</span> Value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Called via input to turn at a given rate. </span></span><br><span class="line"><span class="comment"> * @param RateThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TurnAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Called via input to turn look up/down at a given rate. </span></span><br><span class="line"><span class="comment"> * @param RateThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LookUpAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Handler for when a touch input begins. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TouchStarted</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Handler for when a touch input stops. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TouchStopped</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="comment">// APawn interface</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SetupPlayerInputComponent</span><span class="params">(<span class="keyword">class</span> UInputComponent* PlayerInputComponent)</span> <span class="keyword">override</span></span>;</span><br><span class="line"><span class="comment">// End of APawn interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/** Returns CameraBoom subobject **/</span></span><br><span class="line"><span class="function">FORCEINLINE <span class="keyword">class</span> USpringArmComponent* <span class="title">GetCameraBoom</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> CameraBoom; &#125;</span><br><span class="line"><span class="comment">/** Returns FollowCamera subobject **/</span></span><br><span class="line"><span class="function">FORCEINLINE <span class="keyword">class</span> UCameraComponent* <span class="title">GetFollowCamera</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> FollowCamera; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">OnHealthChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintImplementableEvent)</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">K2_OnHealthChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">OnPhysicalChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintImplementableEvent)</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">K2_OnPhysicalChanged</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>/Source/GASSample/GASSampleCharacter.cpp</code> 中进行实例化</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GASSampleCharacter.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HeadMountedDisplayFunctionLibrary.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Camera/CameraComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Components/CapsuleComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Components/InputComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/CharacterMovementComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/Controller.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/SpringArmComponent.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">UAbilitySystemComponent* <span class="title">AGASSampleCharacter::GetAbilitySystemComponent</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> AbilitySystem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// AGASSampleCharacter</span></span><br><span class="line"></span><br><span class="line">AGASSampleCharacter::<span class="built_in">AGASSampleCharacter</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Set size for collision capsule</span></span><br><span class="line"><span class="built_in">GetCapsuleComponent</span>()-&gt;<span class="built_in">InitCapsuleSize</span>(<span class="number">42.f</span>, <span class="number">96.0f</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// set our turn rates for input</span></span><br><span class="line">BaseTurnRate = <span class="number">45.f</span>;</span><br><span class="line">BaseLookUpRate = <span class="number">45.f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don&#x27;t rotate when the controller rotates. Let that just affect the camera.</span></span><br><span class="line">bUseControllerRotationPitch = <span class="literal">false</span>;</span><br><span class="line">bUseControllerRotationYaw = <span class="literal">false</span>;</span><br><span class="line">bUseControllerRotationRoll = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Configure character movement</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;bOrientRotationToMovement = <span class="literal">true</span>; <span class="comment">// Character moves in the direction of input...</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;RotationRate = <span class="built_in">FRotator</span>(<span class="number">0.0f</span>, <span class="number">540.0f</span>, <span class="number">0.0f</span>); <span class="comment">// ...at this rotation rate</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;JumpZVelocity = <span class="number">600.f</span>;</span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;AirControl = <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a camera boom (pulls in towards the player if there is a collision)</span></span><br><span class="line">CameraBoom = <span class="built_in">CreateDefaultSubobject</span>&lt;USpringArmComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;CameraBoom&quot;</span>));</span><br><span class="line">CameraBoom-&gt;<span class="built_in">SetupAttachment</span>(RootComponent);</span><br><span class="line">CameraBoom-&gt;TargetArmLength = <span class="number">300.0f</span>; <span class="comment">// The camera follows at this distance behind the character</span></span><br><span class="line">CameraBoom-&gt;bUsePawnControlRotation = <span class="literal">true</span>; <span class="comment">// Rotate the arm based on the controller</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a follow camera</span></span><br><span class="line">FollowCamera = <span class="built_in">CreateDefaultSubobject</span>&lt;UCameraComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;FollowCamera&quot;</span>));</span><br><span class="line">FollowCamera-&gt;<span class="built_in">SetupAttachment</span>(CameraBoom, USpringArmComponent::SocketName); <span class="comment">// Attach the camera to the end of the boom and let the boom adjust to match the controller orientation</span></span><br><span class="line">FollowCamera-&gt;bUsePawnControlRotation = <span class="literal">false</span>; <span class="comment">// Camera does not rotate relative to arm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Note: The skeletal mesh and anim blueprint references on the Mesh component (inherited from Character) </span></span><br><span class="line"><span class="comment">// are set in the derived blueprint asset named MyCharacter (to avoid direct content references in C++)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：实例化ASC</span></span><br><span class="line">AbilitySystem = <span class="built_in">CreateDefaultSubobject</span>&lt;UAbilitySystemComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;AbilitySystem&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在OwnerActor的构造方法中创建的AttributeSet将会自动注册到ASC</span></span><br><span class="line">AttributeSet = <span class="built_in">CreateDefaultSubobject</span>&lt;USampleAttributeSet&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;AttributeSet&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// Input</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::SetupPlayerInputComponent</span><span class="params">(<span class="keyword">class</span> UInputComponent* PlayerInputComponent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Set up gameplay key bindings</span></span><br><span class="line"><span class="built_in">check</span>(PlayerInputComponent);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;Jump&quot;</span>, IE_Pressed, <span class="keyword">this</span>, &amp;ACharacter::Jump);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;Jump&quot;</span>, IE_Released, <span class="keyword">this</span>, &amp;ACharacter::StopJumping);</span><br><span class="line"></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;MoveForward&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::MoveForward);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;MoveRight&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::MoveRight);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span></span><br><span class="line"><span class="comment">// &quot;turn&quot; handles devices that provide an absolute delta, such as a mouse.</span></span><br><span class="line"><span class="comment">// &quot;turnrate&quot; is for devices that we choose to treat as a rate of change, such as an analog joystick</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;Turn&quot;</span>, <span class="keyword">this</span>, &amp;APawn::AddControllerYawInput);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;TurnRate&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TurnAtRate);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;LookUp&quot;</span>, <span class="keyword">this</span>, &amp;APawn::AddControllerPitchInput);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;LookUpRate&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::LookUpAtRate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// handle touch devices</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindTouch</span>(IE_Pressed, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TouchStarted);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindTouch</span>(IE_Released, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TouchStopped);</span><br><span class="line"></span><br><span class="line"><span class="comment">// VR headset functionality</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;ResetVR&quot;</span>, IE_Pressed, <span class="keyword">this</span>, &amp;AGASSampleCharacter::OnResetVR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::BeginPlay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Super::<span class="built_in">BeginPlay</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">nullptr</span> != AbilitySystem)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 修改：给ASC赋予技能</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">HasAuthority</span>() &amp;&amp; MyAbilities.<span class="built_in">Num</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; MyAbilities.<span class="built_in">Num</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (MyAbilities[i] == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">AbilitySystem-&gt;<span class="built_in">GiveAbility</span>(<span class="built_in">FGameplayAbilitySpec</span>(MyAbilities[i].<span class="built_in">GetDefaultObject</span>(), <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：初始化ASC</span></span><br><span class="line">AbilitySystem-&gt;<span class="built_in">InitAbilityActorInfo</span>(<span class="keyword">this</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnResetVR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">UHeadMountedDisplayFunctionLibrary::<span class="built_in">ResetOrientationAndPosition</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TouchStarted</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">Jump</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TouchStopped</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">StopJumping</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TurnAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// calculate delta for this frame from the rate information</span></span><br><span class="line"><span class="built_in">AddControllerYawInput</span>(Rate * BaseTurnRate * <span class="built_in">GetWorld</span>()-&gt;<span class="built_in">GetDeltaSeconds</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::LookUpAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// calculate delta for this frame from the rate information</span></span><br><span class="line"><span class="built_in">AddControllerPitchInput</span>(Rate * BaseLookUpRate * <span class="built_in">GetWorld</span>()-&gt;<span class="built_in">GetDeltaSeconds</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::MoveForward</span><span class="params">(<span class="type">float</span> Value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((Controller != <span class="literal">NULL</span>) &amp;&amp; (Value != <span class="number">0.0f</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// find out which way is forward</span></span><br><span class="line"><span class="type">const</span> FRotator Rotation = Controller-&gt;<span class="built_in">GetControlRotation</span>();</span><br><span class="line"><span class="function"><span class="type">const</span> FRotator <span class="title">YawRotation</span><span class="params">(<span class="number">0</span>, Rotation.Yaw, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get forward vector</span></span><br><span class="line"><span class="type">const</span> FVector Direction = <span class="built_in">FRotationMatrix</span>(YawRotation).<span class="built_in">GetUnitAxis</span>(EAxis::X);</span><br><span class="line"><span class="built_in">AddMovementInput</span>(Direction, Value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::MoveRight</span><span class="params">(<span class="type">float</span> Value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( (Controller != <span class="literal">NULL</span>) &amp;&amp; (Value != <span class="number">0.0f</span>) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// find out which way is right</span></span><br><span class="line"><span class="type">const</span> FRotator Rotation = Controller-&gt;<span class="built_in">GetControlRotation</span>();</span><br><span class="line"><span class="function"><span class="type">const</span> FRotator <span class="title">YawRotation</span><span class="params">(<span class="number">0</span>, Rotation.Yaw, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get right vector </span></span><br><span class="line"><span class="type">const</span> FVector Direction = <span class="built_in">FRotationMatrix</span>(YawRotation).<span class="built_in">GetUnitAxis</span>(EAxis::Y);</span><br><span class="line"><span class="comment">// add movement in that direction</span></span><br><span class="line"><span class="built_in">AddMovementInput</span>(Direction, Value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnHealthChanged</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">K2_OnHealthChanged</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnPhysicalChanged</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">K2_OnPhysicalChanged</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置完成后角色组件便会显示出 <code>AblilitySystem</code>。</p><ol start="4"><li><p>添加 GA 的逻辑</p></li><li><p>制作第一个 GA</p></li><li><p>制作 GE</p></li><li><p>受击</p></li><li><p>属性集</p></li><li><p>制作血条</p></li><li><p>实现扣蓝扣血逻辑</p></li></ol><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p><strong>先读代码，再做开发</strong></p><ul><li><p>什么时候需要扩展功能&#x2F;暴露接口？</p><ul><li>AtrributeSet 的属性回调 GetCameplayAttributeValueChangeDelegate</li><li>自定义 Task 节点（PlayMontageAndWaitForEvent）</li></ul></li><li><p>如何合理的规划 GA、GE 的蓝图种类和数量？</p><ul><li>如何处理繁多的 Cost 和 CoolDown GE (MakeOutgoingCameplayEffectSpec)</li><li>合理的使用继承逻辑（按类型抽象父类[主动技能、被动技能…]相关的默认 Tag）</li></ul></li></ul><h3 id="开发情景的改变"><a href="#开发情景的改变" class="headerlink" title="开发情景的改变"></a>开发情景的改变</h3><ol><li><p>对策划的要求更高</p><p> 需要战斗策划有基础的逻辑思维，通过蓝图实现技能设计的快速原型开发，把控GameplayTag的整体规划和配置。</p></li><li><p>适应新的技能配置方式</p><p> 不同于常见的直接配表方式，GAS 需要结合蓝图节点设计，Montage 编辑器，DataTable 配置来实现整体战斗开发。</p></li><li><p>复杂的伤害结算</p><p> 国内游戏开发通常会有复杂的属性成长和战斗结算方式，需要合理的编写 MMC(Modifier Magnitude Calculation) 来实现伤害结算等逻辑。</p></li></ol><h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><ol><li><p>GASDocument</p><p> <a href="https://github.com/tranek/GASDocumentation">https://github.com/tranek/GASDocumentation</a></p><p> <a href="https://blog.csdn.net/pirate310/article/details/106311256">https://blog.csdn.net/pirate310/article/details/106311256</a></p></li><li><p>官方说明文档和教学博客</p><p> <a href="https://docs.unrealengine.com/en-US/Gameplay/GameplayAbilitySystem/index.html">https://docs.unrealengine.com/en-US/Gameplay/GameplayAbilitySystem/index.html</a></p><p> <a href="https://www.cnblogs.com/JackSamuel/p/7155500.html">https://www.cnblogs.com/JackSamuel/p/7155500.html</a></p></li></ol><h2 id="深入GAS架构设计"><a href="#深入GAS架构设计" class="headerlink" title="深入GAS架构设计"></a>深入GAS架构设计</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1zD4y1X77M/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1zD4y1X77M/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">深入GAS架构设计 | EpicGames 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>🚀 待填坑…</p>]]></content>
    
    
    <summary type="html">High-level view of the Gameplay Ability System</summary>
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="UE5" scheme="http://kongcai.tech/tags/UE5/"/>
    
  </entry>
  
  <entry>
    <title>Modular Game Features（模块化游戏功能框架）</title>
    <link href="http://kongcai.tech/post/b1d6807b.html"/>
    <id>http://kongcai.tech/post/b1d6807b.html</id>
    <published>2023-07-06T21:41:19.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>If we want to go faster,we have to slow.</p></blockquote><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1j34y1B7Nf/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1j34y1B7Nf/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">模块化游戏功能框架 | Epic Games 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="发展由来"><a href="#发展由来" class="headerlink" title="发展由来"></a>发展由来</h2><h3 id="GamePlay"><a href="#GamePlay" class="headerlink" title="GamePlay"></a>GamePlay</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156059331.png" alt="Alt text"></p><h3 id="GameAbilitySystem"><a href="#GameAbilitySystem" class="headerlink" title="GameAbilitySystem"></a>GameAbilitySystem</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156491466.png" alt="Alt text"></p><h3 id="SubSystem"><a href="#SubSystem" class="headerlink" title="SubSystem"></a>SubSystem</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156624698.png" alt="Alt text"></p><h3 id="Game-Features"><a href="#Game-Features" class="headerlink" title="Game Features"></a>Game Features</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156743364.png" alt="Alt text"></p><p><strong>Why Game Features?</strong></p><ul><li>需要一种模块化的逻辑组织方式</li><li>新人更容易上手，因为无需了解其他项目的内在工作机制，就能开发这些独立功能</li><li>更少的漏洞，更易读代码。自包含的代码天然更易于进行单元测试，可以自然地避免在构建时意外或偶然地依赖其他代码</li><li>更轻松的在多个团队或项目中共享功能</li><li>更容易在大型或分布式开发环境中协作</li><li>更容易在“快迭代更新”游戏中迭代功能，也能快速安全地删除出现问题的功能</li></ul><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><h3 id="开启插件"><a href="#开启插件" class="headerlink" title="开启插件"></a>开启插件</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157158860.png" alt="Alt text"></p><h3 id="创建GF"><a href="#创建GF" class="headerlink" title="创建GF"></a>创建GF</h3><ul><li>必须放在：<code>Game/Plugins/GameFeatures/</code></li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157435014.png" alt="Alt text"></p><h3 id="显示GF"><a href="#显示GF" class="headerlink" title="显示GF"></a>显示GF</h3><ul><li>必须显示插件内容才可显示GameFeatures的内容</li><li>根目录下有一个插件同名的GameFeatureData，定义了该GameFeature的机制和Actions，不要改名！</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157468969.png" alt="Alt text"></p><h3 id="配置AssetManager"><a href="#配置AssetManager" class="headerlink" title="配置AssetManager"></a>配置AssetManager</h3><ul><li>配置P<code>rojectSettings/AssetManager</code>里的<code>PrimaryAssetTypes</code>以便可以加载GameFeatureData(若已自动加上则可以略过)</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157719929.png" alt="Alt text"></p><h3 id="配置Actions"><a href="#配置Actions" class="headerlink" title="配置Actions"></a>配置Actions</h3><ul><li>配置GameFeature的Actions</li><li>配置GF的初始状态</li><li>重启</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157876182.png" alt="Alt text"></p><h3 id="配置Actor"><a href="#配置Actor" class="headerlink" title="配置Actor"></a>配置Actor</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158319619.png" alt="Alt text"></p><h3 id="激活GF"><a href="#激活GF" class="headerlink" title="激活GF"></a>激活GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158363976.png" alt="Alt text"></p><h2 id="框架机制"><a href="#框架机制" class="headerlink" title="框架机制"></a>框架机制</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><ul><li>Core Game</li><li>Game Feature - <code>GF</code></li><li>UGameFeatureData - <code>GFD</code></li><li>UGameFeatureAciton - <code>GFA</code></li><li>UGameFeatureSubsystem - <code>GFS</code></li><li>UGameFrameworkComponentManager - <code>GFCM</code></li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158431456.png" alt="Alt text"></p><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158642833.png" alt="Alt text"></p><h3 id="Game-Features-启动流程-最初"><a href="#Game-Features-启动流程-最初" class="headerlink" title="Game Features 启动流程 - 最初"></a>Game Features 启动流程 - 最初</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158752012.png" alt="Alt text"></p><h3 id="创建加载策略"><a href="#创建加载策略" class="headerlink" title="创建加载策略"></a>创建加载策略</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158830025.png" alt="Alt text"></p><h3 id="创建加载策略-配置策略"><a href="#创建加载策略-配置策略" class="headerlink" title="创建加载策略-配置策略"></a>创建加载策略-配置策略</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158941431.png" alt="Alt text"></p><h3 id="GFS设置"><a href="#GFS设置" class="headerlink" title="GFS设置"></a>GFS设置</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159020554.png" alt="Alt text"></p><h3 id="GF-Policies-设置如何加载GF"><a href="#GF-Policies-设置如何加载GF" class="headerlink" title="GF Policies-设置如何加载GF"></a>GF Policies-设置如何加载GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159106347.png" alt="Alt text"></p><h3 id="GFD-Asset-Manager-配置"><a href="#GFD-Asset-Manager-配置" class="headerlink" title="GFD Asset Manager 配置"></a>GFD Asset Manager 配置</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159184122.png" alt="Alt text"></p><h3 id="加载GF-uplugin"><a href="#加载GF-uplugin" class="headerlink" title="加载GF.uplugin"></a>加载GF.uplugin</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159248581.png" alt="Alt text"></p><h3 id="GF状态-切换"><a href="#GF状态-切换" class="headerlink" title="GF状态 - 切换"></a>GF状态 - 切换</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165438216.png" alt="Alt text"></p><h3 id="GF状态机"><a href="#GF状态机" class="headerlink" title="GF状态机"></a>GF状态机</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165499787.png" alt="Alt text"></p><h3 id="GF状态机加载流程"><a href="#GF状态机加载流程" class="headerlink" title="GF状态机加载流程"></a>GF状态机加载流程</h3><ol><li><p>检查存在性<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165687299.png" alt="Alt text"></p></li><li><p>加载GF C++模块<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165738072.png" alt="Alt text"></p></li><li><p>加载GameFeatureData<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165789054.png" alt="Alt text"></p></li><li><p>预加载资产和配置<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165910937.png" alt="Alt text"></p></li><li><p>激活生效<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165973093.png" alt="Alt text"></p></li></ol><h3 id="GF状态机总结"><a href="#GF状态机总结" class="headerlink" title="GF状态机总结"></a>GF状态机总结</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166040444.png" alt="Alt text"></p><h3 id="GF状态监听"><a href="#GF状态监听" class="headerlink" title="GF状态监听"></a>GF状态监听</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166110209.png" alt="Alt text"></p><h3 id="AddComponent"><a href="#AddComponent" class="headerlink" title="AddComponent"></a>AddComponent</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166186622.png" alt="Alt text"></p><h3 id="GFA-AddComponent-最常见最重要"><a href="#GFA-AddComponent-最常见最重要" class="headerlink" title="GFA_AddComponent 最常见最重要"></a>GFA_AddComponent 最常见最重要</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166240315.png" alt="Alt text"></p><h3 id="AddComponent-Component"><a href="#AddComponent-Component" class="headerlink" title="AddComponent - Component"></a>AddComponent - Component</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166308740.png" alt="Alt text"></p><h3 id="AddComponent-Actor-BP"><a href="#AddComponent-Actor-BP" class="headerlink" title="AddComponent - Actor BP"></a>AddComponent - Actor BP</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166396840.png" alt="Alt text"></p><h3 id="AddComponent-Actor-C"><a href="#AddComponent-Actor-C" class="headerlink" title="AddComponent - Actor C++"></a>AddComponent - Actor C++</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166474798.png" alt="Alt text"></p><h3 id="GFA-Action扩展"><a href="#GFA-Action扩展" class="headerlink" title="GFA_Action扩展"></a>GFA_Action扩展</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166522618.png" alt="Alt text"></p><h3 id="GF-依赖机制"><a href="#GF-依赖机制" class="headerlink" title="GF 依赖机制"></a>GF 依赖机制</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166602959.png" alt="Alt text"></p><h3 id="GF-模块协作"><a href="#GF-模块协作" class="headerlink" title="GF 模块协作"></a>GF 模块协作</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166665288.png" alt="Alt text"></p><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="《古代山谷》项目"><a href="#《古代山谷》项目" class="headerlink" title="《古代山谷》项目"></a>《古代山谷》项目</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166788854.png" alt="Alt text"></p><h3 id="CoreGame预留好逻辑注入点"><a href="#CoreGame预留好逻辑注入点" class="headerlink" title="CoreGame预留好逻辑注入点"></a>CoreGame预留好逻辑注入点</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166843383.png" alt="Alt text"></p><h3 id="可继承扩展的类"><a href="#可继承扩展的类" class="headerlink" title="可继承扩展的类"></a>可继承扩展的类</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166906124.png" alt="Alt text"></p><h3 id="如何转换现有逻辑到GF"><a href="#如何转换现有逻辑到GF" class="headerlink" title="如何转换现有逻辑到GF?"></a>如何转换现有逻辑到GF?</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166952617.png" alt="Alt text"></p><h3 id="Rethink-in-GF"><a href="#Rethink-in-GF" class="headerlink" title="Rethink in GF"></a>Rethink in GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167635992.png" alt="Alt text"></p><h3 id="注意要点"><a href="#注意要点" class="headerlink" title="注意要点"></a>注意要点</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167736060.png" alt="Alt text"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167788987.png" alt="Alt text"></p>]]></content>
    
    
    <summary type="html">If we want to go faster,we have to slow.</summary>
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="UE5" scheme="http://kongcai.tech/tags/UE5/"/>
    
  </entry>
  
  <entry>
    <title>DataRegistry（数据注册表）</title>
    <link href="http://kongcai.tech/post/33896216.html"/>
    <id>http://kongcai.tech/post/33896216.html</id>
    <published>2023-07-04T11:27:11.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Data Registry（简称DR）是一种高效的全局存储空间，用于存储带有<code>USTRUCT</code>标记的数据结构。数据注册表支持同步和异步的数据访问，以及用户定义的缓存行为。数据注册表主要用于常见的只读数据。</p></blockquote><p>关于该新特性的官方介绍视频：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1qq4y1W7Ka">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1qq4y1W7Ka.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">DataRegistry：一种统领全局的新数据配置工具 | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="特性由来"><a href="#特性由来" class="headerlink" title="特性由来"></a>特性由来</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>数据驱动开发带来的好处以及当前主流的数据配置方式：</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688442719480.png","alt":"数据驱动"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688442884199.png","alt":"数据配置方式"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>各类数据配置方式优缺点介绍：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1dk4y1r752">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1dk4y1r752.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">UE4数据驱动开发 | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>鉴于每一种数据配置方式都有一套自己的数据读取方式，处理起来比较麻烦。</p><p>能不能有一种统领全局的数据配置方式，<code>可以存储、合并、读取和管理不同来源的数据</code>。</p><p>于是DataRegistry出现了。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>DR类似于<strong>复合数据表（Composite Data Tables）</strong>，但除了标准的表格数据行之外，还可以存储曲线数据。此外，它使用了一个间接层，而不是手动将多个表格合并在一起。</p><p>DR架构在DT之上，DR本身不直接配置数据，而是更好的组织数据，DT反而会变得更底层一些。DR相当于从多个表里生成临时数据，并且附带了许多优势和特点：</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688443913276.png","alt":"DR特性"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>Unreal数据管理的发展脉络可以简单理解为：<code>DataTable</code> -&gt; <code>CompositeDataTable</code> -&gt; <code>DataRegistry</code></p><p>由于其更好的扩展及缓存机制等优点，DR可能会是将来引擎里面统一的数据管理方式。目前在堡垒之夜中，已深度使用DR来管理数据。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="数据源（DataSource）"><a href="#数据源（DataSource）" class="headerlink" title="数据源（DataSource）"></a>数据源（DataSource）</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688453007962.png" alt="数据源"></p><p>数据注册表从两种数据源类型来采集数据：<strong>数据注册表源（Data Registry Sources）</strong>和<strong>元数据注册表源（Mata Data Registry Sources）</strong></p><ul><li><code>Data Registry Sources</code>：直接拥有你在数据注册表资产内的数组中所创建和配置的数据注册表源对象。</li><li><code>Mata Data Registry Sources</code>：只用来生成数据源的数据源，定义了一套规则，从某个路径里抓来新的数据源</li></ul><p>数据源在数据注册表中的顺序很重要，如果在某个数据源中未找到特定的数据项，数据注册表会在列表后面的数据源中查找该数据项。这样可能会产生覆盖和回退行为，并使得特定于上下文的数据源覆盖通用的数据源。</p><p>DR结构图：</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688453103439.png" alt="DR结构图"></p><ul><li>Subsystem对应多个DRA，即内存加载多个DAR都会保存在同一个Subsystem。所以说它是统一全局数据间接层。因为它有一个SubSystem可以得到所有的数据，而不像DataTable需要定义一个一个的表去做数据。</li><li>一个DRA对应多个数据源，数据源下当前有内置的DataTable、CurveTable以及对应的Meta类，Meta类通过定义规则，批量获得对应的数据源。</li></ul><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>数据注册表插件使用独有的标识符来查找数据注册表以及其中包含的单个数据项。这些标识符本质上都是基于字符串的名称，不过 <code>FDataRegistryType</code>（用于数据注册表资产）和 <code>FDataRegistryId</code>（用于数据注册表中的单个数据项）结构却属于包装器（wrapper），能提供实用的编辑器内部功能。 <code>FDataRegistryType</code> 用于辨识数据注册表资产， <code>FDataRegistryId</code> 用于辨识数据注册表和其中的特定数据项。如果你需要查找数据注册表资产或从中检索单个数据项，可以使用这些标识符类型。</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688468942222.png" alt="标识符"></p><p>每个数据注册表资产都必须在<strong>注册表类型（Registry Type）</strong>字段中具有唯一名称. 如果两个数据注册表资产在此字段中具有相同的名称，系统将仅识别和填充其中一个。类似的，如果多个数据项共用同一个标识数值（名称或Gameplay标签），注册表会读取所有项，但检索操作将仅访问数据注册表资产加载的第一个数据项.</p><h4 id="数据注册表资产标识符"><a href="#数据注册表资产标识符" class="headerlink" title="数据注册表资产标识符"></a>数据注册表资产标识符</h4><p>在设置数据注册表资产时，开发人员必须使用唯一命名来设置<code>Registry Type</code>。它是数据注册表的标识符。</p><h4 id="数据项标识符"><a href="#数据项标识符" class="headerlink" title="数据项标识符"></a>数据项标识符</h4><p>识别单个数据项时（例如数据表中的数据行），需要指定数据注册表资产和数据项本身。</p><p>如果数据注册表的ID格式使用Gameplay标签，用户界面将显示包含该Gameplay标签及其所有子项的筛选后列表。</p><p>如果数据注册表的ID格式未使用Gameplay标签，用户界面将显示一个下拉列表，其中包含数据注册表资产包含的所有已知数据行。</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688469623555.png" alt="IDFormat"></p><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="开启DR插件"><a href="#开启DR插件" class="headerlink" title="开启DR插件"></a>开启DR插件</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688444829702.png" alt="开启DR插件"></p><h3 id="项目设置DR扫描目录"><a href="#项目设置DR扫描目录" class="headerlink" title="项目设置DR扫描目录"></a>项目设置DR扫描目录</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688444905873.png" alt="项目设置"></p><h3 id="创建一个DRA"><a href="#创建一个DRA" class="headerlink" title="创建一个DRA"></a>创建一个DRA</h3><ul><li>设置全局唯一的DRT名字</li><li>设置IdFormat，如果想要用GamePlayTag来作为Item Id，否则留空</li><li>设置ItemStruct类型</li><li>设置DataSource</li></ul><p>配置说明：<br><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688452889812.png" alt="DR配置说明"></p><h3 id="点击刷新按钮来预览"><a href="#点击刷新按钮来预览" class="headerlink" title="点击刷新按钮来预览"></a>点击刷新按钮来预览</h3><p>DRA配置完成</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><ul><li>蓝图中获取DR数据的几种方式：<ul><li>Find Data Registry Item</li><li>Get Data Registry Item</li><li>Acquire Data Registry Item</li><li>Evaluate Data Registry Curve</li></ul></li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type1.png","alt":"方式一"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type2.png","alt":"方式二"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type3.png","alt":"方式三"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type4.png","alt":"方式四"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="其他补充"><a href="#其他补充" class="headerlink" title="其他补充"></a>其他补充</h3><ul><li>向DR中动态添加数据源:</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688465449709.png" alt="Alt text"></p><ul><li>手动加载Data Registry</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688465938249.png" alt="Alt text"></p><ul><li>自定义数据Id的动态解析</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688466011754.png" alt="Alt text"></p><ul><li>Cache 机制</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688467727627.png" alt="Alt text"></p><hr><p>参考资料：</p><ul><li><a href="https://docs.unrealengine.com/5.2/zh-CN/data-registries-in-unreal-engine/">数据注册表_官方文档</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Data</summary>
        
      
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="UE5" scheme="http://kongcai.tech/tags/UE5/"/>
    
  </entry>
  
  <entry>
    <title>关卡设计之创意玩法(神角技巧)</title>
    <link href="http://kongcai.tech/post/e184f650.html"/>
    <id>http://kongcai.tech/post/e184f650.html</id>
    <published>2023-07-03T11:57:27.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为还在神角技巧项目组是的一些设计灵感文档整理，大部分已经落地到游戏中，作为开放世界小玩法的关卡内容。</p></blockquote><h2 id="通用场景玩法设计"><a href="#通用场景玩法设计" class="headerlink" title="通用场景玩法设计"></a>通用场景玩法设计</h2><p>点击查看大图</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357523322.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357554944.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357569557.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357582949.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357599229.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357619104.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357685865.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357730595.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="指定场景玩法"><a href="#指定场景玩法" class="headerlink" title="指定场景玩法"></a>指定场景玩法</h2><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357868067.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357887137.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357910482.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357943891.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357962655.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357983481.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>以上玩法作为本人很早期的设计作品，还有许多优化空间，仅作为思路整理，仅供参考。</p>]]></content>
    
    
    <summary type="html">此为还在神角技巧项目组是的一些设计灵感文档整理，大部分已经落地到游戏中，作为开放世界小玩法的关卡内容。</summary>
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="关卡设计" scheme="http://kongcai.tech/tags/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="创意玩法" scheme="http://kongcai.tech/tags/%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95/"/>
    
    <category term="神角技巧" scheme="http://kongcai.tech/tags/%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>基于关卡的体验设计(Dawn)</title>
    <link href="http://kongcai.tech/post/80fc2ac6.html"/>
    <id>http://kongcai.tech/post/80fc2ac6.html</id>
    <published>2023-07-03T10:59:42.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此项为作品展示项，也是我工作的内容项。主要是设计要点的提炼，背后有大量设计文档内容，如有需要，请联系我。</p></blockquote><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E7%8E%A9%E6%B3%95%E6%A0%B8%E5%BF%83.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E4%BD%93%E9%AA%8C%E7%BB%B4%E5%BA%A6.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E6%95%B0%E6%8D%AE%E5%88%A9%E7%94%A8.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E5%A1%91%E9%80%A0%E4%BD%93%E9%AA%8C.png" alt="Alt text"></p><p>由以上几个设计要点输出的设计内容有：</p><ol><li><code>任务设计</code></li><li><code>战备设计</code></li><li><code>操作设计</code></li><li><code>游戏模式设计</code></li><li><code>美术表现设计</code></li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;此项为作品展示项，也是我工作的内容项。主要是设计要点的提炼，背后有大量设计文档内容，如有需要，请联系我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="关卡设计" scheme="http://kongcai.tech/tags/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="Dawn" scheme="http://kongcai.tech/tags/Dawn/"/>
    
  </entry>
  
  <entry>
    <title>Roll,Pitch,and Yaw</title>
    <link href="http://kongcai.tech/post/547f226e.html"/>
    <id>http://kongcai.tech/post/547f226e.html</id>
    <published>2023-06-29T17:48:01.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<p>“Roll”、”Pitch” 和 “Yaw” 是航空航天和机器人领域中用于描述物体或飞行器在三个不同轴上的旋转运动。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Roll-Pitch-and-Yaw/1688033142329.png","alt":"Alt text"},{"url":"../img/Roll-Pitch-and-Yaw/1688032592262.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li><p><code>&quot;Roll&quot;（翻滚）</code>是绕物体的纵轴（前后轴）旋转，使其绕横向轴产生旋转运动。类比于飞行器，翻滚是指飞机绕其纵轴（从头到尾的轴线）进行的旋转运动，即向左或向右倾斜。<br><img src="/../img/Roll-Pitch-and-Yaw/roll.gif" alt="Roll"></p></li><li><p><code>&quot;Pitch&quot;（俯仰）</code>是绕物体的横轴（侧向轴）旋转，使其绕纵向轴产生旋转运动。在飞行器的背后，俯仰是指飞机绕其横轴（从一侧到另一侧的轴线）进行的旋转运动，即向上或向下倾斜。<br><img src="/../img/Roll-Pitch-and-Yaw/pitch.gif" alt="Pitch"></p></li><li><p><code>&quot;Yaw&quot;（偏航）</code>是绕物体的垂直轴（竖直轴）旋转，使其绕垂直轴产生旋转运动。对于飞行器，偏航是指飞机绕其垂直轴（通过飞机重心向上的轴线）进行的旋转运动，即左右转向。<br><img src="/../img/Roll-Pitch-and-Yaw/yaw2.gif" alt="Yaw"></p></li></ul><p>这三个名词在Unreal蓝图三维向量节点中经常会出现：<br><img src="/../img/Roll-Pitch-and-Yaw/1688033955639.png" alt="Alt text"></p>]]></content>
    
    
    <summary type="html">&quot;Roll&quot;、&quot;Pitch&quot; 和 &quot;Yaw&quot; 是航空航天和机器人领域中用于描述物体或飞行器在三个不同轴上的旋转运动。</summary>
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="名词注释" scheme="http://kongcai.tech/tags/%E5%90%8D%E8%AF%8D%E6%B3%A8%E9%87%8A/"/>
    
  </entry>
  
  <entry>
    <title>Enhanced Input（增强输入系统）</title>
    <link href="http://kongcai.tech/post/b32ee82a.html"/>
    <id>http://kongcai.tech/post/b32ee82a.html</id>
    <published>2023-06-28T08:59:18.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV14r4y1r7nz">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV14r4y1r7nz.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">新一代增强输入框架EnhancedInput | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="问题由来"><a href="#问题由来" class="headerlink" title="问题由来"></a>问题由来</h2><h3 id="旧系统问题"><a href="#旧系统问题" class="headerlink" title="旧系统问题"></a>旧系统问题</h3><ul><li>旧系统实现基础的功能比较简单，但在想构建更复杂机制上就得需要在User层做更多的工作。例如角色在不同情景下的输入变化。（近战&#x2F;远程&#x2F;载具的操作模式切换）</li><li>过于简陋，需自己实现众多行为。例如按住&#x2F;攻击。</li></ul><h3 id="新系统目标"><a href="#新系统目标" class="headerlink" title="新系统目标"></a>新系统目标</h3><ul><li>重新梳理简化。Axis&#x2F;Aciton –&gt; Action</li><li>运行时重映射输入场景。UInputMappingContext</li><li>对初级用户易配置。大量默认行为实现，Tap&#x2F;Hold…</li><li>对高级用户易拓展，可继承子类拓展<ul><li>修改器：修改输入值</li><li>触发器：决定触发条件</li><li>优先级：配置输入场景优先级</li></ul></li><li>模块化，不再只依赖ini配置，以资源asset方式配置，堆栈式分隔逻辑。</li><li>提高性能，不需要检查所有输入，只需关心当前的场景和绑定。</li><li>UE5正式替换掉旧有输入系统</li></ul><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><ol><li>开启插件并重启编辑器</li></ol><p><img src="/../img/Enhanced%20Input/1688706220659.png" alt="开启插件"></p><ol start="2"><li>替换默认类型</li></ol><p><img src="/../img/Enhanced%20Input/1688031059407.png" alt="修改默认类"></p><ol start="3"><li>创建 <code>InputAction</code></li></ol><p><img src="/../img/Enhanced%20Input/1688706347006.png" alt="创建InputAction"></p><ol start="4"><li>创建 <code>InputMappingContext</code></li></ol><p><img src="/../img/Enhanced%20Input/1688706433891.png" alt="创建InputMappingContext"></p><ol start="5"><li>绑定Action委托</li></ol><p><img src="/../img/Enhanced%20Input/1688706754986.png" alt="绑定Action"></p><ol start="6"><li>应用 InputMappingContext</li></ol><p><img src="/../img/Enhanced%20Input/1688706878545.png" alt="应用 InputMappingContext"></p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="InputStack"><a href="#InputStack" class="headerlink" title="InputStack"></a>InputStack</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688708513286.png","alt":"InputStack"},{"url":"../img/Enhanced%20Input/1688721979414.png","alt":"InputStack"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="PlayerInput"><a href="#PlayerInput" class="headerlink" title="PlayerInput"></a>PlayerInput</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688722117498.png","alt":"PlayerInput"},{"url":"../img/Enhanced%20Input/1688722221393.png","alt":"InputComponent"},{"url":"../img/Enhanced%20Input/1688722267331.png","alt":"Input处理流程"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="EnhancedInput"><a href="#EnhancedInput" class="headerlink" title="EnhancedInput"></a>EnhancedInput</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688722826976.png","alt":"Enhanced Framework"},{"url":"../img/Enhanced%20Input/1688723124469.png","alt":"EnhancedPlayerInput"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h4 id="UInputComponent，输入组件（IC）"><a href="#UInputComponent，输入组件（IC）" class="headerlink" title="UInputComponent，输入组件（IC）"></a>UInputComponent，输入组件（IC）</h4><p><img src="/../img/Enhanced%20Input/1688723221759.png" alt="EnhancedInputComponent"></p><h4 id="UInputAction，输入动作（IA）"><a href="#UInputAction，输入动作（IA）" class="headerlink" title="UInputAction，输入动作（IA）"></a>UInputAction，输入动作（IA）</h4><p>输入操作在概念上等同于“操作”和“轴”映射名称，只是它们是数据资产。每个输入操作都应表示用户可以执行地操作，你可以在蓝图或C++中添加监听器，以便此输入操作的状态发生变化。</p><p>输入操作可以是几种不同的“类型”，这些“类型”将决定其行为。您可以制作简单的“布尔”操作或更复杂的 3D 轴。操作的类型决定了您可以从中获得什么价值。布尔操作将具有一个简单的布尔值，Axis1D 将是浮点值，Axis2D 将是 FVector2D，而 Axis3D 是整个 FVector。</p><p>当您有只有“开”或“关”状态的东西时，您应该使用“bool”操作。这相当于旧输入系统中的旧“操作”映射。对于游戏手柄操纵杆值等内容，可以使用 2D 轴操作来保持操纵杆位置的 X 和 Y 值。可以使用 3D 轴保存更复杂的数据，例如运动控制器信息。</p><p><img src="/../img/Enhanced%20Input/1688723647162.png" alt="InputAction"></p><ul><li>IA中的<code>Triggers</code>和<code>Modifiers</code>和IMC中的会同时生效，IA中的效果会针对这个action全局生效，无论绑定什么按键。</li></ul><h4 id="UInputModifier，输入修改器（IM）"><a href="#UInputModifier，输入修改器（IM）" class="headerlink" title="UInputModifier，输入修改器（IM）"></a>UInputModifier，输入修改器（IM）</h4><p>用于修改来自用户设备的原始输入值。在输入映射上下文中，每个输入动作的原始输入都可以关联任意数量的修饰器。常见修饰器包括死区、多帧输入平滑处理、将输入向量从本地空间转换到世界空间，以及插件中的一些其他修饰器。开发人员还可以创建自己的修饰器。</p><p><img src="/../img/Enhanced%20Input/1688723351747.png" alt="InputModifier"></p><h4 id="UInputTrigger，输入触发器（IT）"><a href="#UInputTrigger，输入触发器（IT）" class="headerlink" title="UInputTrigger，输入触发器（IT）"></a>UInputTrigger，输入触发器（IT）</h4><p>输入触发器确定用户输入在通过可选的输入修饰符列表后，是否应在其输入映射上下文中激活相应的输入操作。大多数输入触发器会分析输入本身，检查最小驱动值并验证短按、长时间保持或典型的“按下(<code>press</code>)”或“释放(<code>release</code>)”事件等模式。此规则的例外情况是依赖于另一个操作的任何触发器，例如“按弦操作(<code>Chorded Action</code>)”或“组合(<code>Combo</code>)”触发器。默认情况下，输入上的任何用户活动都将在每帧触发。</p><ul><li><code>Chorded Action</code>：通常用于描述一种通过按下多个键或按键的组合来执行特定操作或命令的输入方式</li></ul><p><img src="/../img/Enhanced%20Input/1688723487747.png" alt="InputTrigger"></p><p>触发器状态表示操作所处的当前状态，例如已触发（Triggered）、开始（Started）、持续（Ongoing）、完成（Completed）和取消（Canceled）。</p><ul><li><code>Triggered</code><ul><li>动作已触发，这意味着它已经完成对所有触发要求的评估。</li></ul></li><li><code>Started</code><ul><li>发生了已开始触发评估的事件。例如，第一次按下“双击”触发器将调用“已启动”状态一次。</li></ul></li><li><code>Ongoing</code><ul><li>触发器仍在处理中。例如，当用户在达到指定的持续时间之前按住按钮时，“按住”操作正在进行中。根据触发器，此事件将在收到输入值后触发正在评估操作的每个时钟周期。</li></ul></li><li><code>Completed</code><ul><li>触发器评估过程已完成。</li></ul></li><li><code>Canceled</code><ul><li>触发已取消。例如，用户在触发“长按”操作之前松开按钮。</li></ul></li></ul><h4 id="UInputMappingContext，输入映射上下文环境（IMC）"><a href="#UInputMappingContext，输入映射上下文环境（IMC）" class="headerlink" title="UInputMappingContext，输入映射上下文环境（IMC）"></a>UInputMappingContext，输入映射上下文环境（IMC）</h4><p>输入映射上下文是表示玩家所在的特定上下文的输入操作的集合。它描述了触发给定输入操作所需的规则。</p><p>在这里，你可以执行实际的“输入键到输入操作”绑定，并为每个操作指定其他触发器或修饰符。将IMC添加到增强输入子系统时，还可以为其指定优先级。</p><p><img src="/../img/Enhanced%20Input/1688724067454.png" alt="InputMappingContext"></p><h4 id="Player-Mappable-Input-Config-PMI"><a href="#Player-Mappable-Input-Config-PMI" class="headerlink" title="Player Mappable Input Config(PMI)"></a>Player Mappable Input Config(PMI)</h4><p>可映射配置是输入映射上下文的集合，表示映射的一个“配置”或“预设”。例如，您可以有一个“默认”和一个“左撇子”可映射配置，它们包含不同的输入映射上下文以进行瞄准。您还可以使用这些配置预定义一组上下文及其优先级，以便一次性添加它们，而不必手动添加输入映射上下文数组。</p><h4 id="EnhancedInput处理流程"><a href="#EnhancedInput处理流程" class="headerlink" title="EnhancedInput处理流程"></a>EnhancedInput处理流程</h4><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688724170723.png","alt":"EnhancedInput处理流程"},{"url":"../img/Enhanced%20Input/1688724401645.png","alt":"比较"},{"url":"../img/Enhanced%20Input/1688724486786.png","alt":"AddMappingContext流程"},{"url":"../img/Enhanced%20Input/1688724618741.png","alt":"EnhancedInputSubsystem"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="IMC-BindAction"><a href="#IMC-BindAction" class="headerlink" title="IMC BindAction"></a>IMC BindAction</h3><ul><li>初始情况应该在哪里开始应用IMC</li><li>后续运行时在蓝图中应该如何切换IMC</li><li>何时Remove IMC？</li><li>在哪里绑定Action和Axis</li><li>在蓝图中如何BindAction</li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688724917645.png","alt":"PlayerController"},{"url":"../img/Enhanced%20Input/1688725135376.png","alt":"Pawn"},{"url":"../img/Enhanced%20Input/1688725252675.png","alt":"PawnRemove"},{"url":"../img/Enhanced%20Input/1688725317235.png","alt":"IMC BingAction最佳实践"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><p><img src="/../img/Enhanced%20Input/1688725540514.png" alt="Debug"></p><h3 id="联动"><a href="#联动" class="headerlink" title="联动"></a>联动</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688725917343.png","alt":"联动GameFeatures01"},{"url":"../img/Enhanced%20Input/1688725743972.png","alt":"联动GameFeatures02"},{"url":"../img/Enhanced%20Input/1688725783610.png","alt":"联动GAS"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p><img src="/../img/Enhanced%20Input/1688725975620.png" alt="扩展"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/../img/Enhanced%20Input/1688726015986.png" alt="总结"></p><h2 id="于蓝图中的简单应用实例"><a href="#于蓝图中的简单应用实例" class="headerlink" title="于蓝图中的简单应用实例"></a>于蓝图中的简单应用实例</h2><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688029452250.png","alt":"Alt text"},{"url":"../img/Enhanced%20Input/1688029098466.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>如果操作未生效，可以去<code>Project Setting -&gt; Input -&gt; Default Classes</code>中看看是否开启：</p><p><img src="/../img/Enhanced%20Input/1688031059407.png" alt="Alt text"></p><hr><p>资料来源：</p><ul><li><a href="https://dev.epicgames.com/community/learning/tutorials/eD13/unreal-engine-enhanced-input-in-ue5">Enhanced Input in UE5</a></li><li><a href="https://docs.unrealengine.com/5.2/zh-CN/enhanced-input-in-unreal-engine/">Enhanced Input</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;div calss=&#39;anzhiyu-tag-link&#39;&gt;&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot;https://www.bilibili.com/video/BV14r4y1r7nz&quot;&gt;
    &lt;div</summary>
        
      
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="UE5" scheme="http://kongcai.tech/tags/UE5/"/>
    
  </entry>
  
  <entry>
    <title>战斗设计之经验谈01</title>
    <link href="http://kongcai.tech/post/17b23a90.html"/>
    <id>http://kongcai.tech/post/17b23a90.html</id>
    <published>2023-06-26T10:43:47.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<p>原本早早应该梳理的总结，却因为自己对设计方向的迷茫，而不知从何下笔。这几年在我个人的思考、他人设计的赏析、与朋友的讨论中，始终未能寻得一个答案。</p><p>这几年我总抱着“要做就做好，要不然就不做的”心态行事，完成了一些令人满意的工作，但也因此阻碍了前进的脚步。比如战斗设计方向上的探索，虽然想了许多，但因还不够好而却迟迟没有行动。因此想以本篇闲谈之文，开启探索方向上的行进旅程。</p><h2 id="个人偏好"><a href="#个人偏好" class="headerlink" title="个人偏好"></a>个人偏好</h2><p>没有最好的设计，只有最适合的设计。</p><p>战斗设计有许多种，不同类型游戏其所占比重及设计方向各有所不同。而我个人则更偏好实时操作、及时反馈的动作类战斗设计。</p><p>此类的代表作有：</p><ul><li>主机平台：鬼泣、猎天使魔女、忍龙、怪物猎人</li><li>手游平台：崩坏3、战双</li><li>网游平台：剑灵、DNF</li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687853945576.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687854668715.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687855866809.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687856121375.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>当然并不是说我完全喜欢以上游戏的战斗玩法设计。跟手的操作，以及战斗画面的精准反馈（打击感），这种战斗体验才是让我所喜欢的——所操作角色的感觉延伸至现实个体，从而带来强烈的沉浸感。</p><h2 id="战斗玩法设计的思考"><a href="#战斗玩法设计的思考" class="headerlink" title="战斗玩法设计的思考"></a>战斗玩法设计的思考</h2><p>“战斗玩法设计”是指在电子游戏或其他相关娱乐产品中，针对战斗或战斗系统的设计过程和方法。它包括游戏中的战斗机制、战斗规则、技能系统、武器装备、角色能力等方面的设计。</p><p>战斗玩法设计的目的是为了提供给玩家有趣、挑战性和令人满足的战斗体验。这需要考虑到玩家的参与感、游戏平衡性、战斗策略、动作操作、反应速度以及角色成长等方面的因素。</p><p>在战斗玩法设计中，开发者通常会设计不同的战斗模式或游戏关卡，提供多样化的敌对NPC或其他玩家对战的机会。他们会考虑角色的技能树和能力升级系统，以便玩家可以在游戏的进程中逐渐解锁更多强大的技能和装备，从而提升战斗的效果和乐趣。</p><p>战斗玩法设计还需要平衡不同的角色和武器之间的能力，以确保游戏中的战斗是公平且有挑战性的。开发者还可能会加入一些战斗机制，如特殊技能、连击系统、躲避机制等，以增加游戏的深度和战斗的策略性。</p><p>总而言之，战斗玩法设计是游戏开发中关键的一部分，它旨在为玩家提供丰富、刺激和令人满足的战斗体验，以增加游戏的乐趣和可玩性。</p><p>不过由于游戏品类众多，各战斗玩法层出不穷，无法以一个设计涵盖整个品类，这里仅以我个人的偏好说说我个人觉得好玩的战斗设计。</p><h3 id="战斗手感"><a href="#战斗手感" class="headerlink" title="战斗手感"></a>战斗手感</h3><p>无限逼近直觉设计：</p><ul><li>极低的操作延迟</li><li>丰富的操作行为</li><li>连贯的行为过渡</li><li>符合预期的视效与音效</li></ul><h3 id="战斗节奏及策略"><a href="#战斗节奏及策略" class="headerlink" title="战斗节奏及策略"></a>战斗节奏及策略</h3><p>我喜欢有节奏感的战斗设计，它有着以下几个特点：</p><ul><li>小技能与大技能的规律释放</li><li>技能招式的各种连段</li><li>战斗资源的不断循环</li><li>存在战斗谜题与解</li><li>战斗与关卡实时交互反馈</li></ul><h3 id="战斗故事"><a href="#战斗故事" class="headerlink" title="战斗故事"></a>战斗故事</h3><p>一场战斗的发生不是莫名其妙的，它可以是：</p><ul><li>推动剧情</li><li>获得奖励</li><li>个人挑战</li><li>满足好奇</li><li>符合生态</li></ul><h3 id="战斗数值"><a href="#战斗数值" class="headerlink" title="战斗数值"></a>战斗数值</h3><p>轻数值重操作：</p><ul><li>高水准的操作换来高数值的收益</li><li>操作可以是考验反应速度、对技能的理解与掌握、对战场的观察…….</li></ul><h3 id="战斗美感"><a href="#战斗美感" class="headerlink" title="战斗美感"></a>战斗美感</h3><p>战斗不光是要好玩，它还要足够漂亮，因此需要有：</p><ul><li>极具美感的镜头</li><li>生动的角色</li><li>漂亮的招式</li><li>符合情绪的场景</li><li>动人的音乐</li></ul><p>以上每一点的设计都足够拿出来写个长篇细说了，后面有时间再来填这个坑。</p><h2 id="战斗设计在项目研发中的一些问题"><a href="#战斗设计在项目研发中的一些问题" class="headerlink" title="战斗设计在项目研发中的一些问题"></a>战斗设计在项目研发中的一些问题</h2><p>近年来，由于个人职位的提升，逐渐能触及到战斗核心玩法设计，但也因此遇到以下矛盾问题：</p><ul><li>怎样的战斗才是好玩的战斗？</li></ul><p>受限于个人游戏经历和生活经验，每个人都对此有不同的看法。制作人有制作人的看法，主策有主策的看法，玩家有玩家的看法（玩家之间还分群体），而我也有我的看法。这就造成了一个问题，我该以什么样的视角或者是以谁的标准去制定3C的设计？如果以上所列举都是一类人群，只需遵照一个标准，那事情理所当然的顺利推进。但现实往往是令人啼笑皆非的，研发组内部能统一意见都算是庆幸的了，到玩家这一层面，又是一次巨大的挑战。</p><p>何解？</p><p>个人的看法是，集权或放权。是依照某一个人的想法（工作层面）或是遵从某一类玩家群体的意志（设计层面）、还是各有占比？只有把这个问题聊清楚聊干净了，那么才能说战斗设计的方向有了，战斗的核心战斗的灵魂才有了。 </p><ul><li>角色3C的体验设计如何界定？</li></ul><p>这个完全取决于个人审美水准。例如在增强打击感这块，镜头抖动和材质特效是公认的能强化打击感的手段，但有的设计者对这些效果的胡乱使用，导致玩家晕镜头或使画面显得廉价（点名《神陨》这款游戏）。</p><p>这个问题倒好解决，交给大众投票，或用过往作品证明自己的审美。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所谓战斗设计，更多的是一种艺术表达，而表达的方式远不止一种，适合项目的才是最好的。而从哪些方面去设计与表达，这个就见仁见智了。</p>]]></content>
    
    
    <summary type="html">梳理下战斗设计思路</summary>
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="经验总结" scheme="http://kongcai.tech/tags/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    <category term="战斗设计" scheme="http://kongcai.tech/tags/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记之Unreal蓝图</title>
    <link href="http://kongcai.tech/post/b5e676b7.html"/>
    <id>http://kongcai.tech/post/b5e676b7.html</id>
    <published>2023-06-25T20:37:57.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Blueprint-Communication"><a href="#Blueprint-Communication" class="headerlink" title="Blueprint Communication"></a><a href="https://dev.epicgames.com/community/learning/courses/LWv/unreal-engine-blueprint-communication/">Blueprint Communication</a></h2><h3 id="Public-Variables"><a href="#Public-Variables" class="headerlink" title="Public Variables"></a>Public Variables</h3><p>在和对象交流时，我们需要通过引用或变量来交流。作为两个对象中间的沟通桥梁或连接器。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687698745699.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li>对象引用（Object Reference）是关卡中拥有的东西，是关卡中存在的东西</li><li>类（Class Reference）是类本身，或者说它的构成元素，也就是定义这个项目的代码，我们可以在内容浏览器中看到它</li></ul><h3 id="Casting"><a href="#Casting" class="headerlink" title="Casting"></a>Casting</h3><p>转换类型是指把对象当作具体对象来操作，相当于为对象做进一步的说明，获取特定版本的对象，充分利用父子关系概念。</p><p>静态网格体Actor是Actor的子项，角色是Pawn的子项，同时也是Actor的子项。在使用蓝图的时候，我们可能需要获取层级更高的对象。通过类型转换，我们就可以把这个对象当作更具体的对象来操作。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687698102879.png","alt":"Alt text"},{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687697965897.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>通过类型转换，我们就可以将一个Actor作为BP（蓝图）来对待，然后和它交流；BP上有的变量，它上面的项目（Actor）没有这个变量，这个变量只有它和它的子项有。</p><p><code>任何时候，如果返回的不是你想要的对象类型，需要特别制定，你就可以使用类型转换。</code>还能用它快速检测某样东西是不是某样东西，你可以类型转换，如果不是，它就会失败。</p><h3 id="Blueprint-Interfaces"><a href="#Blueprint-Interfaces" class="headerlink" title="Blueprint Interfaces"></a>Blueprint Interfaces</h3><p>蓝图接口是允许两个对象相互通信的一种好方法，包括不同类型的对象。</p><p>例如，我可能想和一个对象沟通，告诉它我想和它互动，我只想让能和我互动的对象去做某些事情，除它以外的所有对象都忽略这个请求。</p><h3 id="Event-Dispatchers"><a href="#Event-Dispatchers" class="headerlink" title="Event Dispatchers"></a>Event Dispatchers</h3><p>有时候可能会发生一件事，然后很多东西都想知道这件事。例如，关卡结束了或者玩家死亡，我们可以在项目中创建专门的代码来处理这项工作，我们想看到的所有事件都可以放在一个地方，但这需要创建硬连接，我们可能不想要这样，不想要把应该在某个地方的代码放到其他地方，在一个地方处理所有事情，事实上我们不需要这么做，我们可以使用事件分发器。</p><p>它可以在事件发生时，让其他东西在更合适的地方处理这件事，你可以把它看作一张可以订阅的列表，有一个事件告诉我们玩家死了。所有订阅这个事件或列表的项目，都会在事件发生时收到通知，然后这些项目就可以根据这个事件做出不同的行为。</p><p>事件分发器非常有用，尤其是想让物品管理好自己的时候，而不是在一个地方处理所有事情</p><h2 id="Demonstrating-Animation-Blueprints-and-AI-for-Gameplay-Designers"><a href="#Demonstrating-Animation-Blueprints-and-AI-for-Gameplay-Designers" class="headerlink" title="Demonstrating Animation Blueprints and AI for Gameplay Designers"></a><a href="https://dev.epicgames.com/community/learning/courses/pl2/unreal-engine-demonstrating-animation-blueprints-and-ai-for-gameplay-designers/GxBZ/unreal-engine-demonstrating-animation-blueprints-and-ai-for-gameplay-designers-introduction">Demonstrating Animation Blueprints and AI for Gameplay Designers</a></h2><h3 id="layered-blend-per-bone"><a href="#layered-blend-per-bone" class="headerlink" title="layered blend per bone"></a>layered blend per bone</h3><p>可以以骨骼名称作为分层边界</p><h3 id="Save-Cached-Pose"><a href="#Save-Cached-Pose" class="headerlink" title="Save Cached Pose"></a>Save Cached Pose</h3><p>将动画蓝图中的输出的姿势进行缓存，用于后续调用；有点像蓝图提升为变量一样，可以在其他地方使用此变量值。</p><h3 id="Anim-Slot"><a href="#Anim-Slot" class="headerlink" title="Anim Slot"></a>Anim Slot</h3><p>给蒙太奇动画指定插槽，然后在动画蓝图中引用插槽进行动画输出。即蒙太奇动画只能通过插槽的方式参与角色动画蓝图</p><h3 id="PawnSendsing"><a href="#PawnSendsing" class="headerlink" title="PawnSendsing"></a>PawnSendsing</h3><p>AI感应组件中的一种，用于搜寻敌人</p><h2 id="初识UMG"><a href="#初识UMG" class="headerlink" title="初识UMG"></a><a href="https://dev.epicgames.com/community/learning/courses/q3r/unreal-engine-umg/vJDR/unreal-engine-3d74bf">初识UMG</a></h2><h3 id="Append"><a href="#Append" class="headerlink" title="Append"></a>Append</h3><p>能将多个字符串合并成一个字符串输出</p><h3 id="Add-to-Viewport-x2F-Add-to-Player-Screen"><a href="#Add-to-Viewport-x2F-Add-to-Player-Screen" class="headerlink" title="Add to Viewport&#x2F;Add to Player Screen"></a>Add to Viewport&#x2F;Add to Player Screen</h3><p><strong>创建控件原则：为谁所用，就在谁的蓝图上创建</strong></p><p>90%的情况下，创建控件显示用“Add to Viewport”,”Add to Player Screen”主要用于分屏显示，如果你的游戏和分屏显示或同屏多人显示无关，你就应该选择“Add to Viewport”。</p><h3 id="控件数据更新方式"><a href="#控件数据更新方式" class="headerlink" title="控件数据更新方式"></a>控件数据更新方式</h3><ol><li>控件的属性绑定（Binding）</li></ol><p>绑定的函数每帧都在运行，非实时更新的数据不建议，会消耗大量性能。只有计时器、倒计时、时钟，这类需要每帧精准显示的功能，才需要使用绑定功能</p><ol start="2"><li>新建更新功能函数，蓝图事件调用函数执行</li></ol><h3 id="Input-Mode（输入模式）"><a href="#Input-Mode（输入模式）" class="headerlink" title="Input Mode（输入模式）"></a>Input Mode（输入模式）</h3><ul><li><p>Set Input Mode UI Only（仅UI）</p></li><li><p>Set Input Mode Game Only （仅游戏）</p></li><li><p>Set Input Mode Game and UI （游戏和UI）</p></li></ul><p>输入模式节点（Set Input Mode）属于控制器（Get Player Controller）的功能函数</p><p>默认的输入模式是“Set Input Mode Game Only”，所有来自鼠标、手柄、周边设备以及键盘的输入仅针对游戏启用。在这种模式中，通常是你的手柄或其他设备接受输入信号。也就是说，是你的游戏视口接受输入，而不是你的UI。</p><p><strong>不要在打开关卡之后设置输入模式，因为在打开关卡后，不一定能保证执行后续逻辑。</strong></p><h3 id="Remove-from-Parent"><a href="#Remove-from-Parent" class="headerlink" title="Remove from Parent"></a>Remove from Parent</h3><p>将控件从父类中移除，用于隐藏界面中某一控件。或者切换界面。</p>]]></content>
    
    
    <summary type="html">无代码编程，希望自己能尽快掌握</summary>
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
    <category term="学习笔记" scheme="http://kongcai.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="蓝图" scheme="http://kongcai.tech/tags/%E8%93%9D%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Unreal实用小技巧</title>
    <link href="http://kongcai.tech/post/2ea21597.html"/>
    <id>http://kongcai.tech/post/2ea21597.html</id>
    <published>2023-06-25T10:54:10.000Z</published>
    <updated>2025-01-05T11:55:13.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Alt+P</td><td align="center">运行</td></tr><tr><td align="center">Esc</td><td align="center">退出</td></tr><tr><td align="center">Shift+F1</td><td align="center">呼出鼠标</td></tr><tr><td align="center">F8</td><td align="center">弹出</td></tr></tbody></table><h3 id="关卡编辑器"><a href="#关卡编辑器" class="headerlink" title="关卡编辑器"></a>关卡编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Shift+1</td><td align="center">模式-选择</td></tr><tr><td align="center">Shift+2</td><td align="center">模式-地形</td></tr><tr><td align="center">Shift+3</td><td align="center">模式-植物</td></tr><tr><td align="center">Shift+4</td><td align="center">模式-绘制</td></tr><tr><td align="center">Shift+5</td><td align="center">模式-模型编辑</td></tr><tr><td align="center">Shift+6</td><td align="center">模式-破碎</td></tr><tr><td align="center">Shift+7</td><td align="center">模式-笔刷编辑</td></tr></tbody></table><h3 id="视图窗口"><a href="#视图窗口" class="headerlink" title="视图窗口"></a>视图窗口</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">F11</td><td align="center">视口全屏</td></tr><tr><td align="center">Shift+F11</td><td align="center">编辑器全屏</td></tr><tr><td align="center">G</td><td align="center">游戏视图</td></tr><tr><td align="center">F</td><td align="center">聚焦选中的物体</td></tr><tr><td align="center">F9</td><td align="center">视口屏幕截图</td></tr><tr><td align="center">Alt+G</td><td align="center">视图-透视（默认）</td></tr><tr><td align="center">Alt+H</td><td align="center">视图-前</td></tr><tr><td align="center">Alt+Shift+H</td><td align="center">视图-后</td></tr><tr><td align="center">Alt+J</td><td align="center">视图-顶</td></tr><tr><td align="center">Alt+Shift+J</td><td align="center">视图-底</td></tr><tr><td align="center">Alt+K</td><td align="center">视图-左</td></tr><tr><td align="center">Alt+Shift+K</td><td align="center">视图-右</td></tr><tr><td align="center">Alt+C</td><td align="center">显示碰撞体</td></tr><tr><td align="center">Alt+F</td><td align="center">显示雾</td></tr><tr><td align="center">Ctrl+Shift+H</td><td align="center">显示FPS</td></tr><tr><td align="center">Ctrl+Shift+T</td><td align="center">显示工具栏</td></tr><tr><td align="center">Alt+0</td><td align="center">光照贴图密度</td></tr><tr><td align="center">Alt+2</td><td align="center">线框</td></tr><tr><td align="center">Alt+3</td><td align="center">无光照</td></tr><tr><td align="center">Alt+4</td><td align="center">光照</td></tr><tr><td align="center">Alt+5</td><td align="center">细节光照</td></tr><tr><td align="center">Alt+6</td><td align="center">仅光照</td></tr><tr><td align="center">Alt+7</td><td align="center">光照复杂度</td></tr><tr><td align="center">Alt+8</td><td align="center">着色器复杂度</td></tr></tbody></table><h3 id="内容浏览器"><a href="#内容浏览器" class="headerlink" title="内容浏览器"></a>内容浏览器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Ctrl+Shift+F</td><td align="center">打开内容浏览器</td></tr><tr><td align="center">Ctrl+Space</td><td align="center">打开内容浏览器抽屉</td></tr><tr><td align="center">Ctrl+B</td><td align="center">内容浏览器定位</td></tr><tr><td align="center">Ctrl+shift+N</td><td align="center">新建文件夹</td></tr><tr><td align="center">Space</td><td align="center">预览资源</td></tr><tr><td align="center">Ctrl+N</td><td align="center">新建关卡</td></tr><tr><td align="center">Ctrl+O</td><td align="center">打开关卡</td></tr><tr><td align="center">Ctrl+E</td><td align="center">编辑选中Actor</td></tr></tbody></table><h3 id="Actor-操作"><a href="#Actor-操作" class="headerlink" title="Actor 操作"></a>Actor 操作</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">W</td><td align="center">变换-移动</td></tr><tr><td align="center">E</td><td align="center">变换-旋转</td></tr><tr><td align="center">R</td><td align="center">变换-缩放</td></tr><tr><td align="center">Space</td><td align="center">变换-轮换</td></tr></tbody></table><h3 id="网格预览"><a href="#网格预览" class="headerlink" title="网格预览"></a>网格预览</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">I</td><td align="center">开关显示环境</td></tr><tr><td align="center">O</td><td align="center">开关显示地板</td></tr><tr><td align="center">P</td><td align="center">开关显示后期</td></tr></tbody></table><h3 id="蓝图编辑器"><a href="#蓝图编辑器" class="headerlink" title="蓝图编辑器"></a>蓝图编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">C</td><td align="center">注释</td></tr><tr><td align="center">Tab</td><td align="center">打开创建节点菜单</td></tr><tr><td align="center">Alt+鼠标左键</td><td align="center">断开引脚</td></tr><tr><td align="center">Ctrl+鼠标左键+Drag</td><td align="center">Get</td></tr><tr><td align="center">Shift+鼠标左键+Drag</td><td align="center">Set</td></tr><tr><td align="center">B+鼠标左键</td><td align="center">分支Branch</td></tr><tr><td align="center">D+鼠标左键</td><td align="center">延迟Delay</td></tr><tr><td align="center">F+鼠标左键</td><td align="center">循环ForEachLoop</td></tr><tr><td align="center">G+鼠标左键</td><td align="center">门节点Gate</td></tr><tr><td align="center">M+鼠标左键</td><td align="center">减缓Mutigate</td></tr><tr><td align="center">N+鼠标左键</td><td align="center">条件内多次执行DoN</td></tr><tr><td align="center">O+鼠标左键</td><td align="center">条件内单次执行DoOnce</td></tr><tr><td align="center">P+鼠标左键</td><td align="center">BeginPlay</td></tr><tr><td align="center">S+鼠标左键</td><td align="center">序列Sequence</td></tr><tr><td align="center">F7</td><td align="center">编译</td></tr><tr><td align="center">F9</td><td align="center">设置断点</td></tr><tr><td align="center">Ctrl+Shift+F9</td><td align="center">清除所有断点</td></tr><tr><td align="center">F10</td><td align="center">跳过</td></tr><tr><td align="center">F11</td><td align="center">跳进</td></tr><tr><td align="center">Alt+Shift+F11</td><td align="center">跳出</td></tr><tr><td align="center">双击鼠标左键</td><td align="center">添加中间连接点</td></tr><tr><td align="center">Q</td><td align="center">节点-拉直</td></tr><tr><td align="center">Shift+S</td><td align="center">节点-下对齐</td></tr><tr><td align="center">Shift+W</td><td align="center">节点-顶对齐</td></tr><tr><td align="center">Shift+A</td><td align="center">节点-左对齐</td></tr><tr><td align="center">Shift+D</td><td align="center">节点-右对齐</td></tr><tr><td align="center">Alt+Shift+W</td><td align="center">节点-水平对齐</td></tr><tr><td align="center">Alt+Shift+S</td><td align="center">节点-垂直对齐</td></tr></tbody></table><h3 id="材质编辑器"><a href="#材质编辑器" class="headerlink" title="材质编辑器"></a>材质编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1+鼠标左键</td><td align="center">常量Constant</td></tr><tr><td align="center">2+鼠标左键</td><td align="center">二维常量Constant 2Vector</td></tr><tr><td align="center">3+鼠标左键</td><td align="center">Constant 3Vector</td></tr><tr><td align="center">4+鼠标左键</td><td align="center">Constant 4Vecor</td></tr><tr><td align="center">A+鼠标左键</td><td align="center">Add</td></tr><tr><td align="center">B+鼠标左键</td><td align="center">凹凸贴图偏移BumpOffset</td></tr><tr><td align="center">D+鼠标左键</td><td align="center">Divide</td></tr><tr><td align="center">E+鼠标左键</td><td align="center">Power</td></tr><tr><td align="center">F+鼠标左键</td><td align="center">材质函数调用MaterialFunctionCall</td></tr><tr><td align="center">I+鼠标左键</td><td align="center">If</td></tr><tr><td align="center">L+鼠标左键</td><td align="center">线性插值Lerp</td></tr><tr><td align="center">M+鼠标左键</td><td align="center">乘Multiply</td></tr><tr><td align="center">N+鼠标左键</td><td align="center">标准化Normalize</td></tr><tr><td align="center">O+鼠标左键</td><td align="center">参数反向OneMinus</td></tr><tr><td align="center">P+鼠标左键</td><td align="center">相位Panner</td></tr><tr><td align="center">R+鼠标左键</td><td align="center">关联向量RelectionVector</td></tr><tr><td align="center">S+鼠标左键</td><td align="center">标量参数ScalarParameter</td></tr><tr><td align="center">T+鼠标左键</td><td align="center">纹理采样TextureSample</td></tr><tr><td align="center">U+鼠标左键</td><td align="center">纹理坐标TextureCoordinate</td></tr><tr><td align="center">V+鼠标左键</td><td align="center">向量参数VectorParameter</td></tr><tr><td align="center">Shift+C</td><td align="center">分离通道ComponentMask</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">一天一个小技巧，为工作加Buff</summary>
    
    
    
    <category term="Unreal" scheme="http://kongcai.tech/categories/Unreal/"/>
    
    
    <category term="Unreal" scheme="http://kongcai.tech/tags/Unreal/"/>
    
  </entry>
  
  <entry>
    <title>关卡设计之经验谈01</title>
    <link href="http://kongcai.tech/post/96253f08.html"/>
    <id>http://kongcai.tech/post/96253f08.html</id>
    <published>2023-06-23T09:53:54.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>设计的方式不止一种，没有所谓最好的方式。这里仅回顾过往设计所学所感，虽有些形式化，但对于梳理思绪或是面试之谈，还是有所帮助的。</p></blockquote><h2 id="设计任务01"><a href="#设计任务01" class="headerlink" title="设计任务01"></a>设计任务01</h2><p><code>如何设计一个副本（关卡玩法）？</code></p><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>这个问题其实问的挺笼统的，一般工作中这种问题只会出现在有明确上下文的情景中，只是在一些面试问答中还是会出现此类问题的。一是面试官没时间去想更具体地问题；二是可以借此考验一下面试者地发散思维（脑洞）。</p><p>针对这个问题，我们需要得到以下几个答案，可以是向需求人询问，也可以是自己思考并设定：</p><ul><li>游戏的核心玩法是什么？<ul><li>可以是游戏类型的说明：RPG\FPS\解密\赛车...</li><li>也可以是操作的说明：玩家可用的交互手段有哪些？</li></ul></li><li>副本所需承担的作用是什么（体验目标）？<ul><li>传递一种情绪：这里可以参考“情绪之轮”。狂喜、钦佩、惊愕、悲伤、厌恶、愤怒、警觉……</li><li>给予知觉反馈：人体五感，主要是视听体验和触觉反馈，其他反馈手段有待开发。</li><li>社交：如果是大型多人在线游戏，则这部分很重要。</li></ul></li><li>作为设计者的你想借此表达什么（设计目标）？<ul><li>能够运行游戏的硬件：手机、PC、主机、VR</li><li>游戏机制、动词和玩家活动：你希望看到玩家以怎样方式的游玩？</li><li>交互方式：触摸屏、键鼠还是手柄</li><li>游戏类型：如果没有明确的核心玩法，则这里可以思考怎样的玩法适合你的体验目标</li><li>游戏主题：你的游戏是关于什么？是多人组队协力通关副本，还是独自挑战击败最终大boss?</li><li>叙事主题：即故事的中心主题，是从坏蛋手中拯救公主的经典故事，还是其他更深刻的哲学探讨？</li><li>游戏的美术目标：卡通、二次元还是写实画面？</li><li>游戏的艺术目标：emmm，目前的我谈艺术还不够格，这里举例《风之旅人》</li><li>游戏的影响力目标：像是目前一些进入校园的教育类功能性游戏，其影响力就是让大家对游戏误人子弟的观念进行改观。</li></ul></li><li>副本参数有额外的规范要求么？<ul><li>设计数值限制：副本时长、角色属性……</li><li>性能参数限制：模型数量、模型面熟、光照数量……</li></ul></li><li>副本开发所需的时间和资源有限制么？<ul><li>几周or几个月？</li><li>能够投入的人力资源有多少？</li></ul></li></ul><p>以上这些信息仅作为参考，可以根据自己理想中设计进行增减要素。</p><h2 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h2><p>设计工具只是一种辅助手段，并不能决定设计的好坏。但运用得当的话，可以保证设计质量的下限。</p><h3 id="兴趣曲线"><a href="#兴趣曲线" class="headerlink" title="兴趣曲线"></a>兴趣曲线</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687490532113.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="情绪之轮"><a href="#情绪之轮" class="headerlink" title="情绪之轮"></a>情绪之轮</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_291652802540913.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="故事节拍"><a href="#故事节拍" class="headerlink" title="故事节拍"></a>故事节拍</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1493453804123156.jpeg","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687490738575.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="成就感知"><a href="#成就感知" class="headerlink" title="成就感知"></a>成就感知</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="250" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687489530668.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="渐进式教学"><a href="#渐进式教学" class="headerlink" title="渐进式教学"></a>渐进式教学</h3><p><img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687488922917.png" alt="Alt text"></p><h3 id="心流"><a href="#心流" class="headerlink" title="心流"></a>心流</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687491599004.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687491815763.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="设计流程"><a href="#设计流程" class="headerlink" title="设计流程"></a>设计流程</h2><ol><li>确定需求</li><li>设定目标</li><li>开始设计<ul><li><p>关卡草图：素描、线框图</p> <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495942543.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495763095.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>关卡白模</p><ul><li>白模制作<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496608701.png" alt="Alt text"></li><li>三视图<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495011470.png" alt="Alt text"></li><li>标准参数<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495096528.png" alt="Alt text"></li></ul></li><li><p>角色3C相关数值：</p><ul><li>人物体积、走跑速度、蹲伏高度、跳跃距离、攀爬高度</li><li>相机视野<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495293761.png" alt="Alt text"></li></ul></li><li><p>性能参数：</p><ul><li>Drawcall</li><li>资源大小</li><li>模型面数<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495409273.png" alt="Alt text"></li></ul></li><li><p>场景风格参考图</p> <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496174776.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496326574.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>玩法区域设计</p><ul><li>战斗热区</li><li>动线</li><li>兴趣点</li><li>更细节的设计描述补充<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687492298579.png" alt="Alt text"></li></ul></li><li><p>白盒文件链接</p><ul><li>附上文件下载地址和个人联系方式</li></ul></li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>依稀记得刚入行时，问主策用什么工具输出设计比较好？主策回答我说：不限工具，只要你能把自己的设计向他人清楚表述就行。随着工作项目经验的增多，愈发觉得，能让他人清楚并理解的设计就是好的设计，文档和工具不过一种形式。</p><p>如果你要问我如何做好一份关卡设计，我会给出这样一个简短的答案：</p><p><code>多玩多思多看，找到一种适合自己以及适合团队的方式，进行设计理念的传达。</code></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;设计的方式不止一种，没有所谓最好的方式。这里仅回顾过往设计所学所感，虽有些形式化，但对于梳理思绪或是面试之谈，还是有所帮助的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;设计任务01&quot;&gt;&lt;a href=&quot;#设计任务01&quot;</summary>
        
      
    
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/categories/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="游戏设计" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="关卡设计" scheme="http://kongcai.tech/tags/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="经验总结" scheme="http://kongcai.tech/tags/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>项目总结之《Dawn》</title>
    <link href="http://kongcai.tech/post/4bd7b3b2.html"/>
    <id>http://kongcai.tech/post/4bd7b3b2.html</id>
    <published>2023-06-21T14:35:59.000Z</published>
    <updated>2025-01-05T11:55:13.947Z</updated>
    
    <content type="html"><![CDATA[<p>在总结这款项目之前，先来让我介绍以下两款游戏：</p><h2 id="《胡闹厨房（Overcooked）》"><a href="#《胡闹厨房（Overcooked）》" class="headerlink" title="《胡闹厨房（Overcooked）》"></a>《胡闹厨房（Overcooked）》</h2><iframe src="https://store.steampowered.com/widget/448510/" frameborder="0" width="100%" height="190"></iframe><p>这是一款厨房合作游戏，每一关为了完成订单，你得先拿食材，切菜、煮菜，然后上菜。</p><p>这本来挺简单的，但餐厅可能坐落于摇摆的海盗船，或被地震一分为二，或乘着热气球，然后中途坠入另一间餐厅，于是你得同时供应寿司和沙拉了，就真的挺疯狂的。</p><p>游戏最大的挑战是让两名、三名甚至四名玩家合作顺畅。大家想要成功闯关就得保持紧密配合和交流，只是和以往的合作游戏不同。</p><h3 id="角色设计"><a href="#角色设计" class="headerlink" title="角色设计"></a>角色设计</h3><p>合作游戏总是妙趣横生，从往日的《魂斗罗》与《合金弹头》，到今天的《光环》与《茶杯头》，人人都知道与朋友一起玩，很多游戏会更有趣。但这些游戏很少要求你去真正的与搭档交流。这通常是因为游戏的<code>对称性（SYMMETRICAL）</code>，所以你与搭档的游戏方式几乎一模一样。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602123859.png","alt":"魂斗罗"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602153953.png","alt":"合金弹头"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602691239.png","alt":"光环"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602633706.png","alt":"茶杯头"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>以《生化危机5》为例，你玩着差别不大，无论是选主角克里斯（Chris），还是选谢娃（Sheva），他们都用枪，都能痛殴丧尸，都携带相同的装备。因为每个角色如此相近，你们常常觉得大家仿佛在各玩各的，只是偶尔相互支援一下。这跟后来的《生化危机：启示录2》截然不同，后者提供更差异化的角色，比如第一章，一人选了克莱尔·雷德菲尔德，她是那种传统的、全能的“生化”角色；另一人选了莫伊拉·伯顿，她不能用枪，但拿着一支手电筒，可以照亮敌人或暂时拖延它们。通过这种设计，两名玩家必须更紧密的合作，因为独自一人很难生存。克莱尔需要莫伊拉的手电筒，莫伊拉需要克莱尔的火力。这大大强化了两名玩家之间的依赖，并推动了某种配合与交流，这是许多合作游戏缺乏的。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601741073.png" alt="生化危机：启示录2"></p><p>如果说《启示录2》展示了能力不对称如何推动紧密配合，那么《没人会被炸掉（Keep Talking and Nobody Explodes）》则证明信息不对称也能强化团队合作。游戏里，一名玩家屏幕上显示着定时炸弹，上面满是线缆、按钮、按键和奇怪的玩意儿；另一名玩家拿着一份拆弹指南。于是玩家1必须描述炸弹，玩家2必须理解手册上的拆弹步骤。玩家1必须认真听，并遵循指令，唯一的通关方式就是合作。</p><p><code>非对称（ASYMMETRIC）</code>合作不仅强调交流，还能让不同技术水平的玩家玩到一起。这是任天堂近年大量尝试的，比如《超级马力欧：银河》。一名玩家控制马力欧像往常一样游玩，另一名玩家则轻松地扮演一枚浮标，收集星屑并拖住敌人。再比如《超级马力欧：奥德赛》，一名玩家控制马力欧，另一名玩家控制帽子，帽子可以帮助马力欧跳的更高更远，并且可以攻击敌人。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687603214865.png" alt="超级马力欧：奥德赛"></p><p>尽管非对称设计有利于合作，却不适合《胡闹厨房》。因为这款游戏要适应玩家人数，你可能是四人玩、三人玩、两人玩，甚至一个人玩。另外，这款游戏会吸引水平不同的玩家，所以要针对不同水平档次划分角色，确保那些还不熟悉游戏的人，不必完成高难度的动作，比如躲火球或在滑动平台间穿梭。这款游戏里，所有厨师的能力完全相同，信息完全对称。每个玩家都能独自完成从准备到上菜的所有工序，只要你们约定好各自分工…但《胡闹厨房》最后玩着却不是这样，why？其实，这里的秘诀在于关卡设计。</p><h3 id="关卡设计"><a href="#关卡设计" class="headerlink" title="关卡设计"></a>关卡设计</h3><p>从第一代第一关开始，厨房的设计中就有一条长岛横置中央，让你疲于奔命，从洋葱柜到切菜板，再到煮锅、传送带。只要两人合作，借助中间的桌子递洋葱，速度就快很多。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601404903.png" alt="Overcooked!"></p><p>几乎每一关都是如此，后期还会更糟糕，比如只能容纳一人的窄道、和场地被行驶的汽车分开。速度很重要，因为分数系统完全基于时间，菜要煮快点，否则气走顾客会被罚分。游戏也会催促你尽快上菜，你的最终得分全在于每关限定时间里能上多少道菜。所以，关卡设计和分数系统的要求，在潜移默化中推动玩家分饰不同的非对称角色。</p><p>比如下面这间厨房，一名玩家也许专注切菜和准备肉饼，另一名负责煎肉饼、叠汉堡并送到餐厅。这要求玩家每关开始前进行大量交流，确定各自分工，一起琢磨出完成订单的最高效策略。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601528622.png" alt="Overcooked!"></p><p>但在此之后，《胡闹厨房》可能会受累于非对称合作的最大缺点，你们会陷入某种固化模式：大家分配好角色，就不变了。某些游戏中，你们甚至可能不再需要交流，因为你们习惯了某种配合。但《胡闹厨房》并非如此，无论每次一开始商量得多好，大家最后都会乱成一团。为什么总是如此？</p><p>其实，这是因为很多巧妙地细节设计，它们扰乱大家的舒适区，迫使你们不断变换角色。</p><ol><li><strong>煮菜的等待时间</strong></li></ol><p>煎肉饼要几秒，所以站在那干等有点浪费，玩家会想走开，看看去别处能帮什么忙，这通常成了混乱之源。汉堡煎太久会起火，所以同伴不得不过来帮你擦屁股。</p><ol start="2"><li><strong>洗碗</strong></li></ol><p>没人喜欢洗碗，但它也许正是《胡闹厨房》成功的关键。因为没人专职洗碗，它没有别的任务那种愉快稳定的节奏，它在后期才变得重要，而且没人想管。这意味着每次干净盘子用完时，流水线被打断，锅开始着火，大伙的分工被搅得一团糟。</p><ol start="3"><li><strong>破坏性的关卡</strong></li></ol><p>移动的切菜板、摆上传送带的食材、移动的厨房、讨厌的老鼠，都会打破模式，摧毁最佳分工，迫使玩家不停地讨论新对策。</p><p>所以《胡闹厨房》是款没有非对称角色的非对称游戏，它充分运用关卡设计，比如奇葩的厨房布局、脏盘子、随机着火、燃烧的肉饼，推动大家分工合作，并在闯关过程中不断变化角色，引出精彩纷呈的交流。</p><h2 id="《地狱潜兵（HellDivers）》"><a href="#《地狱潜兵（HellDivers）》" class="headerlink" title="《地狱潜兵（HellDivers）》"></a>《地狱潜兵（HellDivers）》</h2><iframe src="https://store.steampowered.com/widget/394510/" frameborder="0" width="100%" height="190"></iframe><p>绝地潜兵是一款使用双操作杆操作游玩的多人合作式射击游戏，极具挑战性且耐玩度高。玩家将扮演精英部队“绝地潜兵”的一员，与其他玩家并肩作战，投身银河之战中保护超级地球，打倒敌人。</p><p><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687604573750.png" alt="Alt text"></p><p>尽管在加载界面Helldivers就明确了它的多人属性，当下降到gameplay时却会发现，除去“难度”门槛以外，再无任何能限制单机玩家顺利过关的要素。而难度本身也是作为相对概念存在，即单人与多人情况下地图的基准是相同的，区别仅仅在于一个人需要同时兼顾多个维度的工作。这在多人游戏中通过合理交流与配合可以被分摊到多个玩家身上，从而使得游戏变得相对容易，仅此而已。</p><p>在角色塑造上，Helldivers同样贯彻了对称准则。在背景故事设定以及实际游玩过程中，人物的概念均被模糊、独立与抽象化，更多的是作为技能的载体而存在。让一个角色与另一个角色形成差异的唯一途径就是玩家在任务开始前选择的技能，而技能选择上完全的开放性使得任何人都能扮演任何角色。这是几乎完全对称的设计。</p><h3 id="对称角色的非对称结构设计"><a href="#对称角色的非对称结构设计" class="headerlink" title="对称角色的非对称结构设计"></a>对称角色的非对称结构设计</h3><p>比起“抬起另一名玩家翻过墙壁”、“在信息不对等的情况下合作解密”等等硬性设计，Helldivers倾向于在潜移默化中引导玩家形成非对称结构。技能系统就是一个很好的例子。角色边界的模糊并不代表着消失。一定要划分的话，Helldivers依然可以切出侦察、反坦克、防御、补给等位置。如果你想，那么也能够选出一套兼顾所有的技能，但在多人实战中你很快就会发现，一个人大包大揽通常是行不通的。战场的混乱与绝对控制权的丧失使得在多人游戏中，扮演专一（抑或“专二”…）角色的作用要远高于全能型角色。这一引导在大幅降低个人操作难度的同时也强调了团队交流，所有角色共享的技能选择界面更是为配合性选择技能与补全提供了绝佳平台。</p><h3 id="非对称设计要点"><a href="#非对称设计要点" class="headerlink" title="非对称设计要点"></a>非对称设计要点</h3><p><code>能否有效避免模式的固化</code>是非对称设计的核心考量点，而Helldivers在这方面做的尤为出色。</p><p>它鼓励在战斗开始前进行交流与提前计划，然后再用各种方式扰乱之前固有模式，逼迫玩家进行新的、即时的交流与重新计划，形成一种延续的回环。这其中有诸多大放异彩的设计值得借鉴，例如适合所有角色的“空动作”：输入无线电、扫&#x2F;拆雷、提黑箱&#x2F;炮弹等等。这迫使进行该项工作的玩家暂停之前在团队中进行的工作，因而之前形成的脆弱平衡被打破，不管是团队自发还是为形势所迫，总要有其他人顶替之前缺失的部分。这就形成了角色的切换。再比如友军与空头仓伤害、角色的死亡与重生。这些看似恶意的设计不仅仅是为了给游戏增加欢乐，更是为了创造更多危急时刻、制造更多角色切换，为玩家提供展现团队交流与配合的空间。正是因为它们，玩家才有机会在被自己&#x2F;队友的蠢操作逗笑的同时体验通过完美合作获得胜利的感觉是多么美妙。</p><h2 id="《代号：Dawn》"><a href="#《代号：Dawn》" class="headerlink" title="《代号：Dawn》"></a><a href="https://www.taptap.cn/app/245399">《代号：Dawn》</a></h2><p>该项目是一款对标主机游戏《HellDivers》的手游项目，力求在手机上还原《HellDivers》的战斗体验，以及做好长线运营的商业模式。</p><h3 id="核心玩法"><a href="#核心玩法" class="headerlink" title="核心玩法"></a>核心玩法</h3><p>项目在研发过程，关于核心玩法的设计，有着以下几个阶段的讨论和演变：</p><table><thead><tr><th align="center">阶段</th><th align="center">核心玩法设计要点</th><th align="center">内部讨论概要</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">保留核心战斗元素“战备”的同时，将部分战备的效果赋予角色技能，从而实现战备与角色的共存</td><td align="center">这么设计的原因是项目内部一致认为角色更适合售卖和后期的运营，参照目前主流的二次元商业和运营模式</td></tr><tr><td align="center">2</td><td align="center">移除角色技能，与HD设计一致，采用对称式设计，玩法设计重心依旧放在战备、任务和怪物上</td><td align="center">分析了头部几家做大DAU类型的核心玩法设计与商业模式，同时为了规避新设计带来的风险，决定还是不轻易改动原核心玩法</td></tr><tr><td align="center">3</td><td align="center">简化操作难度和维度，战斗操作从服务于核心玩家，改为面向泛用户玩家</td><td align="center">几次玩家测试反馈以及游戏对于“大DAU”的最终目标追求，到部分人的个人意志，影响着项目向着不确定的方向开始转变</td></tr><tr><td align="center">4</td><td align="center">……</td><td align="center">从这里开始项目逐渐沉沦</td></tr></tbody></table><p>每个阶段过渡之间过程曲折，实属三言两语难以言尽，却都说明了一个问题，那就是项目立项一开始就没想清楚最终要做个什么样的游戏！</p><h3 id="商业模式"><a href="#商业模式" class="headerlink" title="商业模式"></a>商业模式</h3><p>“<code>大DAU</code>”带来的外观收入为主、数值收入为辅的商业模式。</p><p>鉴于项目在核心玩法层面的缺失，商业模式最终也没能完整落地。但我个人是坚信着，在一个好玩的核心玩法面前，商业模式的落地不过是水到渠成的一件事。</p><hr><p>资料来源：</p><ul><li><a href="https://www.youtube.com/watch?v=C3M8BvWcJQY">How Overcooked’s Kitchens Force You to Communicate</a></li><li><a href="https://zhuanlan.zhihu.com/p/57452709">Helldivers：对称与非对称</a></li></ul>]]></content>
    
    
    <summary type="html">多人合作的俯视角射击游戏</summary>
    
    
    
    <category term="工作" scheme="http://kongcai.tech/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
    <category term="Dawn" scheme="http://kongcai.tech/tags/Dawn/"/>
    
    <category term="游戏项目" scheme="http://kongcai.tech/tags/%E6%B8%B8%E6%88%8F%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="心得" scheme="http://kongcai.tech/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
</feed>
