<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>通过NAS搭建旁路由，实现科学上网</title>
      <link href="/post/5e9805a9.html"/>
      <url>/post/5e9805a9.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>之前解决了自建梯子的问题，但都需要搭配专门的客户端软件来使用。</p><p>手机和PC的使用还好说，其他像是游戏主机、掌机或是电视之类的设备要用代理就显得有些麻烦了，一是每台设备都要进行网络设置，二是作为代理网关的设备要一直在线。</p><p>因此决定充分发挥 NAS 的价值，构建一个用于日常代理的旁路由。</p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><h3 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h3><ul><li><p>主路由</p><ul><li><p>定义：主路由是网络的 核心枢纽，直接连接互联网（外网），负责所有设备的 基础网络服务。</p></li><li><p>核心职责：</p><ul><li>外网接入：通过 PPPoE、DHCP 等方式拨号上网，分配公网 IP。</li><li>NAT（网络地址转换）：将局域网设备的私有 IP 转换为公网 IP，实现多设备共享上网。</li><li>DHCP 服务：为局域网设备自动分配 IP 地址（如 192.168.1.x）。</li><li>基础防火墙：提供端口过滤、IP 黑名单等基础安全功能。</li></ul></li><li><p>典型应用场景</p><ul><li>家庭宽带接入（光猫+主路由）。</li><li>企业网络出口网关。</li><li>小型网络唯一路由设备。</li></ul></li><li><p>硬件特性</p><ul><li>通常为性能较强的设备（如企业级路由器、高性能家用路由器）。</li><li>支持多 WAN 口负载均衡、VPN 服务器等高级功能（高端型号）。</li></ul></li></ul></li><li><p>旁路由</p><ul><li><p>定义：旁路由是网络的 辅助网关，不直接连接外网，而是通过主路由接入互联网，专注于 特定流量处理。</p></li><li><p>核心职责：</p><ul><li>流量代理与分流：接管部分设备的流量，实现科学上网、广告过滤等。</li><li>高级服务扩展：运行 Docker 容器、VPN 客户端、DNS 服务器（如 AdGuard Home）。</li><li>网络策略管理：通过自定义路由表或防火墙规则，精细化控制流量路径。</li></ul></li><li><p>典型应用场景</p><ul><li>科学上网：运行 Clash、PassWall 等插件，代理特定流量。</li><li>去广告与隐私保护：部署 AdGuard Home 或 Pi-hole 过滤广告域名。</li><li>内网服务托管：运行 NAS、智能家居中枢等需长期在线的服务。</li><li>网络实验环境：测试新协议或服务（如 IPv6、WireGuard），避免影响主网络。</li></ul></li><li><p>硬件特性</p><ul><li>可以是低功耗设备（如树莓派、旧笔记本、软路由）。</li><li>通常仅需单网口（通过 VLAN 或单臂路由实现功能）。</li></ul></li></ul></li></ul><h3 id="方案类型"><a href="#方案类型" class="headerlink" title="方案类型"></a>方案类型</h3><ol><li><p>主旁路由网关互指，全局域网实现OP畅玩。</p><ul><li><p>将主路由中的DHCP网关指向旁路由，保持主路由本身的网关指向光猫。这样就可以让局域网内设备通过旁路由来进行流量分配，从而实现各种玩法。</p><ul><li><p>优点：主路由下的设备无须再次指向旁路由网关以及使用额外代理软件。</p></li><li><p>缺点：一旦旁路由挂了，全屋网络都会瘫痪。</p></li></ul></li></ul></li></ol><p><img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E4%B8%BB%E6%97%81%E8%B7%AF%E7%94%B1.png" alt="Alt text"></p><ol start="2"><li><p>设备单独指向旁路由网关，按需使用。</p><ul><li><p>需要使用旁路由来实现各种功能的设备，不要使用主路由的DHCP。而是配置静态路由，把网关单独指向旁路由IP。</p><ul><li><p>优点：旁路由不会影响全屋其他设备网络。</p></li><li><p>缺点：每台设备都需要在网络设置里将网关单独指向旁路由。</p></li></ul></li></ul></li></ol><p><img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E5%8D%95%E8%AE%BE%E5%A4%87%E6%97%81%E8%B7%AF%E7%94%B1.png" alt="Alt text"></p><h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><h3 id="通过虚拟机安装-istoreOS"><a href="#通过虚拟机安装-istoreOS" class="headerlink" title="通过虚拟机安装 istoreOS"></a>通过虚拟机安装 istoreOS</h3><ol><li><p>下载 istore 最新固件</p><ul><li>下载地址：<a href="https://fw.koolcenter.com/iStoreOS/x86_64_efi/">x86_64_efi</a></li><li>解压后获取 img 文件，并上传至极空间。<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/istoreOS%E4%B8%8A%E4%BC%A0.png" alt="Alt text"></li></ul></li><li><p>安装虚拟机</p><ul><li><p>修改极空间网络模式为<code>网桥模式（适用于软路由）</code><br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E4%BF%AE%E6%94%B9%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%BC%8F.png" alt="Alt text"></p></li><li><p>新建虚拟机<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA_1.png" alt="Alt text"></p></li><li><p>使用虚拟硬盘安装<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA_2.png" alt="Alt text"></p></li><li><p>虚拟机基础配置<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA_3.png" alt="Alt text"></p></li><li><p>虚拟机硬盘配置<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA_4.png" alt="Alt text"></p></li><li><p>虚拟机网卡配置<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA_5.png" alt="Alt text"></p></li><li><p>等待后台安装完成。</p></li></ul></li></ol><h3 id="iStoreOS配置旁路由"><a href="#iStoreOS配置旁路由" class="headerlink" title="iStoreOS配置旁路由"></a>iStoreOS配置旁路由</h3><ol><li><p>访问虚拟机VNC，输入命令<code>quickstart</code>，如果上一步安装时没退出，直接输入命令即可。<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/VNC.png" alt="Alt text"><br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/QuickStart.png" alt="Alt text"></p></li><li><p>选择<code>1. Change LAN IP</code>, 输入和主路相同网段的 IP 地址，这个地址便是进入后台管理页面的局域网地址了。<strong>这里如果没更改默认IP地址，就需要去主路由器后台管理页面查看当前新增的设备 IP 了。</strong><br><img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/ChangeIP.png" alt="Alt text"></p></li><li><p>输入 IP 地址，进入后台管理页面。默认用户名：<code>root</code>，密码：<code>password</code>。<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Login.png" alt="Alt text"></p></li><li><p>配置为旁路由模式<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/NetworkSetting.png" alt="Alt text"></p></li><li><p>详细配置及常见问题，可见官方说明文档<a href="https://doc.linkease.com/zh/guide/istoreos/network/check_connection.html#%E6%97%81%E8%B7%AF%E7%94%B1">iStoreOS</a>。</p></li></ol><h3 id="安装并配置-PassWall"><a href="#安装并配置-PassWall" class="headerlink" title="安装并配置 PassWall"></a>安装并配置 PassWall</h3><ol><li><p><a href="https://github.com/AUK9527/Are-u-ok/blob/main/apps/README.md">iStore软件包</a>下载<code>PsssWall</code></p></li><li><p>进入到 iStore 页签，选择手动安装。<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/passwall.png" alt="Alt text"></p></li><li><p>安装完成后即可在服务里看到 <code>PassWall</code> 配置页面。</p><ul><li><p>在节点列表中添加VPN节点链接。（如有自建节点需求，详见：<a href="/post/93337678.html" title="基于个人服务器的VPN构建">基于个人服务器的VPN构建</a>）<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/addNode.png" alt="Alt text"></p></li><li><p>添加完成后可以在这里进行网络连通性测试。<br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/TCP%20Ping.png" alt="Alt text"></p></li><li><p>基本设置中，主要的就三个配置<code>主要</code>、<code>DNS</code>、<code>模式</code>，一般默认即可，有诉求的可以自行修改。</p><ul><li><p>主要：开关以及节点选择配置<br>  <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Setting_main.png" alt="Alt text"></p></li><li><p>DNS：解析域名的IP地址，用于代理规则中判断当前地址是否需要代理。<br>  <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Setting_DNS.png" alt="Alt text"></p></li><li><p>模式：代理规则，一般选择<code>中国列表以外</code>即可。<br>  <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Setting_Mode.png" alt="Alt text"></p></li></ul></li></ul></li></ol><h3 id="主路由器配置"><a href="#主路由器配置" class="headerlink" title="主路由器配置"></a>主路由器配置</h3><ol><li><p>主路由 DHCP 网关指向旁路由。</p><ul><li>这里以我用的小米路由器为例，在局域网设置中将 DHCP 的默认网关和 DNS1 改成旁路由的 IP 地址。<ul><li><strong>后续如果旁路由挂了，DHCP 下的设备都将无法访问网络，需将这两个配置删除或改为主路由默认网关后，便可恢复。</strong><br> <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/MiWiFi.png" alt="Alt text"></li></ul></li></ul></li><li><p>测试设备网络是否正常连通以及外网是否可以访问。</p></li></ol><h3 id="常见问题处理"><a href="#常见问题处理" class="headerlink" title="常见问题处理"></a>常见问题处理</h3><ul><li>PassWall 节点列表 Ping&#x2F;TCPing&#x2F;URL测试都能通，但在基本测试中像是百度连接和谷歌连接都连接失败<ul><li><p>DNS 分流设置错误</p><ul><li><p>PassWall 的 DNS 分流模式若未正确配置，可能导致域名解析未通过代理服务器。需检查以下设置：</p><p>  分流模式：选择 dnsmasq，并确保 远程 DNS 设置为境外 DNS（如 8.8.8.8），直连 DNS 使用本地 DNS（如运营商默认 DNS）。</p><p>  过滤代理域名 IPv6：若未启用 IPv6 代理，需取消勾选此选项，避免解析冲突。</p></li></ul></li><li><p>防火墙配置</p><ul><li><p>区域设置中，关闭SYN-flood防御，入站&#x2F;出战&#x2F;转发数据全部改为<code>接受</code>。<br>  <img src="/../img/%E9%80%9A%E8%BF%87NAS%E6%90%AD%E5%BB%BA%E8%BD%AF%E8%B7%AF%E7%94%B1%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/FireWall.png" alt="Alt text"></p></li><li><p>进入<code>网络&gt;防火墙&gt;自定义规则</code>，添加如下规则以确保流量正常转发。</p></li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure><ul><li>保存并重启防火墙服务。</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Follow - 新一代RSS阅读器</title>
      <link href="/post/c1ea16e5.html"/>
      <url>/post/c1ea16e5.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h2><blockquote><p>” 我们身处信息爆炸的时代，只是信息爆炸了，但知识并没有爆炸。海量的信息不仅增加了我们甄别筛选知识的难度，还让我们随时随地处于即时信息和肤浅信息的包围中。“</p></blockquote><h3 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h3><p>如今的社会中，信息是个既廉价又宝贵的资源。廉价到通过手机唾手可得，却又在某些时刻，贵重到一个信息差，能拉开人与人之间的社会差距。</p><p>在和同事的一次闲聊中，我聊到自己不太喜欢国内这种全家桶式的软件设计。于是他接过话题，开始说到微信这款国民级软件，广告越来越多、刷不到自己想看到的信息…是的，刷不到自己想看到的信息，这也是目前国内主流互联网平台的共通问题所在了。如今的平台靠着大数据和推荐算法在刻意为用户制造对平台有益的“信息茧房”，让用户只看到他们想让用户看到的信息，而这个信息通过一些手段，包装成用户自己想看到的信息。</p><p>为了避免这种情况，我开始选择性的过滤掉对自己无用信息，只是这个过程还是浪费了大量时间。随着生活和工作节奏的加快，时间对于我而言成为一个日渐短缺的资源。于是我开始寻求解决方案。</p><p>首先确定的一个大方向是，尽可能接触一手信息。基于这个目标，我开始在互联网上搜罗，紧接着了解并接触到 RSS，一种很原始的网站订阅方式。尽管原始，但纵观目前互联网主流平台上的关注、公众号、动态…这些功能的本质也是一种 RSS 订阅，只不过是平台为了完成圈地而制造的新概念，并借机将用户的数字信息据为己有，所获而来的信息通过各种商业模式完成变现。</p><h3 id="概念说明"><a href="#概念说明" class="headerlink" title="概念说明"></a>概念说明</h3><ul><li><p><strong>RSS</strong></p><p>  RSS（Really Simple Syndication 或 Rich Site Summary）是一种用于订阅和自动获取网站内容更新的技术和格式。它允许用户通过聚合器（又称 RSS 阅读器）方便地接收和阅读来自不同网站的最新信息，而无需访问每个网站。</p><p>  早年间的个人博客基本就靠这个来进行传播，只是现在平台垄断越发明显，个人RSS成为孤岛，难以为继。</p></li><li><p><strong>RSS 阅读器</strong></p><p>  RSS 阅读器是一种专门用于订阅、聚合和管理 RSS Feed 的工具或应用程序。通过 RSS 阅读器，用户可以集中查看来自不同网站的最新内容，而无需频繁访问每个网站。这种工具对于希望跟踪多个新闻来源、博客、播客或其他内容发布平台的用户尤其有用。</p></li></ul><h2 id="软件简介"><a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><div class="note warning simple"><p>简介内容由AI总结输出。</p></div><p>RSS 工具 Follow 主要面向互联网用户，尤其是那些希望方便快捷地获取信息和内容的用户。</p><h3 id="软件简要描述："><a href="#软件简要描述：" class="headerlink" title="软件简要描述："></a>软件简要描述：</h3><p>Follow 是一款现代化的 RSS 阅读器，旨在帮助用户方便地订阅和管理各种内容源。其主要功能包括：</p><ul><li><strong>用户友好的界面</strong>：简单直观的设计，让用户能够快速找到所需的信息。</li><li><strong>多源订阅</strong>：支持多种类型的 RSS 源订阅，用户可以根据自己的需求自由选择。</li><li><strong>内容分类</strong>：提供分类管理功能，帮助用户将不同主题的内容进行整理。</li><li><strong>离线功能</strong>：支持离线阅读，用户可以在没有网络连接时访问之前存储的内容。</li><li><strong>跨设备同步</strong>：支持账户同步功能，用户在任何设备上都能获取最新的订阅更新。</li><li><strong>推送通知</strong>：实时推送最新更新，确保用户不会错过重要信息。</li></ul><h3 id="衍生内容："><a href="#衍生内容：" class="headerlink" title="衍生内容："></a>衍生内容：</h3><p>除了 Follow，用户也可以探索其他类似的 RSS 工具和应用，如 Feedly、Inoreader 和 The Old Reader。这些工具各有特点，如 Feedly 强调社交功能，Inoreader 提供高级订阅管理选项，而 The Old Reader 则更注重简洁的阅读体验。用户可以根据自身需求，选择最合适的工具来管理自己的信息获取方式。</p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><ul><li><p>可以直接从官网下载对应平台安装包。</p><ul><li><a href="https://follow.is/">Follow</a></li></ul></li><li><p>如果能访问外网的话，也可以从 GitHub 上找到最新的 Release 下载。</p><ul><li><a href="https://github.com/RSSNext/Follow">https://github.com/RSSNext/Follow</a></li></ul></li></ul><h3 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h3><ul><li><p><strong>订阅源配置</strong></p><ol><li><p>点击“+”，打开发现页面。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_1.png" alt="alt text"></p></li><li><p>选择感兴趣的信息源。<br> 优先选择热门推荐的信息源（比较稳定）。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_2.png" alt="alt text"></p></li><li><p>点击“预览”，选择分组，完成订阅。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_3.png" alt="alt text"></p></li><li><p>订阅的信息源会在左侧栏中显示，接着便可以像微信公众号一样进行信息浏览了。</p><p> <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_4.png" alt="alt text"></p></li></ol></li><li><p><strong>自动化配置</strong></p><p>  在设置页面中可以找到一些诸如：AI摘要、翻译、阅读模式、原文显示等自动化的规则设置，这部分属于个人定制化的操作了，可以匹配个人习惯自动完成一些重复操作。</p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_5.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_6.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_7.png" alt="alt text"></p></li></ul><h3 id="信息源获取"><a href="#信息源获取" class="headerlink" title="信息源获取"></a>信息源获取</h3><p>除了软件发现页面推荐的信息源，我们还可以自己选择信息源，应该说这才是我们使用这个软件的本质目的——打造一套自己的信息流。</p><p>信息源的获取有以下几种途径：</p><ul><li><p><strong>网站 RSS 链接</strong></p><ol><li>一般允许被订阅的网站都会带有“RSS”图形或是文字标识，点击后即可获得订阅链接。这个属于官方的订阅链接了，优先推荐。</li></ol><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_8.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_9.png" alt="alt text"></p><p>  <img src="/../img/Follow-%E6%96%B0%E4%B8%80%E4%BB%A3RSS%E9%98%85%E8%AF%BB%E5%99%A8/image_10.png" alt="alt text">  </p></li><li><p><strong>RSS 生成器（第三方）</strong></p><ol><li>如果第一种方式是官方行为，那么这种方式可以戏称为“民间行为”了。调侃归调侃，互联网本身就是主打开源精神，RSS从道德层面上来讲本身就是面向开放给所有人的。只是当代互联网平台通过利益绑架了这种开源精神，所以才有了民间开源。</li><li>目前主流的第三方RSS生成器是RSSHub，通过浏览器插件，可以快速获取到未开放RSS网站的订阅链接。Follow 软件的前身就是 RSSHub。有兴趣的朋友可以去官方了解下。</li></ol><p>  <a href="https://rsshub.netlify.app/zh/">介绍 | RSSHub</a>  </p></li><li><p><strong>RSS 生成器（自建）</strong></p><ol><li>由于第三方生成器并不能保证提供所有个人想订阅的网站RSS，且数据更新并非及时有效。所以有需求的同学可以自行搭建，通过自己本地主机或服务器生成有效的网页数据RSS。</li><li>具体搭建方式可见上述 RSSHub 官网介绍。</li></ol></li></ul><h2 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h2><p>总的来说，这款软件还是比较符合我个人诉求的。</p><p>不过依然存在以下不足：</p><ul><li>订阅源经常失效</li><li>信息相较于网站来说更新不及时，受限于订阅源服务器的更新频率。</li></ul><p>当然以上问题也是有解决方案，就是根据自己的诉求自建一个专属RSS源。现阶段的我实在没精力再往下折腾了，等后面有空再折腾下看看效果。</p><p>回归软件本身的工具属性而言，这款软件已经做得很棒了！对于使用者来说，更重要还是信息源。搜寻并整理自己所需信息，进行持续的价值积累，才是这款软件的意义所在。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Obsidian多端同步方案</title>
      <link href="/post/55f95be9.html"/>
      <url>/post/55f95be9.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>自从折腾过自己的服务器，就老想着让服务器的价值最大化，真的就停不下来。思来想去，刚好最近有一个笔记数据多端同步的诉求，以便随时查阅。<br>你问我怎么不直接上Notion或是其他类似的笔记软件？<br>不好意思，是真怕它们跑路，数据放自己手里才是最安心的。加上离线运行效率还是要比在线高出不少，查找数据更加快捷，最终选择了Obsidian+多端同步的组合方案。</p><h2 id="方案分析"><a href="#方案分析" class="headerlink" title="方案分析"></a>方案分析</h2><h3 id="云盘"><a href="#云盘" class="headerlink" title="云盘"></a>云盘</h3><p>这个是我目前在用的方式，微软的OneDrive和百度云的同步空间都用过。 PC端的同步体验目前来说还不错，只是在手机和Pad上的同步体验就有些差强人意了。主要表现在手机数据管理不便，以及软件常驻后台的可操作性不大。</p><p>如果不想折腾，或是没有随时随地的查看诉求，我还是比较推荐微软OneDrive的方案。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>得益于 Obsidian 成熟的插件市场，搜索后如下：</p><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Plugin.png" alt="Alt text"></p><p>一般来说优先下载量和最近更新日期作为选择标准，于是我选择了 <code>Self-hosted LiveSync</code> 这款插件。不是 <code>Remotely Save</code> 不够好，而是 <code>Self-hosted LiveSync</code> 的名字更深得我心。论取名的艺术~</p><h2 id="方案详情"><a href="#方案详情" class="headerlink" title="方案详情"></a>方案详情</h2><p>需要提前准备一台安装有 Docker 的服务器和一台安装有 Obsidian 的客户端。</p><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="配置-CouchDB"><a href="#配置-CouchDB" class="headerlink" title="配置 CouchDB"></a>配置 CouchDB</h4><p>新建文件 <code>local.ini</code> 上传至服务器并获得路径地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[couchdb]</span><br><span class="line">single_node=true</span><br><span class="line">max_document_size = 50000000</span><br><span class="line"></span><br><span class="line">[chttpd]</span><br><span class="line">require_valid_user = true</span><br><span class="line">max_http_request_size = 4294967296</span><br><span class="line"></span><br><span class="line">[chttpd_auth]</span><br><span class="line">require_valid_user = true</span><br><span class="line">authentication_redirect = /_utils/session.html</span><br><span class="line"></span><br><span class="line">[httpd]</span><br><span class="line">WWW-Authenticate = Basic realm=&quot;couchdb&quot;</span><br><span class="line">enable_cors = true</span><br><span class="line"></span><br><span class="line">[cors]</span><br><span class="line">origins = app://obsidian.md,capacitor://localhost,http://localhost</span><br><span class="line">credentials = true</span><br><span class="line">headers = accept, authorization, content-type, origin, referer</span><br><span class="line">methods = GET, PUT, POST, HEAD, DELETE</span><br><span class="line">max_age = 3600</span><br></pre></td></tr></table></figure><h4 id="部署-CounchDB"><a href="#部署-CounchDB" class="headerlink" title="部署 CounchDB"></a>部署 CounchDB</h4><ul><li>Dokcer 安装<br>通过 <code>local.ini</code> 配置，在Docker中运行 CouchDB:</li></ul><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --restart always </span></span><br><span class="line">-e COUCHDB_USER=admin                       <span class="comment">#admin改成自己的用户名</span></span><br><span class="line">-e COUCHDB_PASSWORD=password                <span class="comment">#password改成自己设定的密码</span></span><br><span class="line">-v /path/to/local.ini:/opt/couchdb/etc/local.ini</span><br><span class="line">-p <span class="number">5984</span>:<span class="number">5984</span> </span><br><span class="line">couchdb</span><br></pre></td></tr></table></figure><p>其中 <code>/path/to/local.ini</code> 替换成实际的文件存放路径。</p><ul><li>Docekr Compose 安装<br>创建一个文件夹, 将你的 <code>local.ini</code> 放在文件夹内, 然后在文件夹内创建 <code>docker-compose.yml</code>. 请确保对 <code>local.ini</code> 有读写权限并且确保在容器运行后能创建 <code>data</code> 文件夹. 文件夹结构大概如下:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obsidian-livesync</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">└── local.ini</span><br></pre></td></tr></table></figure><p>参照以下内容编辑 <code>docker-compose.yml</code> :</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  couchdb:</span><br><span class="line">    image: couchdb</span><br><span class="line">    container_name: obsidian-livesync</span><br><span class="line">    <span class="keyword">user</span>: <span class="number">1000</span>:<span class="number">1000</span></span><br><span class="line">    environment:</span><br><span class="line">      - COUCHDB_USER=admin                    <span class="comment">#admin改成自己的用户名</span></span><br><span class="line">      - COUCHDB_PASSWORD=password             <span class="comment">#password改成自己设定的密码</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/opt/couchdb/data</span><br><span class="line">      - ./local.ini:/opt/couchdb/etc/local.ini</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">5984</span>:<span class="number">5984</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><p>创建并启动容器：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><ol><li>访问 <code>http://localhost:5984/_utils</code> ，输入部署容器时配置好的账号和密码。</li><li>点击 <code>Create Database</code> ，根据个人喜好创建数据库，名称随便。</li></ol><h4 id="设置域名"><a href="#设置域名" class="headerlink" title="设置域名"></a>设置域名</h4><p>设置一个指向你服务器的 A 记录，并在服务器端通过 <code>Nignx/Caddy</code> 获取 SSL 证书。<br>这一步主要目的是获取合法的SSL，不然客户端插件无法与同步服务器建立连接。</p><h3 id="插件配置"><a href="#插件配置" class="headerlink" title="插件配置"></a>插件配置</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>应用市场搜索 <code>Self-hosted LiveSync</code> ，并安装启用。<br>首次启用会打开如下页面（可以忽略）：<br><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Setting.png" alt="alt text"></p><h4 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h4><ol><li>设置向导 (The Setup wizard)<br>在设置对话框中打开 <code>🧙‍♂️ Setup wizard</code>. 如果之前未配置插件, 则会自动打开该页面。</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Setup%20wizard.png" alt="alt text"></p><ul><li><code>Use</code>: 使用已有配置，一般用于第二台及之后的设备的配置。</li><li><code>Start</code>: 根据引导进行配置。一般用于第一台设备配置，根据引导进行一些简单且必要的配置。</li><li><code>Enable</code>: 根据个人喜好进行手动配置。</li></ul><ol start="2"><li>配置远程数据库<br>在引导页面点击 <code>Start</code> 后弹出如下页面：</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Remote%20Database.png" alt="alt text"></p><ul><li><p>Remote Database configuration</p><ul><li>依次输入服务器地址、用户名、密码和数据库名称。</li><li>点击 <code>Check</code> 按钮进行连通性测试。</li></ul></li><li><p>Confidentiality</p><ul><li>End to End Enctryption ： 是否启用端到端加密。推荐勾选。</li><li>Passphrase : 设置加密密码。</li><li>Path Obfuscation : 混淆路径。多一重加密保证，推荐勾选。</li></ul></li></ul><p>配置完成点击 <code>Next</code> 。</p><ol start="3"><li>同步设置</li></ol><p><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Sync%20Settings.png" alt="alt text"></p><p>选择自己要使用的同步方法，推荐 <code>LiveSync</code> ，也是这个插件比较特色的同步方式了。 然后点击 <code>Apply</code> 初始化并按要求建立本地和远程数据库。如果显示 <code>All done!</code> ，就完成了全部配置。此时 <code>Copy setup URI</code> 将自动打开，并要求我们输入密码以加密 <code>Setup URI</code> 。</p><p>之后等待本地与服务器完成同步。当状态不再变化并显示 ⏹️ 图标表示 COMPLETED（没有 ⏳ 和 🧩 图标）时，您就可以与服务器同步了。</p><ol start="4"><li>后续设备的配置<br>通过首次启用插件的弹窗或是设置向导 (The Setup wizard)中选择 <code>Use the copied setup URI</code> ，点击 <code>Use</code> , 输入前置 <code>Copy setup URI</code> 中复制的链接并输入密码。在弹窗中选择以下内容：</li></ol><ul><li><code>Importing LiveSync&#39;s conf, OK?</code> 选择 <code>Yes</code></li><li><code>How would you like to set it up?</code> 选择 <code>Set it up as secondary or subsequent device</code><br>然后，配置将生效并开始复制。接着，等待文件完成同步。</li></ul><ol start="5"><li>详细配置<br>更多配置说明详见官方文档：<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/vrtmrz/obsidian-livesync/blob/main/docs/settings.md">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/vrtmrz/obsidian-livesync/blob/main/docs/settings.md.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">obsidian-livesync</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div></li></ol><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><p>同步状态将显示在状态栏。</p><ul><li><p>状态</p><ul><li>⏹️ 就绪</li><li>💤 LiveSync 已启用，正在等待更改。</li><li>⚡️ 同步中。</li><li>⚠ 一个错误出现了。</li><li>↑ 上传的 chunk 和元数据数量</li><li>↓ 下载的 chunk 和元数据数量</li><li>⏳ 等待的过程的数量</li><li>🧩 正在等待 chunk 的文件数量 如果你删除或更名了文件，请等待 ⏳ 图标消失。</li></ul></li><li><p>提示</p><ul><li>如果文件夹在复制后变为空，则默认情况下该文件夹会被删除。您可以在同步设置中关闭此行为。</li><li>移动平台上的 Obsidian 无法连接到非安全 (HTTP) 或本地签名的服务器，即使设备上安装了根证书。</li><li>同步时，文件按修改时间进行比较，较旧的将被较新的文件覆盖。然后插件检查冲突，如果需要合并，将打开一个对话框。</li><li>使用此插件时，应避免同时使用其他同步软件。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在各种终端设备上尝试使用下来确实感觉不错，如官方所述，几乎达到了一字一句的实时同步。<br><img src="/../img/Obsidian%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88/Demo.gif" alt="alt text"></p><p>不过之前在用 <code>cloudflare</code> 做域名解析时，还是会存在同步不及时的情况。后来拿 <code>Aliyun</code> 做域名解析就好了很多。推荐大家还是选择自己所在网络更好的域名及服务器运营商。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Obsidian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计基础理论</title>
      <link href="/post/428cf2d9.html"/>
      <url>/post/428cf2d9.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>鉴于工作中的需求，一些个人认为有趣的想法与设计需要一些通用理论作为支撑，由此想着将一些适用面广泛且有效的理论整理于此，方便查阅。</p></blockquote><h2 id="风险与回报（Risk-vs-Reward）"><a href="#风险与回报（Risk-vs-Reward）" class="headerlink" title="风险与回报（Risk vs. Reward）"></a>风险与回报（Risk vs. Reward）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Risk%20And%20Reward.png" alt="Alt text"></p><p>风险与回报理论在游戏设计中是一个核心概念，它强调玩家为了获得更大的奖励愿意承担更高的风险。这个理念不仅适用于游戏设计，也广泛存在于经济学、心理学和决策理论等多个领域中。在游戏设计中，这个理论用来创建平衡和吸引人的游戏机制，激励玩家探索、尝试和克服挑战。</p><h3 id="出处"><a href="#出处" class="headerlink" title="出处"></a>出处</h3><p>风险与回报的概念，并没有一个具体的“出生地点”或单一来源，在游戏设计领域，它更像是从实践中逐渐发展起来的共通理解。随着游戏产业和理论研究的发展，很多游戏设计师和理论家都对这个主题进行了探讨和应用，但很难归功于某个特定的人或文献。</p><h3 id="游戏设计中的应用"><a href="#游戏设计中的应用" class="headerlink" title="游戏设计中的应用"></a>游戏设计中的应用</h3><p>在游戏设计中，风险与回报的概念用于平衡游戏的挑战度和奖励系统。设计师通过调整任务的难度、敌人的强度、资源的稀缺性等因素，来创造玩家需要权衡风险与可能获得的回报的情境。有效使用这一概念可以增加游戏的深度和复杂性，提升玩家的参与度和满足感。</p><ul><li><strong>风险：</strong> 玩家在游戏中面临的挑战或可能导致失败的元素。风险可以是敌人、障碍、时间限制或资源损失等。</li><li><strong>回报：</strong> 作为克服风险的奖励，回报可以是分数、装备、能力提升、故事进展或解锁新内容等。</li></ul><p>设计师会仔细考虑如何设置风险与回报，以保证玩家既感受到挑战，又在成功后获得成就感。例如，一个高风险的战斗挑战可能会给予玩家珍贵的物品或大量经验值，鼓励玩家接受挑战并投入努力。</p><h3 id="关键原则"><a href="#关键原则" class="headerlink" title="关键原则"></a>关键原则</h3><ul><li><strong>平衡：</strong> 保证风险与回报之间有合理的平衡，避免游戏过于困难或过于简单。</li><li><strong>透明度：</strong> 让玩家能够预见到潜在的风险和可能获得的回报，以便做出有根据的决策。</li><li><strong>多样性：</strong> 提供不同层次的风险和回报，以满足不同类型玩家的需求和偏好。</li></ul><p>风险与回报理论是游戏设计师工具箱中的重要工具，帮助他们创造更加引人入胜和令人满意的游戏体验。</p><h2 id="三循环理论（Game-Loop-Theory）"><a href="#三循环理论（Game-Loop-Theory）" class="headerlink" title="三循环理论（Game Loop Theory）"></a>三循环理论（Game Loop Theory）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/GameLoop.png" alt="Alt text"></p><p>三循环理论（Second to Second, Minute to Minute, Session to Session）是一个在游戏设计领域经常被提及的概念，用于描述和分析玩家在不同时间尺度上的游戏体验。这个理论帮助游戏设计师确保玩家在短期内（每秒钟）、中期内（每分钟）和长期内（每次游戏会话）都能获得满足和乐趣。</p><h3 id="出处与普及"><a href="#出处与普及" class="headerlink" title="出处与普及"></a>出处与普及</h3><p>这个理论并没有一个明确的“发明者”或是第一次被提出的具体文献来源。它更像是游戏设计实践中逐渐形成并被广泛接受的一个概念框架。随着时间的推移，它已经被许多游戏开发者和设计师所采纳，并在各种形式的讲座、教程、书籍和在线资源中被讨论。</p><h3 id="理论解释"><a href="#理论解释" class="headerlink" title="理论解释"></a>理论解释</h3><ul><li><p><strong>Second to Second</strong>：这一层面关注的是游戏中最基本的交互和反馈机制，比如角色的移动、射击、碰撞等。游戏在这个层面需要给玩家即时的反馈和满足感，确保基本的操作和交互设计流畅且富有乐趣。</p></li><li><p><strong>Minute to Minute</strong>：这一层面涵盖了玩家在较短时间内的游戏体验，包括任务的完成、战斗的胜利、资源的收集和使用等。游戏需要在这个水平上提供有意义的挑战和奖励，以维持玩家的兴趣和参与感。</p></li><li><p><strong>Session to Session</strong>：这一层面关注的是玩家每次游戏会话之间的连续性和发展，例如角色成长、故事进展、解锁新内容等。在这个水平上，游戏设计目标是让玩家有持续回归游戏的动力，通过提供新的目标、挑战和奖励来增强游戏的可玩性和深度。</p></li></ul><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>三循环理论为游戏设计师提供了一个检视和优化游戏体验的框架，帮助他们平衡和调整游戏的各个方面，确保玩家在所有这些不同的时间尺度上都能获得满意和愉悦的游戏体验。通过关注这三个层面的设计，可以增强游戏的吸引力和留存率，构建起更加完善和圆润的游戏体验。</p><h3 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h3><ul><li><a href="https://gamedesignskills.com/game-design/core-loops-in-gameplay/#rpg-core-loop-examples">Designing The Core Gameplay Loop: A Beginner’s Guide</a></li></ul><h2 id="心流理论（Flow-Theory）"><a href="#心流理论（Flow-Theory）" class="headerlink" title="心流理论（Flow Theory）"></a>心流理论（Flow Theory）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Flow.png" alt="Alt text"></p><p>心流理论（Flow Theory）最初由匈牙利心理学家米哈伊·契克森米哈伊（Mihaly Csikszentmihalyi）在20世纪70年代提出。心流是指个体在进行某项活动时完全投入其中，达到高度专注和满足感的心理状态。在这种状态下，人们会经历时间感的扭曲（通常感觉时间过得更快）、自我忘怀以及对活动结果的深切享受。</p><h3 id="心流理论在游戏设计中的应用"><a href="#心流理论在游戏设计中的应用" class="headerlink" title="心流理论在游戏设计中的应用"></a>心流理论在游戏设计中的应用</h3><p>在游戏设计领域，心流理论被广泛应用于创造引人入胜的游戏体验。游戏设计师利用心流理论的原则，设计游戏以维持玩家的高度参与度和兴趣。为了实现心流状态，游戏需要满足以下几个关键条件：</p><ul><li><strong>挑战与技能平衡</strong>：游戏的挑战程度需要与玩家的技能水平相匹配。如果挑战太低，玩家可能会感到无聊；如果挑战太高，玩家可能会感到沮丧。</li><li><strong>明确的目标</strong>：游戏需要有清晰、可理解的目标，让玩家知道他们应该做什么。</li><li><strong>即时反馈</strong>：玩家的行为需要得到即时的反馈，以便他们可以根据这些信息调整自己的行动。</li><li><strong>专注度的增强</strong>：通过减少干扰和提供吸引人的内容，游戏应鼓励玩家完全投入其中，从而进入心流状态。</li></ul><p>通过遵循心流理论的这些原则，游戏可以更有效地促进玩家的投入度和整体游戏体验的质量。心流状态不仅能提升玩家的娱乐体验，还能促进学习和技能提升，这是教育游戏和训练模拟中尤为重要的。</p><h3 id="心流理论的影响"><a href="#心流理论的影响" class="headerlink" title="心流理论的影响"></a>心流理论的影响</h3><p>心流理论对于理解人类如何与复杂系统交互、如何在困难任务中找到满足感和乐趣以及如何通过设计提升用户体验等方面，都提供了极其宝贵的见解。在游戏设计之外，心流概念也被应用于运动、工作、艺术创作等多个领域，旨在提高个体的表现和幸福感。</p><p>随着游戏产业和用户体验（UX）设计的发展，心流理论继续在设计实践和研究中发挥着关键作用，帮助设计师创建更具吸引力和参与性的产品和服务。</p><h2 id="情绪曲线（Emotional-Curve）"><a href="#情绪曲线（Emotional-Curve）" class="headerlink" title="情绪曲线（Emotional Curve）"></a>情绪曲线（Emotional Curve）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Emotional%20Curve.png" alt="Alt text"></p><p>游戏设计中的情绪曲线（Emotional Curve）概念，并没有一个明确的单一来源，类似于许多游戏设计理论和技术，它是随着时间逐渐发展和完善的。情绪曲线通常用于描述玩家在游戏过程中经历的情绪变化，包括兴奋、紧张、放松和满足等。这个概念有助于游戏设计师规划和优化游戏体验，确保玩家不会感到无聊或过度挫败。</p><h3 id="历史背景与相关概念"><a href="#历史背景与相关概念" class="headerlink" title="历史背景与相关概念"></a>历史背景与相关概念</h3><p>虽然情绪曲线本身可能没有特定的出处，但它与一些著名的叙事和体验设计理论密切相关：</p><ul><li><p><strong>弗雷塔格三角形（Freytag’s Pyramid）</strong>：这是一种分析叙事结构的方法，由19世纪德国剧作家古斯塔夫·弗雷塔格（Gustav Freytag）提出。它将故事分为五个部分——引子、上升动作、高潮、下降动作和结局，形成了一个金字塔形状的结构。这个理论被广泛应用在文学、电影和游戏叙事中，为情绪曲线的思考提供了基础。</p></li><li><p><strong>英雄之旅（Hero’s Journey）</strong>：由约瑟夫·坎贝尔（Joseph Campbell）在其作品《千面英雄》中提出，描绘了英雄从平凡世界出发，经历试炼，最终取得胜利并归来的经典叙事框架。游戏设计中的情绪曲线经常借鉴英雄之旅中的元素来营造玩家的情绪起伏。</p></li></ul><h3 id="应用于游戏设计"><a href="#应用于游戏设计" class="headerlink" title="应用于游戏设计"></a>应用于游戏设计</h3><p>在游戏设计中，情绪曲线被用来规划玩家的体验，以确保游戏能够持续吸引玩家，并给他们留下深刻的印象。设计师会精心设计游戏的关键事件、挑战和奖励，以促使玩家经历各种情绪状态，如期待、惊喜、紧张、兴奋和成就感等。</p><p>通过调节游戏难度、故事情节、视觉和音效等元素，可以有效地控制玩家的情绪强度和节奏，从而创造出富有吸引力和挑战性的游戏体验。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>情绪曲线在游戏设计中的应用反映了设计师对玩家体验的深入思考。尽管该概念并非源自某个具体的理论或研究，但它汇集了叙事理论、心理学和用户体验设计等领域的智慧，成为指导游戏设计的重要工具之一。通过利用情绪曲线，设计师能够更好地把握玩家的情绪变化，提升游戏的沉浸感和吸引力。</p><h2 id="游戏节点切分（Gameplay-Breakdown）"><a href="#游戏节点切分（Gameplay-Breakdown）" class="headerlink" title="游戏节点切分（Gameplay Breakdown）"></a>游戏节点切分（Gameplay Breakdown）</h2><p>游戏设计中的“游戏节点切分”（Gameplay Decomposition 或 Gameplay Breakdown）并不是源自某个单一的出处或论文，而是游戏设计实践中逐渐形成的一种方法论。这种方法旨在通过将游戏体验分解成更小、更易于管理和分析的部分来理解和优化游戏设计。</p><h3 id="背景与应用"><a href="#背景与应用" class="headerlink" title="背景与应用"></a>背景与应用</h3><p>游戏节点切分本质上是对游戏元素和机制进行系统化的分析，这包括但不限于玩家行动、游戏规则、挑战、故事情节、界面设计等方面。通过这种分析，设计师能够识别游戏的核心组成部分，评估它们如何独立工作以及相互之间如何交互，从而提高游戏的整体质量和玩家体验。</p><h3 id="游戏节点切分的关键步骤"><a href="#游戏节点切分的关键步骤" class="headerlink" title="游戏节点切分的关键步骤"></a>游戏节点切分的关键步骤</h3><ol><li><p><strong>识别游戏元素</strong>：明确游戏中的所有关键元素和机制，包括玩家可以进行的操作、游戏环境、NPC（非玩家角色）、任务&#x2F;目标、奖励等。</p></li><li><p><strong>分析元素之间的关系</strong>：探究这些元素如何独立运作，以及它们之间如何相互影响。例如，玩家如何与环境互动？任务完成后给予玩家什么样的反馈？</p></li><li><p><strong>评估游戏循环</strong>：识别和评估游戏中的各种循环（如核心游戏循环、次级循环等），这些循环定义了玩家参与游戏的方式，以及游戏如何提供持续的动力和奖励。</p></li><li><p><strong>优化和调整</strong>：基于以上分析，确定游戏设计中的强项和弱点，进而做出必要的调整以增强玩家体验。</p></li></ol><h3 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h3><p>游戏节点切分允许设计师更加深入地理解游戏的运作机制，并且提供了一个框架来思考如何提升游戏的互动性和参与度。它是一种有效的工具，可以帮助设计师优化游戏流程、增强游戏的吸引力以及预测可能的设计问题。</p><h3 id="结论-1"><a href="#结论-1" class="headerlink" title="结论"></a>结论</h3><p>尽管“游戏节点切分”并没有一个明确的起源或单一的权威来源，但它已经成为游戏设计和分析中普遍采用的一种方法。通过系统地分析游戏的各个方面，设计师可以创建出更加深入和丰富的游戏体验，满足不同玩家群体的需求和期望。</p><h2 id="二八定律（Pareto-Principle）"><a href="#二八定律（Pareto-Principle）" class="headerlink" title="二八定律（Pareto Principle）"></a>二八定律（Pareto Principle）</h2><p><img src="/../img/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/Pareto%20Principle.png" alt="Alt text"></p><p>二八定律，又称为帕累托原则（Pareto Principle），最初是由意大利经济学家维尔弗雷多·帕累托（Vilfredo Pareto）在20世纪初提出的。他在研究财富分配时发现，大约80%的意大利土地由大约20%的人口所拥有。这个原则后来被广泛应用于各种领域，包括商业管理、软件工程，以及游戏设计中。</p><h3 id="二八定律在游戏设计中的应用"><a href="#二八定律在游戏设计中的应用" class="headerlink" title="二八定律在游戏设计中的应用"></a>二八定律在游戏设计中的应用</h3><p>在游戏设计中，二八定律可以以多种方式被解释和应用。以下是一些常见的例子：</p><ul><li><p><strong>玩家参与</strong>：可能只有大约20%的玩家会产生80%的游戏互动次数或完成度。这意味着游戏设计师需要特别关注这小部分玩家的体验和需求，同时也要确保其他80%的玩家仍然能找到游戏的乐趣和价值。</p></li><li><p><strong>内容消费</strong>：在许多游戏中，玩家可能只会体验到全部内容的一小部分（大约20%），但这一小部分内容提供了大部分的游戏乐趣和满足感（80%）。因此，重点放在核心和高质量的内容上，可能比尝试填充游戏世界以大量未经优化的内容更为重要。</p></li><li><p><strong>收益来源</strong>：对于盈利型游戏，通常只有大约20%的玩家会贡献出80%的收入。这就提示开发者们需要了解这些玩家的偏好，并为他们提供价值，以保持游戏的盈利性和可持续性。</p></li><li><p><strong>问题和解决方案</strong>：在优化游戏过程中，可能只有20%的问题导致了玩家体验中80%的困扰。识别并解决这些关键问题可以显著提升游戏质量。</p></li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>虽然二八定律提供了一个有用的视角来理解和优化游戏设计，但它并不是一个硬性规则，实际比例可能会有所不同。游戏设计师应该将其作为一个指导原则，而不是一个严格遵守的法则。成功的游戏设计需要考虑到所有玩家的体验，并努力打造包容性和多样性的游戏世界。</p><p>总之，二八定律在游戏设计中的应用突显了资源分配和优先级设置的重要性，帮助设计师和开发者识别和专注于那些最能影响玩家体验和游戏成功的因素。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Brotato》玩法解析</title>
      <link href="/post/7fa73044.html"/>
      <url>/post/7fa73044.html</url>
      
        <content type="html"><![CDATA[ <iframe src="https://store.steampowered.com/widget/1942280/" frameborder="0" width="100%" height="190"></iframe> <h2 id="玩法特点"><a href="#玩法特点" class="headerlink" title="玩法特点"></a>玩法特点</h2><p>一款符合现代碎片化生活节奏的，具有<code>短平快</code>特点的爽感<code>Rouge</code>。</p><h2 id="系统组成"><a href="#系统组成" class="headerlink" title="系统组成"></a>系统组成</h2><table><thead><tr><th align="center">序号</th><th align="center">系统名称</th><th align="center">详细数据</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">角色</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Characters">Character</a></td><td align="center">共44个角色，初始解锁5个。</td></tr><tr><td align="center">2</td><td align="center">属性</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Stats">Stats</a></td><td align="center">共12类属性。</td></tr><tr><td align="center">3</td><td align="center">武器</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Weapons">Weapons</a></td><td align="center">分为四个品阶：白&#x2F;蓝&#x2F;紫&#x2F;红。</td></tr><tr><td align="center">4</td><td align="center">道具</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Items">Items</a></td><td align="center">共177种道具。</td></tr><tr><td align="center">5</td><td align="center">敌人</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Enemies">Enemies</a></td><td align="center">共36种敌人。</td></tr><tr><td align="center">6</td><td align="center">升级</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Upgrades">Upgrades</a></td><td align="center">每次升级时，都可以选择一种属性进行提升。</td></tr><tr><td align="center">7</td><td align="center">商店</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Shop">Shop</a></td><td align="center">在商店中可以购买道具和武器，并且是除战前自选武器之外的唯一武器来源途径。</td></tr><tr><td align="center">8</td><td align="center">成就</td><td align="center"><a href="https://brotato.wiki.spellsandguns.com/Progress">Progress</a></td><td align="center">局外收集。</td></tr></tbody></table><p>该游戏的系统组成并不复杂，甚至如果你对RougeLike有一定的了解，会发现它们几乎算是该品类游戏的核心系统组成了。</p><h2 id="游玩规则"><a href="#游玩规则" class="headerlink" title="游玩规则"></a>游玩规则</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E6%B8%B8%E7%8E%A9%E6%B5%81%E7%A8%8B.png" alt="Alt text"></p><p>整个流程可以简单的概括为：<code>杀怪-成长-再杀怪</code>的不断循环，直至通关或死亡。</p><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>每局总共20波怪物，每波持续时长约为1min左右。计时结束后玩家未死亡则获得胜利。<ul><li>采用倒计时的形式更具紧迫感。初始20s，随着波次增加，游玩时长也在增加。</li><li>单波次的时间周期内，怪物刷出数量会不断增加。压力会随着怪物数量增加而不断积累，在计时为零的瞬间得到释放。</li></ul></li><li>每波结束后，会有一个属性升级选项和商店购买选择。<ul><li>属性升级选项的可选次数由玩家本波次挑战过程中升级次数决定，主要是用来提升角色属性，刷新品质随机。</li><li>商店可购买到道具和武器，刷新品质随机。</li></ul></li><li>武器可以选择同品质二合一的方式进行升级，提升了属性的同时，也空出了一个武器格子。<ul><li>武器装备数量上限为 6 。（部分角色天赋可以突破这个上限）</li><li>武器作为主要攻击手段和 build 构建方向。</li></ul></li><li>道具可携带数量不设限（目前还没测试上限数量，先暂且理解为无上限设定），但不同道具有不同的携带数量上限设置。<ul><li>道具主要作用为增加角色基础属性和提供一些被动效果。</li></ul></li></ul><h2 id="体验感知"><a href="#体验感知" class="headerlink" title="体验感知"></a>体验感知</h2><p> 体验是一个游戏带给玩家最直接的感受，如果要用一个词来概括这个游戏或者说这类游戏带给玩家的游戏体验，我会用“爽”这个词。而爽感的来源又是多方面的，以我个人的主观视角来看，这个游戏的爽感主要来源于 <strong>成长、惊喜和策略。</strong></p><h3 id="成长"><a href="#成长" class="headerlink" title="成长"></a>成长</h3><p>本作成长感受表现的最为明显。</p><p><img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E6%88%90%E9%95%BF.png" alt="Alt text"></p><p>成长的感受主要来自于以下几个方面：</p><h4 id="属性成长"><a href="#属性成长" class="headerlink" title="属性成长"></a>属性成长</h4><ul><li>玩家通过击杀敌人获取材料从而提升角色等级，之后可以在每波挑战结束后选择自己想要的属性进行提升。</li><li>属性是数值成长最直接的体现。</li></ul><h4 id="武器获得"><a href="#武器获得" class="headerlink" title="武器获得"></a>武器获得</h4><ul><li>玩家通过击杀敌人获取金币后，可以在商店购买自己想要的武器。同种类同品级的武器可以升级为更高品级的武器。</li><li>武器主要决定玩家的攻击手段（主动技能），伴随着数值成长和外观表现。</li></ul><h4 id="道具获得"><a href="#道具获得" class="headerlink" title="道具获得"></a>道具获得</h4><ul><li>玩家可以在商店购买自己想要的道具。道具携带数量不设上限。</li><li>道具会给玩家提供一些被动技能效果、部分系统规则的变更、以及一些直接的属性成长。</li></ul><h4 id="成就解锁"><a href="#成就解锁" class="headerlink" title="成就解锁"></a>成就解锁</h4><ul><li>玩家在不断地游玩中，解锁对应成就和图鉴（角色、武器、道具、敌人）。</li><li>属于一种局外的收集玩法了。</li></ul><p>游戏通过设定简单清晰的目标——<code>生存至最后1s</code>，并在玩家每次完成目标时及时给予奖励——<code>武器和道具代表的技能机制、角色属性的数值成长以及外观装扮</code>，接着迅速开启下一波挑战，让玩家不断地感觉自己越来越强。</p><p>通过设立清晰目标与及时反馈机制，玩家感受并了解到自己的表现与进步，从而增强了学习性和成长感，以此不断良性循环。</p><h3 id="惊喜"><a href="#惊喜" class="headerlink" title="惊喜"></a>惊喜</h3><p>惊喜可以说是影响一个游戏能否有让人有持续玩下去的动力的重要因素了。惊喜的另一种表达是有趣，也是我个人评判一个游戏是否好玩的决定性因素。</p><p> <img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E6%83%8A%E5%96%9C.png" alt="Alt text"></p><p>本作的惊喜主要呈现在两方面：概率随机与Build构建。</p><h4 id="概率随机"><a href="#概率随机" class="headerlink" title="概率随机"></a>概率随机</h4><ul><li>掉落随机<ul><li>每波次通关会有一定概率掉落随机的道具。</li></ul></li><li>品质随机<ul><li>每次升级的属性提升和商店的开启都伴随着品质的随机。</li></ul></li><li>属性类型随机<ul><li>每次升级后成长属性随机，四选一。</li></ul></li><li>商品类型随机<ul><li>每次开启商店后，可购买物品在道具和武器之间随机。随机刷出四种。</li></ul></li></ul><p>虽然我个人比较讨厌随机，因为它会让我感觉缺乏对游玩的掌控性，正如我不喜欢赌博一样。但随机的不确定性无时无刻不在给玩家提供新鲜刺激和充满惊喜的体验，有关随机的详细阐释可以去看看例如Jesse Schell的《游戏设计的艺术》、Greg Costikyan的《不确定性在游戏中的应用》以及Katie Salen的《游戏设计原理：好游戏如何让玩家更上瘾》，随机对于游戏的可玩性提升还是有很大帮助的。</p><h4 id="Build-构建"><a href="#Build-构建" class="headerlink" title="Build 构建"></a>Build 构建</h4><ul><li>玩法机制<ul><li>不同武器与道具的组合构建出不同的玩法策略。</li></ul></li><li>视觉呈现<ul><li>很多的装备和道具会影响玩家的外观，而外观的变化往往伴随着玩家实力的变强。</li><li>一些独特的技能组合也会迸发出一些绚丽的技能效果。</li></ul></li></ul><h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h3><p>本作的策略主要以玩家的选择为主，辅以简单的操作。乍一看没啥深度，实则设计精妙。简单的操作让其几乎没有什么上手门槛，选择的操作也主要由思考决定，而在每一波挑战结束后的每一次选择作者都留有足够的时间让玩家去思考，并辅以Tag及颜色上的引导，更进一步降低玩家理解门槛。</p><p> <img src="/../img/%E3%80%8ABrotato%E3%80%8B%E7%8E%A9%E6%B3%95%E8%A7%A3%E6%9E%90/%E4%BD%93%E9%AA%8C%E6%84%9F%E7%9F%A5_%E7%AD%96%E7%95%A5.png" alt="Alt text"></p><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul><li>移动走位<ul><li>只有上下左右四个按键操作。</li></ul></li><li>选择点击<ul><li>只会出现在每一波挑战的结束到下一波挑战开启之前。</li></ul></li></ul><h4 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h4><ul><li>战前选择<ul><li>选择初始角色和武器，决定了build构建的大方向。</li></ul></li><li>战中选择<ul><li>升级属性提升类型选择，选择是提升生存能力还是提升伤害能力。</li><li>商店购买物品类型选择，这里的选择是整个游戏体验的灵魂所在，玩家的每一次选择都极大的影响着后续游玩的体验走向。商品种类的设计，以及随机投放规则设计，可以说是本作乃至 Rouge 整个品类游戏的设计重心了。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本作我目前体验下来可能不到20h（游戏人没时间玩游戏…&#x2F;(ㄒoㄒ)&#x2F;~~），所以能聊的主要还是以个人感受为主，其中有关设计部分的内容更多来自于我以前参与的Rouge项目经验，分析的也比较浅薄，日后若有机会制作此类型项目时，再做深入分析。</p><p>说了这么多，好像只说了本作的优点，这个游戏就没有缺点么？</p><p>一个好玩的游戏，优点往往先于缺点展现，并且体量越小的游戏漏洞越少。因此对于并未深入游玩的我来说，暂不想去剖析其中的不足之处，有种挑刺的嫌疑。但以下的几个问题，或许在深入游玩之后，我会拿出来再思索一下：</p><ol><li><p>重复感。<br>尽管有着随机的buff加成，但在游玩过一定时长后（<em>以我个人的感觉预计大约在50h左右，对这类游戏越熟悉，这个时间则越短</em>），每一局的感觉会越来越熟悉，新鲜要素不在。这也是大多数 Rouge 游戏的通病了。</p></li><li><p>我命由天不由我。<br>当build存在最优解时（往往是数值导向），每当刷出的东西不是自己想要的，往往这局的游戏体验就已达到峰终时刻，随着游戏的继续进行，玩家的期待值只会越来越低，直至死亡失败或是选择重开。</p></li></ol><p>随着玩家对游戏的逐渐熟练，操作的部分已经不足以形成挑战，剩下的就只能交给运气了，比起选择逆天改命，或许大部分的玩家更愿意选择重来。</p><p>每种类型的游戏都有着自己的缺点，RougeLike 也不例外。而如何打破缺点或是通过改进规则来让这个品类的游戏在新的时代焕发新的生命力，正是我等游戏从业者该去思考的问题。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于个人服务器的VPN构建</title>
      <link href="/post/93337678.html"/>
      <url>/post/93337678.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>   每次因为个人网站而购买国外服务器时，就总想着把服务器的价值最大化。而 VPN 算是自工作以来的一个必备工具了，虽然之前也折腾过许久，但都因为各种原因容易导致 IP 被封，连带服务器无法使用。<br>   我也尝试过去购买别人的产品，只是别人的产品要不然就是太贵了，或是限流量和限设备，还有隐私等问题，总有让人不满意的点。<br>   于是最近假期期间，趁着空闲，又折腾了起来。并发掘了一些可靠好用的工具。</p><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><h3 id="MHSanaei-x2F-3x-ui"><a href="#MHSanaei-x2F-3x-ui" class="headerlink" title="MHSanaei&#x2F;3x-ui"></a>MHSanaei&#x2F;3x-ui</h3><ul><li>推荐指数 ⭐⭐⭐⭐⭐</li><li>一个更好的面板 • 基于Xray Core构建。在 x-ui 的基础上升级了面板的效果，更直观好用。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/MHSanaei/3x-ui">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/MHSanaei/3x-ui.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FranzKafkaYu/x-ui</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="FranzKafkaYu-x2F-x-ui"><a href="#FranzKafkaYu-x2F-x-ui" class="headerlink" title="FranzKafkaYu&#x2F;x-ui"></a>FranzKafkaYu&#x2F;x-ui</h3><ul><li>推荐指数 ⭐⭐⭐⭐</li><li>脚本+可视化面板的组合，支持支持单端口多用户、多协议。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/FranzKafkaYu/x-ui">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/FranzKafkaYu/x-ui.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">FranzKafkaYu/x-ui</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="233boy-x2F-Xray"><a href="#233boy-x2F-Xray" class="headerlink" title="233boy&#x2F;Xray"></a>233boy&#x2F;Xray</h3><ul><li>推荐指数 ⭐⭐⭐</li><li>一款超便捷的构建脚本，开箱即用。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/233boy/Xray">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/233boy/Xray.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">233boy/Xray</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h3 id="wulabing-x2F-Xray-onekey"><a href="#wulabing-x2F-Xray-onekey" class="headerlink" title="wulabing&#x2F;Xray_onekey"></a>wulabing&#x2F;Xray_onekey</h3><ul><li>推荐指数 ⭐⭐</li><li>听说口碑不错，不过由于我之前已经安装了Nginx，脚本构建过程中失败后也就没有继续尝试下去了，有兴趣的朋友可以试试。</li></ul><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/wulabing/Xray_onekey">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/github.com/wulabing/Xray_onekey.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">wulabing/Xray_onekey</div>            <div class="tag-link-sitename">GitHub</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div><h2 id="构建流程"><a href="#构建流程" class="headerlink" title="构建流程"></a>构建流程</h2><p>大部分的使用说明看对应项目的 Wiki 即可，这里主要补充说明一些我遇到的问题。</p><p>从这些工具的说明文档里，我大概了解到了以前主机IP容易被封是因为缺少加密协议 <code>TSL（Transport Layer Security）</code>，相当于在互联网裸奔，因此极容易被检测管制。</p><ol><li><p>购买域名并托管</p><ul><li>域名购买 <a href="https://www.namesilo.com/">namesilo</a>。</li><li>替换域名服务商 <a href="https://dash.cloudflare.com/">cloudflare</a>，具体步骤可自行 Google 。<ul><li>登录cloudflare账户主页。</li><li>选择<code>添加域</code>，跳转页面后输入已购买域名。</li><li>选择免费计划，选择解析记录，这个可以后续再添加，如果之前有解析就默认全选。</li><li>之后进入<code>Donmain Manager</code>页面。</li><li>选择已有域名并点击<code>Change Nameservers</code>。</li><li>删除默认服务器，一般默认三组。</li><li>然后填写两组服务器<code>bella.ns.cloudflare.com</code> <code>steven.ns.cloudflare.com</code>。</li><li>之后等待激活，cloudflare 会发动激活邮件通知。</li></ul></li><li>解析域名 DNS 至服务器 IP 地址并获取 cloudflare 对应域名管理 API 。</li></ul></li><li><p>一键SSL证书申请并自动续签</p><ul><li>SSH登录服务器输入<code>x-ui</code>，出现菜单栏。</li><li>在列表中找到<code>Cloudflare SSL Certificate</code>对应的数字，并输入。</li><li>按照脚本提示依次输入前面替换域名服务商<code>cloudflare</code>的账号和密码，以及对应域名API的<code>Global API Key</code>。</li><li>之后脚本会自动申请SSL证书并自动续签。</li></ul></li><li><p>服务端配置</p><ul><li>登录x-ui管理面板，添加入站。</li><li>编辑入站配置，主要关注如下几个配置项<ul><li><img src="/../img/%E5%9F%BA%E4%BA%8E%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84VPN%E6%9E%84%E5%BB%BA/setting.png" alt="alt text"></li></ul></li></ul></li><li><p>客户端配置</p><ul><li>下载客户端软件 <a href="https://github.com/2dust/v2rayN">v2rayN</a> 并根据生成链接获取订阅。</li><li>只要是支持 Xray 协议的客户端就行。</li></ul></li></ol><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>如果遇到无法连接至服务器的情况，可以参考如下方式进行排查：</p><ol><li><p>x-ui 管理面板中添加的入站对应端口，需要加入服务器防火墙的白名单中。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开放端口</span></span><br><span class="line">sudo ufw allow 端口号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口开放状态</span></span><br><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure></li><li><p>入站配置中的域名需要修改为 cloudflare 托管的域名名称，而非 IP 地址。</p></li><li><p>在 <a href="https://dash.cloudflare.com/">cloudflare</a> 托管的域名DNS解析中，代理状态需要关闭，即代理状态需要调整至 <code>仅DNS</code> 。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分镜与故事板</title>
      <link href="/post/711e32fe.html"/>
      <url>/post/711e32fe.html</url>
      
        <content type="html"><![CDATA[<h2 id="需求来源"><a href="#需求来源" class="headerlink" title="需求来源"></a>需求来源</h2><p>最近由于工作需要，需要对自己负责设计的角色产出大招分镜的制作需求，于是开始琢磨着研究如何输出更专业的分镜需求文档。算是现学现卖了，顺便给学习的内容做个总结。</p><h2 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h2><h3 id="分镜（Shot-List）"><a href="#分镜（Shot-List）" class="headerlink" title="分镜（Shot List）"></a>分镜（Shot List）</h3><p>分镜设计是影视、动画等视觉创作领域中的一项重要工作，用于规划和组织场景的每个镜头，是导演、编剧和其他创作人员进行沟通的工具之一。它是在影片或动画制作之前，通过一系列画面来呈现整个作品的构图、动作和情节的过程，从而帮助团队理解和共同追求创作的视觉效果和叙事目标。</p><p>分镜通常包含以下信息：</p><table><thead><tr><th>序号</th><th>信息类型</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>镜头编号</td><td>个镜头都应该有一个独一无二的编号，以便在制作中进行引用。</td></tr><tr><td>2</td><td>镜头描述</td><td>对于每个镜头，描述应该简洁而清晰，包括场景的位置、角色的动作和对白。</td></tr><tr><td>3</td><td>画面构图</td><td>显示每个画面中主要元素的相对位置，包括角色、背景、道具等。画面构图通常是一个简化的示意图，用于表示镜头的基本组成。</td></tr><tr><td>4</td><td>角度和距离</td><td>指定摄影机的角度和距离，以及视角的选择。这可以包括镜头是俯视、仰视还是平视，以及摄影机离主体的远近。</td></tr><tr><td>5</td><td>过渡效果</td><td>规定不同镜头之间的过渡效果，比如淡入淡出、切割等。这有助于确保场景之间的平滑过渡。</td></tr><tr><td>6</td><td>动作安排</td><td>描述角色和物体的动作，包括姿势、表情和动作的顺序。这有助于指导动画师或演员的表演。</td></tr><tr><td>7</td><td>对白和声音</td><td>如果有对白或声音效果，分镜也可以包含相应的文字说明或标记。</td></tr><tr><td>8</td><td>时间标记</td><td>指定每个镜头或画面的停留时间，以确保整体流畅。</td></tr><tr><td>9</td><td>备注和说明</td><td>提供任何与镜头相关的额外信息或特殊说明。</td></tr><tr><td>10</td><td>背景图示</td><td>在需要时，可以添加简化的背景示意图，以便更清楚地传达场景的背景。</td></tr></tbody></table><p>以上信息的类型，具体程度和深度取决于制作团队的工作流程和项目的要求。重要的是确保分镜提供足够的信息，使得整个制作团队能够理解并按照设计的方向进行工作。</p><h3 id="故事板（Storyboard）"><a href="#故事板（Storyboard）" class="headerlink" title="故事板（Storyboard）"></a>故事板（Storyboard）</h3><p>故事板是一种用于视觉叙事规划的工具，通常以序列动画的形式展示影片、动画、广告等项目的场景、动作和对白。故事板帮助创作者将故事的想法转化为图像，以更好地可视化并组织叙事元素。</p><p>故事板着重描述故事走向，展示故事创意；分镜侧重讲述拍摄制作的执行。</p><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://app.mediastory.cc/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/app.mediastory.cc/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">闪电分镜</div>            <div class="tag-link-sitename">影视飓风</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>影视飓风制作的一款多人在线分镜制作的网页工具，可在分镜列表和故事板之间进行切换预览，亦可直接导出为可供下载的 PDF 文件。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><p><a href="https://zhuanlan.zhihu.com/p/584086863">全方位教你搞懂故事板（概念、术语、例子、工具）</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/203091191">关于分镜的一切</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>樱井老师的开发课堂</title>
      <link href="/post/a82bd550.html"/>
      <url>/post/a82bd550.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>文章内容摘录自樱井老师个人 YouTube 账号视频内容。</p></blockquote><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.youtube.com/channel/UCv1DvRY5PyHHt3KN9ghunuw">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.youtube.com/channel/UCv1DvRY5PyHHt3KN9ghunuw.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Masahiro Sakurai on Creating Games</div>            <div class="tag-link-sitename">Youtube</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h1 id="Work-Ethic-职业素养"><a href="#Work-Ethic-职业素养" class="headerlink" title="Work Ethic 职业素养"></a>Work Ethic 职业素养</h1><h1 id="Game-Essence-游戏性"><a href="#Game-Essence-游戏性" class="headerlink" title="Game Essence 游戏性"></a>Game Essence 游戏性</h1><h2 id="Risk-and-Reward-风险回报理论"><a href="#Risk-and-Reward-风险回报理论" class="headerlink" title="Risk and Reward 风险回报理论"></a>Risk and Reward 风险回报理论</h2><h3 id="游戏性"><a href="#游戏性" class="headerlink" title="游戏性"></a>游戏性</h3><p>何为游戏性？樱井政博对此的定义是游戏的“推和拉”或“风险和收益”。</p><p>此处举例经典飞行射击游戏《太空侵略者》：</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690699586432.png" alt="Alt text"></p><ul><li><p>游戏规则很简单，操作下方炮台歼灭空中左右移动的侵略者。侵略者会水平运动，在触碰屏幕边界后再往下推进，若侵略者抵达最下方，则敌人侵略成功，游戏结束。</p></li><li><p>因为玩家和侵略者只能垂直射击，所以当玩家与侵略者距离较远时，游戏处于“无风险·无回报”状态；但随着玩家移动，与侵略者距离越近，越容易被侵略者击中，此时风险增加，收益为令侵略者逐渐进入自身打击范围。再进一步，则风险显著增加，但从这里开始就可以获得“打中敌人”的回报了。</p></li></ul><p><code>冒“风险”以得“回报”，这就是“拉扯程度”和“游戏性”的本质。</code>对“攻略”这一要素也有着重大的影响，“攻略”和“拉扯程度”其实是同一个概念的不同表述。</p><p><code>“游戏性”是指控制风险并获得回报的乐趣，而“攻略”是指控制风险并获得回报的方法。</code>前者是游戏系统的角度，后者是玩家的角度。</p><h3 id="攻略"><a href="#攻略" class="headerlink" title="攻略"></a>攻略</h3><p>在《太空侵略者》中，敌人从右往左进行攻击时，若是玩家从右往左追击侵略者，则玩家在进入敌人攻击范围内，不仅风险很高，而且与侵略者的距离太远导致打不中侵略者，这种就是纯粹的无意义风险了。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690688042269.png" alt="Alt text"></p><p>而在玩家从左往右攻击时，尽管同样进入敌人攻击范围时风险相同，但此时的玩家时可以打中敌人了。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E9%A3%8E%E9%99%A9%E5%9B%9E%E6%8A%A5%E7%90%86%E8%AE%BA/1690688336674.png" alt="Alt text"></p><p>因此《太空侵略者》的攻略是：迎击优于追击。</p><p>此外，玩家操控机体的宽度判定是游戏平衡性的关键因素，该参数决定了风险程度。不单是视觉层面的设计，也决定了游戏的深度和乐趣。</p><p>能控制风险的机制也是游戏平衡性的关键。如玩家可以躲在掩体之下。</p><p><code>控制并降低“风险”从而更容易获得“回报”，此为“攻略”。</code></p><h3 id="死亡之墙"><a href="#死亡之墙" class="headerlink" title="死亡之墙"></a>死亡之墙</h3><p>只要一个侵略者到达屏幕底部，此时玩家无论剩余多少条命都会立即结束游戏。此时游戏处于相当危险的境地，即风险达到极限的时刻。</p><p>但是，此时侵略者的激光是无法击中你的，故玩家的风险又降低的不少。</p><p>总体而言，死亡之墙就是风险和回报均处于最大的状态。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>风险与回报之间必须紧密连结，同时还要具备适当的量度。</p><p>所谓的“游戏性”，或是“拉扯程度”，只是电子游戏本身的一个特征。令玩家感受到沉浸感并使人娱乐其间的体验形式还有不少，并非所有游戏都是通过“游戏性”传达体验的。</p><h3 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h3><p>当一个游戏提高了自身“游戏性”后，所谓的“公众性”会随之降低。</p><p>以初代《星之卡比》为例，樱井政博选择了简化游戏操作，从而吸引更广泛的玩家群体。</p><h2 id="Squeeze-and-Release-压力的施加与释放"><a href="#Squeeze-and-Release-压力的施加与释放" class="headerlink" title="Squeeze and Release 压力的施加与释放"></a>Squeeze and Release 压力的施加与释放</h2><p>电子游戏的一大乐趣在于，游戏如何对玩家施压，又如何令玩家对其解压，这可谓是游戏乐趣的核心元素。</p><p>压力本身并无乐趣，但当它对玩家施压到一定程度后，突然将其释放，此时玩家将得到相当的爽快感。</p><ol><li><p>包括放置杂兵、设置障碍要素或解谜要素，总之就是对玩家的游戏造成妨碍作用的内容；在玩家除去上述压力要素之后，他们必然会有爽快感。</p></li><li><p>在玩家完成设置的挑战后，我们应该奖励玩家，为他们提供能更有效处理压力要素的手段。</p><ul><li>比如说经验值和新技能这类的东西，它们就是为了让玩家便于应对更强大的敌人。</li><li>使用游戏内货币购买更好的新装备也是一种不错的奖励机制。</li><li>让玩家随着流程推进而自行得到奖励要素，并将路线选择的自主权交予玩家本身，如此亦能提高游戏性。</li></ul></li></ol><p><code>施加压力之后，再予以释放，并令玩家为接下来的流程打好基础。</code>此为游戏设计中的压力元素。</p><h2 id="Game-Essence-in-Role-Playing-Games-RPG的游戏性"><a href="#Game-Essence-in-Role-Playing-Games-RPG的游戏性" class="headerlink" title="Game Essence in Role-Playing Games  RPG的游戏性"></a>Game Essence in Role-Playing Games  RPG的游戏性</h2><h3 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h3><p>首先，RPG 游戏需要构造一个让人随时面对未知挑战的冒险，探险的区域越为深入，则亦将面对愈加强大的敌人。但与此同时，挑战越危险的地方得到的收益也越大。</p><p>对于那种允许自行直接离开迷宫的游戏，或者是战败非强制掉落现已收集的所有奖励要素，这类游戏通常更为轻度一些。但不是说这种游戏不会提供高难度挑战，提供特定战斗的难度，这也不失为一种好的平衡。</p><h3 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h3><p>就对战而言，动作型角色扮演游戏（ARPG）需要把战斗场面平衡至对战策略之中。</p><p>例如从敌人外观上呈现对战策略：</p><ul><li>敌人现身，玩家需要根据敌方的相貌特征及攻击方式决定对战策略。敌人看上去弱火，此时给敌人上个招式，收效不错，这时候我们就有经验了，所谓玩家经验正是如此。</li></ul><p><code>针对敌人的弱点选用攻击招式以达到输出最大化，这便为游戏的策略性，亦为游戏性。</code></p><p>对于轻度游戏，最好不要搞出过分复杂化的策略内容。</p><ul><li>以《女神异闻录》系列为例，系统直接给出当前敌人的弱点属性以便于玩家自身连击，如此为对战带来了一定的多样性和节奏感。对于那种鼓励玩家使用克制属性进行攻击的游戏，这样的设计倒是完善了平衡性。</li></ul><p>虽然 RPG 游戏可以归纳出两个核心游戏性元素：探索、战斗，但 RPG 本身就是一个广阔复杂的大类，所以制作游戏的时候可不能让思维被现有通用游戏性元素所局限哦！</p><h2 id="Fun-Beyond-Game-Essence-游戏性之外的乐趣"><a href="#Fun-Beyond-Game-Essence-游戏性之外的乐趣" class="headerlink" title="Fun Beyond Game Essence 游戏性之外的乐趣"></a>Fun Beyond Game Essence 游戏性之外的乐趣</h2><p>一款电子游戏的乐趣并不局限于其游戏性。</p><ol><li><p>由操作自身带来乐趣</p><ul><li>电子游戏可以仅通过操作来提供大量的乐趣，屏幕内的世界不受自然法则的约束，对于现实世界的人来说，这是一个神秘且迷人的世界。若仅通过操作创造乐趣，对创作者而言，需要选好合适的设计方式，也要有感触及调谐改善手感的能力。</li></ul></li><li><p>冒险游戏和视觉小说</p><ul><li>这类游戏并不重视“风险回报”，乐趣来源点在剧情推进之上。</li><li>虽然它们可以被看做是小说或者电影的延伸产物，但仅靠一个引人注目的故事本身并不足以成为优秀的作品。与小说不用，游戏可以利用好电脑的交互。它们利用这一点来构建剧情，因此也成了此类游戏的乐趣及魔力所在。</li></ul></li><li><p>电影式及以剧情为主的游戏</p><ul><li>和第二类有点相似，但这一类的剧情元素可以融入各种游戏中，无论游戏类型。</li><li>电影式的表达手法以及剧情本身并非游戏性的必要组成元素。然而，二者均可为提升游戏性的关键，它们可以成为促使玩家向前推进直面前方危机的驱动力。</li><li>此外，鲜活的角色及世界观有助于加深玩家对游戏的印象，以创造出玩家与屏幕上正在发生的事件之间的内在联系。</li></ul></li><li><p>改编游戏</p><ul><li>这种游戏与电影、玩具、集换式卡牌等娱乐内容相关，均为针对某些特定 IP 的粉丝向相关产品。这不是一个游戏本身是否有趣的话题，而是这部游戏可否让一个 IP 的粉丝们在这个游戏世界中获得愉快的体验。如果玩家本身并非此 IP 受众，则评价游戏本身也没多大价值。对这样的游戏来说，游戏性并不在最重要的位置之上。</li></ul></li><li><p>生活模拟类游戏</p><ul><li>这些游戏重现了现实生活之中错综复杂的体验。在一个模拟世界里玩一个拟真的游戏能提供许多游戏性之外的乐趣。</li><li>这种游戏越贴近现实生活，玩家们就越能开始感觉到比实际显示在眼前的更多的信息以及更深层次的体验。</li></ul></li><li><p>建造类游戏</p><ul><li>这种游戏的乐趣本身就在于创造。但要是能配合得体的机制，如高空坠落死亡判定、制作东西来抵御敌人、或者冒着危险来收集材料，如此为此类游戏带来风险回报，则让游戏能提供更充足的乐趣。</li><li>此类游戏与生活模拟类游戏存在交际，诸如《我的世界》《动物森友会》。</li></ul></li><li><p>节奏游戏</p><ul><li>从音乐节奏得来快感是我们的天性，而非游戏提供的乐趣。对于这类游戏而言，玩家对当前曲目越为熟悉，也就越能体验到乐趣。</li><li>此类游戏围绕着“熟悉歌曲再打对节奏”进行设计，当然根据具体的设计手段也能带来拉扯程度，说明这种游戏也可将风险回报理论付诸实践。</li></ul></li></ol><p><strong>体育类游戏</strong></p><ul><li>现实中的体育活动均存在不同程度的拉扯，所以用数字化的形式重现体育项目，可以说它天生就带有一定的游戏性。</li><li>此外，运动之所有由观赏性，是因为观众都有自己支持的队伍，这些观众在玩游戏时很自然会将支持的队伍放在操作首选的位置，并能很强烈地感受到这个游戏里地起起伏伏。</li></ul><p>游戏性并非提供游戏乐趣地唯一要素。<code>先学会感受乐趣，再去学习如何打破常规。</code></p><h2 id="The-Fiend’s-Cauldron-“恶魔之缶”机制介绍"><a href="#The-Fiend’s-Cauldron-“恶魔之缶”机制介绍" class="headerlink" title="The Fiend’s Cauldron “恶魔之缶”机制介绍"></a>The Fiend’s Cauldron “恶魔之缶”机制介绍</h2><p>说到游戏难度，大部分游戏基本上都是“简单”、“普通”、“困难”三个等级。</p><p>“恶魔之缶”为《新光神话：帕鲁缇娜之镜》引入的难度调节机制。</p><ol><li><p>进入关卡前，画面中会先出现这个恶魔之缶。这是调节“紧张值”的东西，默认紧张值为2.0。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690707805627.png","alt":"恶魔之缶"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690708017732.png","alt":"恶魔之缶"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>当玩家往缶里加红心，后者为本作的结算货币，此时可以提高关卡的紧张值。随着紧张值的上升，游戏自身难度亦得以提高，此时敌人会变得更有攻击性，其攻击防御数值都会更高一些。但同时，得到的收益也会越多，可以获得更多的红心以及更为强力的武器。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709357716.png","alt":"恶魔之缶"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709382530.png","alt":"恶魔之缶"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>若是在关卡中死亡，此时缶中的红心就会撒掉一些，此时选择继续通关则会降低难度继续游戏。也会掉落一部分当前得到的红心，此时亦更难获得更高价值的收益要素。<br><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709443232.png" alt="恶魔之缶"></p></li><li><p>若想降低难度，也可以花费红心减少紧张值；紧张值降到0的话，此时玩家近乎无敌。<br><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E6%81%B6%E9%AD%94%E4%B9%8B%E7%BC%B6/1690709484191.png" alt="恶魔之缶"></p></li></ol><p>机制优势: </p><ul><li>玩家不用像采用传统难度机制的游戏那样用着简单难度一直打</li><li>玩家不会在一些高难度桥段卡关</li><li>风险回报理论的应用</li></ul><p>机制劣势：</p><ul><li>对于新玩家而言，容易让他们觉得这游戏过分硬核。这种促使玩家挑战极限的游戏自然难以与“休闲”二字挂钩。</li><li>2.0以下的紧张值对于可以降低难度这件事不怎么直观。新玩家是最需要降低难度的玩家群体。</li></ul><p>游戏性、拉扯程度、风险回报理论，以上内容赋予了“游戏感”的体验，但与此同时也让电子游戏显得不那么友好。</p><p>“恶魔之缶”虽然不完美，但它提供了电子游戏难度调节的全新设计思路，至今依然有学习参考的价值。</p><h2 id="Let-Players-Cheat-the-System-允许合法开挂"><a href="#Let-Players-Cheat-the-System-允许合法开挂" class="headerlink" title="Let Players Cheat the System 允许合法开挂"></a>Let Players Cheat the System 允许合法开挂</h2><p><code>游戏中的“策略”可以被定义为玩家最小化损失(Losses)和最大化收益(Gains)的过程。</code></p><p>游戏中的策略经常会以某些复杂的形式而构建，所以有时候可以利用系统机制玩出所谓“作弊”的手段。换句话说，就是完全不承担任何损失的情况下获得收益。</p><ul><li>在黑魂中，站在某个特定位置可以骗敌人自己掉下去摔死。</li></ul><h2 id="Falling-Sells-the-Feeling-of-Flight-飞行操作"><a href="#Falling-Sells-the-Feeling-of-Flight-飞行操作" class="headerlink" title="Falling Sells the Feeling of Flight 飞行操作"></a>Falling Sells the Feeling of Flight 飞行操作</h2><p>如果想在游戏制作过程中营造出在空中自由飞翔的感觉，首先要做的就是加入坠落伤害或是类似的惩罚机制。</p><p>大家当然想在那些存在飞行操作的游戏中做出好的手感，但是如果没有和飞行这个动作相左的元素的话，就总会让人觉得少了点什么。在有飞行要素的游戏中，此等“相左”元素即为坠落。</p><ul><li><p>在高速移动的作品中，玩家在触发某种条件后会减速。</p></li><li><p>在初代《皇牌空战》中，玩家在飞过海洋的路上会遇到一座特别长的桥梁，大家都想试试从桥下钢架穿过，从桥下成功拉起高度的感觉不要太爽。这种爽感的来源正式动作附带的风险以及成功将其克服的感觉。</p></li><li><p>在《飞天赛车》中，玩家的赛车在冲过特殊坡道后是会飞起来的，这样不光寻找飞行点会很有趣，赛车的能飞与否可让飞行本身的乐趣更上一层楼。</p></li></ul><p><code>在为作品添加机制的时候也要记得想想与之相反的机制，好比玩家的攻击手段和敌方的攻击手段理应成对出现，风险与回报也正是这相同硬币的两面。</code></p><h2 id="Do-We-Really-Need-Enemies-敌人存在的意义"><a href="#Do-We-Really-Need-Enemies-敌人存在的意义" class="headerlink" title="Do We Really Need Enemies? 敌人存在的意义"></a>Do We Really Need Enemies? 敌人存在的意义</h2><p>除开一些主打故事的以及益智游戏之外，绝大多数游戏里都有玩家需要打败的敌人。</p><p>除开个例，多数游戏给予玩家乐趣的方式是先施加，再释放压力。</p><ol><li>先制造障碍，障碍即是<code>压力（Stress）</code>。</li><li>障碍解除，是为<code>释放（Relief）</code>,这时玩家感到浑身轻松。</li><li>接着玩家获得物品或经验奖励，帮助玩家变得更强，此为<code>成长（Growth）</code>。</li><li>这样玩家就会对后续展开保持期待，并获得高度的满足感。结果便是移除下一个障碍变得更加轻松，谓之<code>推进（Progress）</code>，代表玩家可以进一步地探索作品。</li></ol><p>撇开打头阵的压力，剩下三个是让游戏真正变得好玩的要素，但是没有压力就很难做好后三者。</p><p>压力是有多种呈现形式的，并不一定非得通过杀敌和游戏机制设计不可。</p><ul><li>冒险游戏中的主人公和队友可能会深陷危机，这是压力。玩家则可以寻找能够释放这层压力的方式，并通过推进流程本身获得乐趣和愉悦感</li><li>购物的需要同样也是一种从施压到解压的过程，设置一些高价物品可以让玩家积累资源并怀有消费它们的期待感。</li></ul><p>游戏中是可以没有敌人的，但敌人带来施压和解压过程依旧必不可少，在设计作品时不妨尽可能试着引入成长和推进游戏的要素。</p><h2 id="Consider-Rewards-First-优先考虑奖励元素"><a href="#Consider-Rewards-First-优先考虑奖励元素" class="headerlink" title="Consider Rewards First 优先考虑奖励元素"></a>Consider Rewards First 优先考虑奖励元素</h2><p>游戏是需要在玩家击败敌方以及完成任务后提供奖励或是回报的，尤其是那些战斗占比较大的作品。</p><p>现今的游戏奖励可以表现为强化、金钱、经验值、技能点等形式。</p><p>回报，总体上讲，是玩家会去投入一款游戏的根本源泉。</p><p>像是金钱或分数即为随着游戏推进而不断积累的数值奖励，也需要同步设计对应的消费机制。</p><p>如果说一款游戏的消费体验打动不了玩家或者不顺畅，结果同样好不到哪去。</p><ul><li>素材也是一种可以用数值形式呈现的奖励，玩家收集来的素材能够接着创造新的物件，而游戏必须做到让玩家觉得能从整个过程中受益，且最终获得的物品极具价值，可以说这是一种相当高效的奖励机制。</li><li>其他类型奖励还有收集品，比如可用角色或装备。是否允许玩家用所持资源兑换这些收集品也取决于游戏本身的目标。</li></ul><p><code>奖励机制是让玩家持续玩下去的关键！</code></p><h2 id="Do-Competitive-Games-Have-to-Be-Complex-对抗型游戏的复杂度"><a href="#Do-Competitive-Games-Have-to-Be-Complex-对抗型游戏的复杂度" class="headerlink" title="Do Competitive Games Have to Be Complex? 对抗型游戏的复杂度"></a>Do Competitive Games Have to Be Complex? 对抗型游戏的复杂度</h2><p>要想入坑今时今日的对抗性游戏可得要点勇气，不少人都会犹豫，皆因这些游戏机制实在复杂，到了哪怕是看着别人玩都未必能搞懂这类游戏的玩法规则的地步。</p><p>有没有办法能让对抗游戏变得简单一点呢？</p><p>这里我们代入一下格斗游戏的场景：</p><ul><li>如果一个格斗游戏玩家没法移动，且只能使用单一拳击招式的话，这种游戏根本没有“对抗”可言，就是无聊至极的把对面按到死罢了。</li><li>于是我们加入了“走动”，这样就往对局中引入了“距离”的概念，但这还不够。</li><li>那么接着让玩家拳脚相交，亦能让踢技的硬直时间比拳头更长，踢技失误后对面还能还手。</li><li>再继续引入跳跃、防御、投技，每一点都可以让游戏的深度更上一层楼。</li></ul><p>在对抗格斗类游戏兴起之初，这类游戏的操作空间比起同时期的其他街机要来的更多，也就是所谓的“更有深度”。</p><p>招式绝对不是简简单单的出拳踢脚就罢了。将格斗游戏这个类型发扬光大的作品是《街霸2》，本作正是在对决设计上下了一番功夫，而其中诸多招式的特定使用规则更是让本作的游玩深度倍增。</p><p>当然这不意味着什么游戏都得把深度做到这种程度，只要广大玩家玩得开心就没问题。</p><p>不过如果想让游戏系统经得起长期推敲的话，其机制势必存在一定的复杂度。但至于这深度和广度的度在哪里，其实很难说。</p><p>其实某种程度上说，游戏的复杂性这事没法避免，但还是不要把习惯视为理所当然的好。</p><h2 id="Game-Essence-in-Falling-Block-Puzzle-Games-下落消除型游戏的游戏性"><a href="#Game-Essence-in-Falling-Block-Puzzle-Games-下落消除型游戏的游戏性" class="headerlink" title="Game Essence in Falling-Block Puzzle Games 下落消除型游戏的游戏性"></a>Game Essence in Falling-Block Puzzle Games 下落消除型游戏的游戏性</h2><p>市面上有不少类型的益智游戏，尽管说拼图类游戏并不存在任何博弈元素，而益智游戏的乐趣多源于“消除”的成就感。</p><p>《俄罗斯方块》理念最初来自于一种叫做“五联骨牌”的益智桌游，这款桌游需要玩家将12块形状各异的图块拼成一个完整的长方形。但和拼图游戏类似，五联骨牌也毫无游戏性可言。然而俄罗斯方块却有不少，产生差别的原因自然是因为后者存在风险与回报。</p><ul><li>下落消除型益智游戏的风险源自不断垒高的方块，垒得越高，自身思考的时间就越少。</li><li>相应的，玩家将方块消除即可减缓风险。要想一次性消除很多方块，玩家就得将自己置于险境之中，因此带来更强烈的满足感。</li><li>此外，游戏中方块的下落速度亦会随着时间推移变得越来越快，这样同样能增强风险，也让游戏过程更加刺激。</li><li>后续的俄罗斯方块还增加了一项机制，即玩家可以在方块落地后继续旋转和平移方块。这一点非常重要，皆因这种在刀尖上起舞的操作赋予了游戏更高一层的风险。</li></ul><p>消除解谜游戏非常简单直观，这就让这类游戏性同样十分好懂，设计这种游戏切勿只是从“消除方块”着手，相反应该去思考消除之所以有趣的原因。</p><p>只要能够理解游戏性的准则，就算是面对自己不擅长的类型也能很快完成构思。</p><h2 id="Dying-Comes-as-a-Relief-败北带来的快感"><a href="#Dying-Comes-as-a-Relief-败北带来的快感" class="headerlink" title="Dying Comes as a Relief? 败北带来的快感"></a>Dying Comes as a Relief? 败北带来的快感</h2><p>据某个海外的研究显示，人们在对抗型 FPS 游戏里击杀对手后会十分焦虑，反倒是在被击杀时会感到轻松。</p><ol><li><p>首先，角色可以不作为强调对象。</p><ul><li>想象角色死亡时的情景，如果游戏去强调角色本身的话，那每死一次都会让玩家心生不悦，但这并非此类游戏的实际情况。</li></ul></li><li><p>其次，失望情绪可以运用游戏规则扫清。</p><ul><li>不管是时间持续推进还是重新开新对局，只要能比较迅速的重新开启对局，玩家就可以接着玩下去，因为没有拿来沮丧的时间。</li></ul></li><li><p>最后，击败对方或许算不上一种回报。</p><ul><li>玩家的终极目标是获得胜利，如果打败的对手无法终结掉对局，目标便仍未达成，也就是说还不能放松。击败对手某种程度上也会向玩家展示一下自身被击败的样子。</li></ul></li></ol><p>不论玩家是击败了对手还是身为败北的一方，只要这些瞬间的乐趣能够打动玩家，那么它们就是最棒的娱乐消遣。</p><p>制作游戏时一定要仔细考虑这些方面，也包括如何让玩家失利后依旧继续游戏。</p><h2 id="Mountain-Climbing-Is-More-Than-Just-Climbing-有峰有谷的难度曲线"><a href="#Mountain-Climbing-Is-More-Than-Just-Climbing-有峰有谷的难度曲线" class="headerlink" title="Mountain Climbing Is More Than Just Climbing 有峰有谷的难度曲线"></a>Mountain Climbing Is More Than Just Climbing 有峰有谷的难度曲线</h2><p>在角色扮演以及其他一些含有角色成长要素的游戏里，需要在愈发难以对付的敌人和障碍中平衡好玩家的强度。</p><p>理想的玩家和敌人难度曲线应该是路途中要有峰有谷，过程中需要克服一定量的挑战，也会有一些平地供人休息。</p><p>一般来说，挑战通常都分布在 BOSS 战附近。<code>BOSS 不应该只是杂兵的加强版，相反 BOSS 战应该能迫使玩家形成对策，并且玩家在打过 BOSS 后也需要拿到与之匹配的丰厚奖励。</code></p><p>如果一个游戏的系统是敌人会和玩家同步强化，那么玩家推进游戏的动力将大打折扣，解决这种问题有多种不同办法，但任何办法都要为有趣对策留足生存空间。</p><h2 id="Make-Retries-Quick-落败重试一定要快"><a href="#Make-Retries-Quick-落败重试一定要快" class="headerlink" title="Make Retries Quick 落败重试一定要快"></a>Make Retries Quick 落败重试一定要快</h2><p>假设玩家在游戏里死亡了，需要重来，虽说具体还是根据游戏的总体目标和游戏性来定，但一般来说肯定是尽可能迅速要来得更好。</p><p>重开得快，玩家也就更有可能再次尝试而非直接放弃。试着减少让玩家感到无所事事的时间长度，让演出更加紧凑，读取时间也一定要短。</p><p>以重试来说，就其所带来的惩罚以及玩家需要重走流程量的内容度而言，也会影响玩家是否继续坚持玩下去，但最重要的还得数这一点：重开一定要快！</p><p>重开够快便能提升玩家对游戏难度和受阻之处的容忍度。</p><p>一味推进游戏并不足以让玩家一直保持兴致，关键是要让人上手操作。做到这点可以简单到让玩家按个键读读屏幕上的信息，但最好的办法莫过于尽快让人重新上手去玩。</p><p>要让玩家在失利的时候有切身实感，可以把失利时的效果做的浮夸而有力，但记得弄完就赶紧翻篇。这个效果的具体时长还是取决于游戏类型，不过应以 1~4 秒为主，再长就不太好了。并且演出效果放完后就赶紧让人上手操作，还要确保玩家不会一重开就被敌人弄死。</p><h2 id="Is-Your-Game-Appealing-Enough-to-Start-Over-作品是否有值得反复落败的魅力"><a href="#Is-Your-Game-Appealing-Enough-to-Start-Over-作品是否有值得反复落败的魅力" class="headerlink" title="Is Your Game Appealing Enough to Start Over? 作品是否有值得反复落败的魅力"></a>Is Your Game Appealing Enough to Start Over? 作品是否有值得反复落败的魅力</h2><p>受《恶魔之魂》《黑暗之魂》等魂类游戏大热的影响，从2010年代后期开始，高难度游戏的数量越发增多。这类游戏会互相影响，并进一步带热这股风潮。尤其可以指出的是那些有着角色会永久死亡及类似机制的游戏，也就是游戏失败就得从头再来，这种机制可谓构成 Rougelike 和 Rougelite 类游戏的核心。</p><p>Rougelike: 总的来说，是一类地图和道具随机生成，且死亡后从头开始的游戏。早期的 PC 游戏里有一个叫 Rouge 的作品，这个词就是从这来的。</p><p>Rougelite: 只包含了部分 Rouge 元素。和原版 Rouge 类型不同的那些动作类作品应该是 Rougelite，这类游戏所包含的十分灵活的动作和表现形式让它们玩起来颇具爽感，与此同时随机的装备，道具还有事件又会给每局游戏带来不同的体验。</p><p>类似 Rouge 的游戏就是 Rougelike，而仅仅只借鉴部分要素的就属于 Roguelite 。然后之其中的区别只有在提到 Rougelite 概念的时候才成立，所以把这类游戏统称 “Rougelike” 也无不妥。</p><p>死了就要重开这种机制其实非常适合独立游戏，游戏说到底本就已经需要重复劳作，那么有了这个机制，独立游戏就无须去做那么多的素材了，是件好事。</p><p>不过如果仔细想想，绝大多数玩家肯定不会喜欢一遍遍的从头开始并无限重复相同的内容。对于想要推进的人而言，他们更需要的是驱动力。动力一般来说即为想看接下来发展的感觉，但为了引出这点期望，需要给玩家一点能够期盼的盼头。换句话说，游戏本身要有足够的吸引力，如此方可吸引玩家继续推进。要是新引力不足或是变化不足，玩家就不会想进行重复的劳作。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E4%BD%9C%E5%93%81%E6%98%AF%E5%90%A6%E6%9C%89%E5%80%BC%E5%BE%97%E5%8F%8D%E5%A4%8D%E8%90%BD%E8%B4%A5%E7%9A%84%E9%AD%85%E5%8A%9B/1690726580787.png" alt="Alt text"></p><p>那我们又该怎样推出可以推动玩家前进的要素呢？</p><p>这就完全取决于游戏的体量，剧情讲述方式，以及填充内容的方式了。</p><p><code>身为游戏创作者，去思考自己作品能给到玩家怎样的吸引力会很有好处，尤其应该试着去思考玩家对于反复游玩同一块内容的感受。</code></p><h1 id="Planning-amp-Game-Design-企划和游戏设计"><a href="#Planning-amp-Game-Design-企划和游戏设计" class="headerlink" title="Planning &amp; Game Design 企划和游戏设计"></a>Planning &amp; Game Design 企划和游戏设计</h1><h1 id="Design-Specifics-设计细节"><a href="#Design-Specifics-设计细节" class="headerlink" title="Design Specifics 设计细节"></a>Design Specifics 设计细节</h1><h2 id="Stop-for-Big-Moments-画面定格"><a href="#Stop-for-Big-Moments-画面定格" class="headerlink" title="Stop for Big Moments! 画面定格"></a>Stop for Big Moments! 画面定格</h2><p>不要吝啬停顿效果的使用。</p><p>打击定格（Hit Stop）：指代触发特定动作之后所造成的停顿效果，是否应用此效果会直接影响打击力度的直观体现，是个非常重要的效果。</p><p>首领定格（Boss Stop）：指代的是击败 BOSS 那一刻所出现的画面停顿效果</p><p>在你游戏的关键时刻进行定格，让玩家们直观感受到胜利或挫败感吧。</p><h2 id="Giving”Weight”to-Buttons-构造操作手感"><a href="#Giving”Weight”to-Buttons-构造操作手感" class="headerlink" title="Giving”Weight”to Buttons 构造操作手感"></a>Giving”Weight”to Buttons 构造操作手感</h2><p>单纯是角色移动速度就会影响手感，还有诸如惯性、跳跃的物理机制、延迟、帧率等因素。</p><p>电子游戏是通过人与游戏设备的交互来游玩的，玩家通过眼睛和耳朵接收信息，然后用手的操作输入反馈信息。大家也许认为这两种传输是单向的，但是手是可以感知反馈的。</p><p>每种游戏设备的操作摇杆千差万别，所以在开发游戏的时候也需要考虑到摇杆自身的参数。</p><h2 id="Jump-Physics-跳跃机制"><a href="#Jump-Physics-跳跃机制" class="headerlink" title="Jump Physics 跳跃机制"></a>Jump Physics 跳跃机制</h2><p>首先，跳跃操作在编程时需要考虑哪些参数？</p><p>重点要设定一个角色处于空中时的落地方向加速度。首先设定默认的垂直方向上速度。</p><p>在任天堂全明星大乱斗SP中，每个角色的跳跃均设置了很高的起跳速度，随着帧数的推移，落地加速度也会逐步增大；当跳跃到最高点时，落地加速度会恢复为默认值。这样一来，即便玩家没有及时反应过来也可以跟上操作。如此引入了更多的参数以丰富该机制。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E8%B7%B3%E8%B7%83%E6%9C%BA%E5%88%B6/1690791713304.png" alt="Alt text"></p><h2 id="Eight-Hit-Stop-Techniques-大乱斗SP的打击定格设计技巧"><a href="#Eight-Hit-Stop-Techniques-大乱斗SP的打击定格设计技巧" class="headerlink" title="Eight Hit Stop Techniques 大乱斗SP的打击定格设计技巧"></a>Eight Hit Stop Techniques 大乱斗SP的打击定格设计技巧</h2><ol><li><p>提高受击角色晃动程度</p><ul><li>打击定格可令双方同时停止运动，打击受击方表现出更大的晃动，输出方晃动程度较低。</li></ul></li><li><p>勿动伤害判定区域（Hit Box）</p><ul><li>要是一个角色在受到打击时呈现晃动效果，到头来相当于也让其伤害判定区一起动，如此易使连招打空。在大乱斗中，仅角色建模晃动，自身伤害判定区域不动。</li></ul></li><li><p>地面水平方向晃动，空中随意方向晃动</p><ul><li>考虑到角色双方面对朝向问题，纵向晃动的表现效果会更好一些，但在地面上就容易搞出建模卡地板的问题。</li></ul></li><li><p>晃动幅度衰减</p><ul><li>晃动程度并非定量，它触发初始数值大，结束的时候数值小，可以按打击定格持续帧数去给合适的衰减渐变量。</li></ul></li><li><p>控制打击定格变量</p><ul><li>在大乱斗系列中，力度越高的招式其打击定格持续帧越多，有时候也会令其持续帧翻倍。以马尔斯横吹飞为例，它剑柄为输出更低的最次打击点，故晃动反馈较少；剑端为输出更高的最佳打击点，故而晃动明显。这不仅限于伤害输出区别，其表现效果也有成倍的差异。</li></ul></li><li><p>插入动作转化帧</p><ul><li>在不少游戏中，受到打击的角色会在打击定格时原地触发冻结帧，也就是固定一个姿势。但在大乱斗系列中，角色在受击时会有几帧转化动作的动画效果，不会直接冻结动作，也不会卡在特定受击反馈姿势上，而是在受击时以<code>4帧</code>左右的受击变化动画去过渡自身动作 <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793094038.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793147748.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793173908.png","alt":"Alt text"},{"url":"../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/%E5%A4%A7%E4%B9%B1%E6%96%97sp%E7%9A%84%E6%89%93%E5%87%BB%E5%AE%9A%E6%A0%BC%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7/1690793207178.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li></ul></li><li><p>打击定格期间继续推进攻击方的微小动作</p><ul><li>如马尔斯朝对面的敌人横向挥挑时，打击定格期间，挥挑动作依然保持上挑的运动幅度。在打击定格中，攻击方动作的幅度相对较低，与常规帧相比微乎其微。完成打击定格后，动作幅度又会恢复至原有程度。这种效果可以针对性的开启，不是每个招式都有这种效果。</li></ul></li><li><p>晃动幅度以镜头相对距离而定</p><ul><li>当镜头拉远时，角色的晃动幅度通常要大一些，如此来保证无论镜头远近，打击定格所造成的晃动效果一致。</li></ul></li></ol><h2 id="Don’t-Anchor-Your-Center-Point-3D游戏的角色中心点"><a href="#Don’t-Anchor-Your-Center-Point-3D游戏的角色中心点" class="headerlink" title="Don’t Anchor Your Center Point 3D游戏的角色中心点"></a>Don’t Anchor Your Center Point 3D游戏的角色中心点</h2><p>3D游戏的镜头基本都会聚焦在一个“注视点”上，这个点通常是不可见的，但有镜头机制的游戏里通常都会有它。</p><p>游戏的视角之所以可以紧紧围绕玩家的角色旋转，正是因为镜头的中心就位于角色之上。换句话说，注视点锁定在了角色身上，但是不要把注视点安在角色上！</p><p>以《神游马力欧》为例，马力欧在地面移动的时，人物一直处于镜头中心；而在跳跃时，马力欧会偏离画面中心，到画面相对偏上的位置。</p><p>如果把注视点放在角色身上，镜头完全跟随角色移动的话，就很难分辨马力欧到底跳了多高。因此注视点不应该，或者尽可能低幅度以 Y 轴进行追踪，这样跳跃动作才会给玩家以高度感。</p><p><img src="/../img/%E6%A8%B1%E4%BA%95%E8%80%81%E5%B8%88%E7%9A%84%E5%BC%80%E5%8F%91%E8%AF%BE%E5%A0%82/3D%E6%B8%B8%E6%88%8F%E7%9A%84%E8%A7%92%E8%89%B2%E4%B8%AD%E5%BF%83%E7%82%B9/1690810214945.png" alt="Alt text"></p><p>选择正确的镜头形式能极大提升游戏表现力，但还是需要根据游戏类型选择合适的镜头效果。</p><ul><li><p>在《装甲核心》中，在上下左右移动之时，玩家操作的 AC 会避开画面中心，这样玩家能更容易看清需要躲开的子弹与导弹。</p></li><li><p>锁定注视点的做法和追求逼真的第三人称竞速游戏会很合拍。</p></li><li><p>《飞天赛车》中，当玩家漂移时，飞天赛车会略微偏移注视点。这么做是为了给玩家以真切的操作反馈，以及增强漂移时那种飞檐走壁的快感。</p></li><li><p>而对于那些意图提供更广阔视野的横板卷轴游戏，其镜头会更多去展现玩家前方的场景。</p></li></ul><p>总之，<code>切勿默认游戏镜头就应该跟随操作角色，而是应该根据游戏机制和表现需要做出合适选择。</code></p><h2 id="Say-No-to-Slow-！-规避“慢”的问题"><a href="#Say-No-to-Slow-！-规避“慢”的问题" class="headerlink" title="Say No to Slow ！ 规避“慢”的问题"></a>Say No to Slow ！ 规避“慢”的问题</h2><p>这个“慢”当然包括类似角色走不快这种字面意思上的慢，但更要紧的还得数那些过于耗费时间的东西，以及让人无事可做的大段空闲时间，具体来说指的就是那些没拿来爽玩反而被浪费掉的时间。</p><p>制作游戏时需要注意实际游戏时长，即真正由玩家操作的时长。在总游戏时长中属于玩家操作的时间有多少，无法操作的有多少<br>，以及纯粹无用的时间又有多少，需要悉数盘点。</p><p><code>让玩家等待是一种罪过！</code>虽然如今的游戏规模越来越大，大场面越来越多，但还是应该尽量轻装上阵，如此方为正道。</p><h2 id="Units-of-Speed-速度单位"><a href="#Units-of-Speed-速度单位" class="headerlink" title="Units of Speed 速度单位"></a>Units of Speed 速度单位</h2><p>速度即距离&#x2F;时间，知任意两项便可求第三项。</p><p>早期的像素游戏一般用“p来表示速度，意为每帧像素数，表示单个物件每帧会有多少像素产生移动。</p><p>3D游戏时代，不少作品角色和环境都按照真实比例制作，可以很方便的使用“公里小时”这样现实世界的单位。当然，根据游戏情况，依然需要用其他方式来表示速度。</p><p>不管是写文档还是调参，无法表示速度就无从开展工作，因此一定要用具体的速度标准和整个团队达成意义一致。</p><h1 id="Animation-动画"><a href="#Animation-动画" class="headerlink" title="Animation 动画"></a>Animation 动画</h1><h1 id="Graphics-图形"><a href="#Graphics-图形" class="headerlink" title="Graphics 图形"></a>Graphics 图形</h1><h1 id="Effect-特效"><a href="#Effect-特效" class="headerlink" title="Effect 特效"></a>Effect 特效</h1><h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><h1 id="Team-Management-团队管理"><a href="#Team-Management-团队管理" class="headerlink" title="Team Management 团队管理"></a>Team Management 团队管理</h1><h1 id="Audio-音效"><a href="#Audio-音效" class="headerlink" title="Audio 音效"></a>Audio 音效</h1><h1 id="Programming-amp-Tech-编程和技术"><a href="#Programming-amp-Tech-编程和技术" class="headerlink" title="Programming &amp; Tech 编程和技术"></a>Programming &amp; Tech 编程和技术</h1><h1 id="Marketing-市场营销"><a href="#Marketing-市场营销" class="headerlink" title="Marketing 市场营销"></a>Marketing 市场营销</h1><h1 id="Grab-Bag-杂谈"><a href="#Grab-Bag-杂谈" class="headerlink" title="Grab Bag  杂谈"></a>Grab Bag  杂谈</h1><h1 id="Game-Concepts-开发理念"><a href="#Game-Concepts-开发理念" class="headerlink" title="Game Concepts 开发理念"></a>Game Concepts 开发理念</h1>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 任天堂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Camera Framework Essentials for Games</title>
      <link href="/post/7f3fe033.html"/>
      <url>/post/7f3fe033.html</url>
      
        <content type="html"><![CDATA[<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://dev.epicgames.com/community/learning/courses/RRr/unreal-engine-camera-framework-essentials-for-games">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/dev.epicgames.com/community/learning/courses/RRr/unreal-engine-camera-framework-essentials-for-games.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">Camera Framework Essentials for Games</div>            <div class="tag-link-sitename">Epic</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="Understanding-Camera-Actors"><a href="#Understanding-Camera-Actors" class="headerlink" title="Understanding Camera Actors"></a>Understanding Camera Actors</h2><ul><li>Camera Component</li></ul><p>摄像机组件属于摄像机Actor类</p><ul><li>Camera Actor</li></ul><p>摄像机Actor是摄像机组件的封装类，这使得它们可以直接放入世界中。</p><p>视图窗口 <code>Show-&gt;Advanced-&gt;Camera Frustums</code> 可打开场景中的摄像机视锥范围显示</p><ul><li>Camera Responsibility Chain 摄像机责任链</li></ul><p>重要程度或管理顺序依次为：</p><p>Camera Component -&gt; Actor or Player Controller -&gt; Player Controller Manager</p><h2 id="Static-Dynamic-and-Active-Cameras"><a href="#Static-Dynamic-and-Active-Cameras" class="headerlink" title="Static,Dynamic,and Active Cameras"></a>Static,Dynamic,and Active Cameras</h2><p>Types of Camera:</p><ul><li>Static&#x2F;Fixed 静态或固定摄像机</li><li>Dynamic 动态摄像机</li><li>Active 激活的摄像机</li></ul><h2 id="Using-Spring-Arms"><a href="#Using-Spring-Arms" class="headerlink" title="Using Spring Arms"></a>Using Spring Arms</h2><p>创建组件 SpringArmsComponent，然后将Camera组件放在它的下一层级</p><h2 id="Common-Spring-Arm-Features"><a href="#Common-Spring-Arm-Features" class="headerlink" title="Common Spring Arm Features"></a>Common Spring Arm Features</h2><ul><li><p>Socket Offset<br>插槽偏移</p></li><li><p>Target Offset<br>目标偏移</p></li><li><p>Camera Collision<br>摄像机碰撞</p></li><li><p>Use Pawn Control Rotation<br>使用控制器的旋转控制摄像机旋转</p></li><li><p>lag<br>滞后、延迟</p><ul><li>Camera Lag<br>  摄像机延迟</li><li>Camera Rotation Lag<br>  旋转延迟</li><li>Camera Lag Speed<br>  延迟速度。数值越高，延迟越低。</li></ul></li></ul><h2 id="Types-of-Camera-Shake"><a href="#Types-of-Camera-Shake" class="headerlink" title="Types of Camera Shake"></a>Types of Camera Shake</h2><p>新建类-&gt; ALL ClASSES 中搜索 <code>Camera Shake</code>:</p><ul><li><code>CameraShakeBase</code><ul><li><code>DefaultCameraShakeBase</code> 和CameraShakeBase的唯一区别是会默认使用柏林噪声</li><li><code>MatineeCameraShake</code> 旧版摄像机抖动</li></ul></li></ul><h2 id="Single-Shot-Shake-Landing-Impact"><a href="#Single-Shot-Shake-Landing-Impact" class="headerlink" title="Single Shot Shake - Landing Impact"></a>Single Shot Shake - Landing Impact</h2><p>蓝图节点 <code>Play World Camera Shake</code></p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/Camera-Framework-Essentials-for-Games/1689424038814.png","alt":"Play World Camera Shake"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li>Shake 选取CameraShake类的预设</li><li>Epicenter 震中，即抖动输入的位置，代表抖动开始的位置</li><li>Inner Radius 内径，晃动最剧烈的区域</li><li>Outer Radius 外径，影响最远的区域</li></ul><p>摄像机是否能够看到震动，与玩家位置无关，取决于摄像机与震中的距离。</p><p>在场景中实时测试并查看抖动效果:</p><ol><li>确保视口菜单中的 <code>Realtime</code> 已开启</li><li>在场景中添加一<code>CameraShakeSourceActor</code></li><li>在视口菜单中勾选 <code>Allow Camera Shakes</code></li><li>菜单栏打开 <code>Window-&gt;Cinematics-&gt;Camera Shake Previewer</code></li><li>视口靠近抖动源，点击<code>Play</code>后即可看到抖动效果</li></ol><h2 id="Continuous-Camera-Shake-Sprinting"><a href="#Continuous-Camera-Shake-Sprinting" class="headerlink" title="Continuous Camera Shake - Sprinting"></a>Continuous Camera Shake - Sprinting</h2><p>编辑器中 <code>Shit + 鼠标左键</code> 可展开折叠栏下的所有折叠项</p><p><img src="/../img/Camera-Framework-Essentials-for-Games/1689420425301.png" alt="蓝图实现冲刺抖动示例"></p><h2 id="Switching-Cameras-with-View-Target-Blend-Method-1"><a href="#Switching-Cameras-with-View-Target-Blend-Method-1" class="headerlink" title="Switching Cameras with View Target Blend - Method 1"></a>Switching Cameras with View Target Blend - Method 1</h2><p>蓝图节点 <code>Set View Target with Blend</code></p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Camera-Framework-Essentials-for-Games/1689424362620.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>它会使用“设置混合”函数，随着时间的推移是视图目标过渡到新的Actor</p><h2 id="Switching-Cameras-with-View-Target-Blend-Method-2"><a href="#Switching-Cameras-with-View-Target-Blend-Method-2" class="headerlink" title="Switching Cameras with View Target Blend - Method 2"></a>Switching Cameras with View Target Blend - Method 2</h2><p>C++的实现方式</p><h2 id="Conclusion-to-Cameras-Framework-Essentials-for-Games"><a href="#Conclusion-to-Cameras-Framework-Essentials-for-Games" class="headerlink" title="Conclusion to Cameras Framework Essentials for Games"></a>Conclusion to Cameras Framework Essentials for Games</h2>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Game Ability System</title>
      <link href="/post/a131da00.html"/>
      <url>/post/a131da00.html</url>
      
        <content type="html"><![CDATA[<h2 id="GAS插件介绍"><a href="#GAS插件介绍" class="headerlink" title="GAS插件介绍"></a>GAS插件介绍</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1X5411V7jh/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1X5411V7jh/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">GAS插件介绍（入门篇） | 伍德 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Gameplay Ability System，简称（GAS）。是一个健壮的，高度可拓展的gameplay框架，通常用于构建RPG、MOBA等游戏的完整战斗逻辑框架。</p><p>通过GAS，可以快速地制作游戏中的主动&#x2F;被动技能、各种效果buff、计算属性伤害、处理玩家各种战斗状态逻辑。</p><p><strong>GAS提供了哪些功能？</strong></p><ol><li>实现了带有消耗和冷却功能的角色技能</li><li>处理数值属性（生命、魔法、攻击力、防御力）</li><li>应用状态效果（击飞、着火、眩晕）</li><li>应用游戏标签（GameplayTags）</li><li>生成特效和音效</li><li>完整的网络复制、预测功能</li></ol><p><strong>适合使用GAS的项目</strong></p><ol><li>C++项目，开发人员有充足的C++开发经验</li><li>使用Dedicated Server的联机游戏</li><li>项目有大量且复杂的技能逻辑设计需求</li></ol><p><strong>插件推荐</strong></p><ul><li><a href="https://marketplace-website-node-launcher-prod.ol.epicgames.com/ue/marketplace/en-US/product/able-ability-system">Able Ability System</a></li><li><a href="https://marketplace-website-node-launcher-prod.ol.epicgames.com/ue/marketplace/en-US/product/ascent-combat-framework-c-action-rpg-creator">Ascent Comba</a></li></ul><h3 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h3><h4 id="Ability-System-Component"><a href="#Ability-System-Component" class="headerlink" title="Ability System Component"></a>Ability System Component</h4><p>Ability System Component (ASC)是整个GAS的基础组件。</p><p>ASC本质上是一个UActorComponent，用于处理整个框架下的交互逻辑，包括<code>使用技能</code>（GameplayAbility）、包含<code>属性</code>（AttributeSet）、处理各种<code>效果</code>（GameplayEffect）。</p><p>所有需要应用GAS的对象（Actor），都必须拥有GAS组件。</p><p>拥有ASC的Actor被称为ASC的<code>OwnerActor</code>，ASC实际作用的Actor叫做<code>AvatarActor</code>。</p><p>ASC可以被赋予某个角色ASC，也可以被赋予PlayerState（可以保存死亡角色的一些数据）。</p><h4 id="GamePlay-Tags"><a href="#GamePlay-Tags" class="headerlink" title="GamePlay Tags"></a>GamePlay Tags</h4><p>FGameplayTags 是一种<code>层级标签</code>，有父子级关系，如 Parent.child.GrandChild 。通过 GamePlayTagManager 进行注册。</p><p>替代了原来的 Bool ,或 Enum 的结构，可以在玩法设计中更高效的标记对象的行为或状态。</p><h4 id="Gameplay-Ability"><a href="#Gameplay-Ability" class="headerlink" title="Gameplay Ability"></a>Gameplay Ability</h4><p>Gameplay Ability(GA) 标识了游戏中的一个对象（Actor）可以做的<code>行为或技能</code>。</p><p>能力（Ability）可以是<code>普通攻击</code>或者<code>吟唱技能</code>，可以是角色被<code>击飞倒地</code>，还可以是<code>使用某种道具</code>、<code>交互某个物件</code>，甚至<code>跳跃</code>、<code>飞行</code>等角色行为也可以是 Ability 。</p><p>Ability 可以被赋予对象或从对象的 ASC 中移除，对象同时可以激活多个 GameplayAbility 。</p><p><strong>基本的移动输入、UI交互行为则不能或不建议通过GA来实现。</strong></p><p><img src="/../img/Game%20Ability%20System/1690206082610.png" alt="GAS流程图"></p><h4 id="Gameplay-Effect"><a href="#Gameplay-Effect" class="headerlink" title="Gameplay Effect"></a>Gameplay Effect</h4><p>Gameplay Effect(GE) 是 Ability 对自己或他人<code>产生影响</code>的途径。</p><p>GE 通常可以被理解为我们游戏中的 buff 。 比如增益&#x2F;减益效果（修改属性）。</p><p>但是 GAS 中的 GE 也更加广义，释放技能时候的<code>伤害结算</code>，施加特殊效果的<code>控制</code>、<code>霸体</code>效果（修改 GameplayTag ）都是通过 GE 来实现的。</p><p>GE 相当于一个可配置的<code>数据表</code>，不可以添加逻辑。开发者创建一个 UGameplayEffect 的派生蓝图，就可以根据需求制作想要的效果。</p><h4 id="Attribute-Set"><a href="#Attribute-Set" class="headerlink" title="Attribute Set"></a>Attribute Set</h4><p>AttributeSet 负责定义和持有属性，并且管理属性的<code>变化</code>，包括<code>网络同步</code>。</p><p>需要在 Actor 中被添加为成员变量，并注册到 ASC(C++)。</p><p>一个 ASC 可以拥有<code>一个或多个（不同的）</code>AttributeSet，因此可以角色共享一个很大的 Attribute Set，也可以每个角色按需添加 Attribute Set。</p><p>可以在属性变化前（PreAttributeChange）后（PostCameplayEffectExecute）处理相关逻辑，可以通过委托的方式绑定属性变化。</p><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><ol><li><p>创建 <code>C++</code> 工程，开启 GAS 插件。</p></li><li><p>注册插件（C++中完成注册）</p></li></ol><p><code>/Source/GASSample/GASSample.Bulid.cs</code> 注册插件，自定义Task需要</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> UnrealBuildTool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GASSample</span> : ModuleRules</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GASSample</span><span class="params">(ReadOnlyTargetRules Target)</span> : base(Target)</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;</span><br><span class="line"></span><br><span class="line">PublicDependencyModuleNames.<span class="built_in">AddRange</span>(<span class="keyword">new</span> string[] &#123; <span class="string">&quot;Core&quot;</span>, <span class="string">&quot;CoreUObject&quot;</span>, <span class="string">&quot;Engine&quot;</span>, <span class="string">&quot;InputCore&quot;</span>, <span class="string">&quot;HeadMountedDisplay&quot;</span>, </span><br><span class="line"><span class="string">&quot;GameplayAbilities&quot;</span>,<span class="comment">/* 修改：注册插件 */</span></span><br><span class="line"><span class="string">&quot;GameplayTags&quot;</span>, <span class="string">&quot;GameplayTasks&quot;</span><span class="comment">/* 修改：自定义Task需要 */</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>修改 character 文件</li></ol><ul><li><code>/Source/GASSample/GASSampleCharacter.h</code>中添加引用、继承接口、申明ASC、实现接口方法、声明Ability数组。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;CoreMinimal.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/Character.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：添加引用</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AbilitySystemInterface.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AbilitySystemComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SampleAttributeSet.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GASSampleCharacter.generated.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">UCLASS</span>(config=Game)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AGASSampleCharacter</span> : <span class="keyword">public</span> ACharacter,</span><br><span class="line"><span class="keyword">public</span> IAbilitySystemInterface <span class="comment">//修改：继承接口</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">GENERATED_BODY</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Camera boom positioning the camera behind the character */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = Camera, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">USpringArmComponent</span>* CameraBoom;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Follow camera */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = Camera, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UCameraComponent</span>* FollowCamera;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：申明ASC</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category = GameplayAbilities, meta = (AllowPrivateAccess = <span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UAbilitySystemComponent</span>* AbilitySystem;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：实现接口方法</span></span><br><span class="line"><span class="function">UAbilitySystemComponent* <span class="title">GetAbilitySystemComponent</span><span class="params">()</span><span class="type">const</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：声明Ability数组</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(EditAnywhere, BlueprintReadWrite, Category = Abilities)</span><br><span class="line">TArray&lt;TSubclassOf&lt;UGameplayAbility&gt;&gt; MyAbilities;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UPROPERTY</span>()</span><br><span class="line">USampleAttributeSet* AttributeSet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">AGASSampleCharacter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=Camera)</span><br><span class="line"><span class="type">float</span> BaseTurnRate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Base look up/down rate, in deg/sec. Other scaling may affect final rate. */</span></span><br><span class="line"><span class="built_in">UPROPERTY</span>(VisibleAnywhere, BlueprintReadOnly, Category=Camera)</span><br><span class="line"><span class="type">float</span> BaseLookUpRate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改：添加BeginPlay</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">BeginPlay</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Resets HMD orientation in VR. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnResetVR</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Called for forwards/backward input */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveForward</span><span class="params">(<span class="type">float</span> Value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Called for side to side input */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MoveRight</span><span class="params">(<span class="type">float</span> Value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * Called via input to turn at a given rate. </span></span><br><span class="line"><span class="comment"> * @param RateThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TurnAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Called via input to turn look up/down at a given rate. </span></span><br><span class="line"><span class="comment"> * @param RateThis is a normalized rate, i.e. 1.0 means 100% of desired turn rate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LookUpAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Handler for when a touch input begins. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TouchStarted</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Handler for when a touch input stops. */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TouchStopped</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="comment">// APawn interface</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">SetupPlayerInputComponent</span><span class="params">(<span class="keyword">class</span> UInputComponent* PlayerInputComponent)</span> <span class="keyword">override</span></span>;</span><br><span class="line"><span class="comment">// End of APawn interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/** Returns CameraBoom subobject **/</span></span><br><span class="line"><span class="function">FORCEINLINE <span class="keyword">class</span> USpringArmComponent* <span class="title">GetCameraBoom</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> CameraBoom; &#125;</span><br><span class="line"><span class="comment">/** Returns FollowCamera subobject **/</span></span><br><span class="line"><span class="function">FORCEINLINE <span class="keyword">class</span> UCameraComponent* <span class="title">GetFollowCamera</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> FollowCamera; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">OnHealthChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintImplementableEvent)</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">K2_OnHealthChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">OnPhysicalChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">UFUNCTION</span>(BlueprintImplementableEvent)</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">K2_OnPhysicalChanged</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>/Source/GASSample/GASSampleCharacter.cpp</code> 中进行实例化</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright Epic Games, Inc. All Rights Reserved.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GASSampleCharacter.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HeadMountedDisplayFunctionLibrary.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Camera/CameraComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Components/CapsuleComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Components/InputComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/CharacterMovementComponent.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/Controller.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GameFramework/SpringArmComponent.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">UAbilitySystemComponent* <span class="title">AGASSampleCharacter::GetAbilitySystemComponent</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> AbilitySystem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// AGASSampleCharacter</span></span><br><span class="line"></span><br><span class="line">AGASSampleCharacter::<span class="built_in">AGASSampleCharacter</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Set size for collision capsule</span></span><br><span class="line"><span class="built_in">GetCapsuleComponent</span>()-&gt;<span class="built_in">InitCapsuleSize</span>(<span class="number">42.f</span>, <span class="number">96.0f</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// set our turn rates for input</span></span><br><span class="line">BaseTurnRate = <span class="number">45.f</span>;</span><br><span class="line">BaseLookUpRate = <span class="number">45.f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don&#x27;t rotate when the controller rotates. Let that just affect the camera.</span></span><br><span class="line">bUseControllerRotationPitch = <span class="literal">false</span>;</span><br><span class="line">bUseControllerRotationYaw = <span class="literal">false</span>;</span><br><span class="line">bUseControllerRotationRoll = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Configure character movement</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;bOrientRotationToMovement = <span class="literal">true</span>; <span class="comment">// Character moves in the direction of input...</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;RotationRate = <span class="built_in">FRotator</span>(<span class="number">0.0f</span>, <span class="number">540.0f</span>, <span class="number">0.0f</span>); <span class="comment">// ...at this rotation rate</span></span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;JumpZVelocity = <span class="number">600.f</span>;</span><br><span class="line"><span class="built_in">GetCharacterMovement</span>()-&gt;AirControl = <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a camera boom (pulls in towards the player if there is a collision)</span></span><br><span class="line">CameraBoom = <span class="built_in">CreateDefaultSubobject</span>&lt;USpringArmComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;CameraBoom&quot;</span>));</span><br><span class="line">CameraBoom-&gt;<span class="built_in">SetupAttachment</span>(RootComponent);</span><br><span class="line">CameraBoom-&gt;TargetArmLength = <span class="number">300.0f</span>; <span class="comment">// The camera follows at this distance behind the character</span></span><br><span class="line">CameraBoom-&gt;bUsePawnControlRotation = <span class="literal">true</span>; <span class="comment">// Rotate the arm based on the controller</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a follow camera</span></span><br><span class="line">FollowCamera = <span class="built_in">CreateDefaultSubobject</span>&lt;UCameraComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;FollowCamera&quot;</span>));</span><br><span class="line">FollowCamera-&gt;<span class="built_in">SetupAttachment</span>(CameraBoom, USpringArmComponent::SocketName); <span class="comment">// Attach the camera to the end of the boom and let the boom adjust to match the controller orientation</span></span><br><span class="line">FollowCamera-&gt;bUsePawnControlRotation = <span class="literal">false</span>; <span class="comment">// Camera does not rotate relative to arm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Note: The skeletal mesh and anim blueprint references on the Mesh component (inherited from Character) </span></span><br><span class="line"><span class="comment">// are set in the derived blueprint asset named MyCharacter (to avoid direct content references in C++)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：实例化ASC</span></span><br><span class="line">AbilitySystem = <span class="built_in">CreateDefaultSubobject</span>&lt;UAbilitySystemComponent&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;AbilitySystem&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在OwnerActor的构造方法中创建的AttributeSet将会自动注册到ASC</span></span><br><span class="line">AttributeSet = <span class="built_in">CreateDefaultSubobject</span>&lt;USampleAttributeSet&gt;(<span class="built_in">TEXT</span>(<span class="string">&quot;AttributeSet&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">// Input</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::SetupPlayerInputComponent</span><span class="params">(<span class="keyword">class</span> UInputComponent* PlayerInputComponent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Set up gameplay key bindings</span></span><br><span class="line"><span class="built_in">check</span>(PlayerInputComponent);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;Jump&quot;</span>, IE_Pressed, <span class="keyword">this</span>, &amp;ACharacter::Jump);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;Jump&quot;</span>, IE_Released, <span class="keyword">this</span>, &amp;ACharacter::StopJumping);</span><br><span class="line"></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;MoveForward&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::MoveForward);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;MoveRight&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::MoveRight);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We have 2 versions of the rotation bindings to handle different kinds of devices differently</span></span><br><span class="line"><span class="comment">// &quot;turn&quot; handles devices that provide an absolute delta, such as a mouse.</span></span><br><span class="line"><span class="comment">// &quot;turnrate&quot; is for devices that we choose to treat as a rate of change, such as an analog joystick</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;Turn&quot;</span>, <span class="keyword">this</span>, &amp;APawn::AddControllerYawInput);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;TurnRate&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TurnAtRate);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;LookUp&quot;</span>, <span class="keyword">this</span>, &amp;APawn::AddControllerPitchInput);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAxis</span>(<span class="string">&quot;LookUpRate&quot;</span>, <span class="keyword">this</span>, &amp;AGASSampleCharacter::LookUpAtRate);</span><br><span class="line"></span><br><span class="line"><span class="comment">// handle touch devices</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindTouch</span>(IE_Pressed, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TouchStarted);</span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindTouch</span>(IE_Released, <span class="keyword">this</span>, &amp;AGASSampleCharacter::TouchStopped);</span><br><span class="line"></span><br><span class="line"><span class="comment">// VR headset functionality</span></span><br><span class="line">PlayerInputComponent-&gt;<span class="built_in">BindAction</span>(<span class="string">&quot;ResetVR&quot;</span>, IE_Pressed, <span class="keyword">this</span>, &amp;AGASSampleCharacter::OnResetVR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::BeginPlay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Super::<span class="built_in">BeginPlay</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">nullptr</span> != AbilitySystem)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 修改：给ASC赋予技能</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">HasAuthority</span>() &amp;&amp; MyAbilities.<span class="built_in">Num</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; MyAbilities.<span class="built_in">Num</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (MyAbilities[i] == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">AbilitySystem-&gt;<span class="built_in">GiveAbility</span>(<span class="built_in">FGameplayAbilitySpec</span>(MyAbilities[i].<span class="built_in">GetDefaultObject</span>(), <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改：初始化ASC</span></span><br><span class="line">AbilitySystem-&gt;<span class="built_in">InitAbilityActorInfo</span>(<span class="keyword">this</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnResetVR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">UHeadMountedDisplayFunctionLibrary::<span class="built_in">ResetOrientationAndPosition</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TouchStarted</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">Jump</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TouchStopped</span><span class="params">(ETouchIndex::Type FingerIndex, FVector Location)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">StopJumping</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::TurnAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// calculate delta for this frame from the rate information</span></span><br><span class="line"><span class="built_in">AddControllerYawInput</span>(Rate * BaseTurnRate * <span class="built_in">GetWorld</span>()-&gt;<span class="built_in">GetDeltaSeconds</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::LookUpAtRate</span><span class="params">(<span class="type">float</span> Rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// calculate delta for this frame from the rate information</span></span><br><span class="line"><span class="built_in">AddControllerPitchInput</span>(Rate * BaseLookUpRate * <span class="built_in">GetWorld</span>()-&gt;<span class="built_in">GetDeltaSeconds</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::MoveForward</span><span class="params">(<span class="type">float</span> Value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ((Controller != <span class="literal">NULL</span>) &amp;&amp; (Value != <span class="number">0.0f</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// find out which way is forward</span></span><br><span class="line"><span class="type">const</span> FRotator Rotation = Controller-&gt;<span class="built_in">GetControlRotation</span>();</span><br><span class="line"><span class="function"><span class="type">const</span> FRotator <span class="title">YawRotation</span><span class="params">(<span class="number">0</span>, Rotation.Yaw, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get forward vector</span></span><br><span class="line"><span class="type">const</span> FVector Direction = <span class="built_in">FRotationMatrix</span>(YawRotation).<span class="built_in">GetUnitAxis</span>(EAxis::X);</span><br><span class="line"><span class="built_in">AddMovementInput</span>(Direction, Value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::MoveRight</span><span class="params">(<span class="type">float</span> Value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( (Controller != <span class="literal">NULL</span>) &amp;&amp; (Value != <span class="number">0.0f</span>) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// find out which way is right</span></span><br><span class="line"><span class="type">const</span> FRotator Rotation = Controller-&gt;<span class="built_in">GetControlRotation</span>();</span><br><span class="line"><span class="function"><span class="type">const</span> FRotator <span class="title">YawRotation</span><span class="params">(<span class="number">0</span>, Rotation.Yaw, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get right vector </span></span><br><span class="line"><span class="type">const</span> FVector Direction = <span class="built_in">FRotationMatrix</span>(YawRotation).<span class="built_in">GetUnitAxis</span>(EAxis::Y);</span><br><span class="line"><span class="comment">// add movement in that direction</span></span><br><span class="line"><span class="built_in">AddMovementInput</span>(Direction, Value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnHealthChanged</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">K2_OnHealthChanged</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AGASSampleCharacter::OnPhysicalChanged</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">K2_OnPhysicalChanged</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置完成后角色组件便会显示出 <code>AblilitySystem</code>。</p><ol start="4"><li><p>添加 GA 的逻辑</p></li><li><p>制作第一个 GA</p></li><li><p>制作 GE</p></li><li><p>受击</p></li><li><p>属性集</p></li><li><p>制作血条</p></li><li><p>实现扣蓝扣血逻辑</p></li></ol><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p><strong>先读代码，再做开发</strong></p><ul><li><p>什么时候需要扩展功能&#x2F;暴露接口？</p><ul><li>AtrributeSet 的属性回调 GetCameplayAttributeValueChangeDelegate</li><li>自定义 Task 节点（PlayMontageAndWaitForEvent）</li></ul></li><li><p>如何合理的规划 GA、GE 的蓝图种类和数量？</p><ul><li>如何处理繁多的 Cost 和 CoolDown GE (MakeOutgoingCameplayEffectSpec)</li><li>合理的使用继承逻辑（按类型抽象父类[主动技能、被动技能…]相关的默认 Tag）</li></ul></li></ul><h3 id="开发情景的改变"><a href="#开发情景的改变" class="headerlink" title="开发情景的改变"></a>开发情景的改变</h3><ol><li><p>对策划的要求更高</p><p> 需要战斗策划有基础的逻辑思维，通过蓝图实现技能设计的快速原型开发，把控GameplayTag的整体规划和配置。</p></li><li><p>适应新的技能配置方式</p><p> 不同于常见的直接配表方式，GAS 需要结合蓝图节点设计，Montage 编辑器，DataTable 配置来实现整体战斗开发。</p></li><li><p>复杂的伤害结算</p><p> 国内游戏开发通常会有复杂的属性成长和战斗结算方式，需要合理的编写 MMC(Modifier Magnitude Calculation) 来实现伤害结算等逻辑。</p></li></ol><h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><ol><li><p>GASDocument</p><p> <a href="https://github.com/tranek/GASDocumentation">https://github.com/tranek/GASDocumentation</a></p><p> <a href="https://blog.csdn.net/pirate310/article/details/106311256">https://blog.csdn.net/pirate310/article/details/106311256</a></p></li><li><p>官方说明文档和教学博客</p><p> <a href="https://docs.unrealengine.com/en-US/Gameplay/GameplayAbilitySystem/index.html">https://docs.unrealengine.com/en-US/Gameplay/GameplayAbilitySystem/index.html</a></p><p> <a href="https://www.cnblogs.com/JackSamuel/p/7155500.html">https://www.cnblogs.com/JackSamuel/p/7155500.html</a></p></li></ol><h2 id="深入GAS架构设计"><a href="#深入GAS架构设计" class="headerlink" title="深入GAS架构设计"></a>深入GAS架构设计</h2><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1zD4y1X77M/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1zD4y1X77M/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">深入GAS架构设计 | EpicGames 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>🚀 待填坑…</p>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> UE5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Modular Game Features（模块化游戏功能框架）</title>
      <link href="/post/b1d6807b.html"/>
      <url>/post/b1d6807b.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>If we want to go faster,we have to slow.</p></blockquote><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1j34y1B7Nf/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1j34y1B7Nf/.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">模块化游戏功能框架 | Epic Games 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="发展由来"><a href="#发展由来" class="headerlink" title="发展由来"></a>发展由来</h2><h3 id="GamePlay"><a href="#GamePlay" class="headerlink" title="GamePlay"></a>GamePlay</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156059331.png" alt="Alt text"></p><h3 id="GameAbilitySystem"><a href="#GameAbilitySystem" class="headerlink" title="GameAbilitySystem"></a>GameAbilitySystem</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156491466.png" alt="Alt text"></p><h3 id="SubSystem"><a href="#SubSystem" class="headerlink" title="SubSystem"></a>SubSystem</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156624698.png" alt="Alt text"></p><h3 id="Game-Features"><a href="#Game-Features" class="headerlink" title="Game Features"></a>Game Features</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689156743364.png" alt="Alt text"></p><p><strong>Why Game Features?</strong></p><ul><li>需要一种模块化的逻辑组织方式</li><li>新人更容易上手，因为无需了解其他项目的内在工作机制，就能开发这些独立功能</li><li>更少的漏洞，更易读代码。自包含的代码天然更易于进行单元测试，可以自然地避免在构建时意外或偶然地依赖其他代码</li><li>更轻松的在多个团队或项目中共享功能</li><li>更容易在大型或分布式开发环境中协作</li><li>更容易在“快迭代更新”游戏中迭代功能，也能快速安全地删除出现问题的功能</li></ul><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><h3 id="开启插件"><a href="#开启插件" class="headerlink" title="开启插件"></a>开启插件</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157158860.png" alt="Alt text"></p><h3 id="创建GF"><a href="#创建GF" class="headerlink" title="创建GF"></a>创建GF</h3><ul><li>必须放在：<code>Game/Plugins/GameFeatures/</code></li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157435014.png" alt="Alt text"></p><h3 id="显示GF"><a href="#显示GF" class="headerlink" title="显示GF"></a>显示GF</h3><ul><li>必须显示插件内容才可显示GameFeatures的内容</li><li>根目录下有一个插件同名的GameFeatureData，定义了该GameFeature的机制和Actions，不要改名！</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157468969.png" alt="Alt text"></p><h3 id="配置AssetManager"><a href="#配置AssetManager" class="headerlink" title="配置AssetManager"></a>配置AssetManager</h3><ul><li>配置P<code>rojectSettings/AssetManager</code>里的<code>PrimaryAssetTypes</code>以便可以加载GameFeatureData(若已自动加上则可以略过)</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157719929.png" alt="Alt text"></p><h3 id="配置Actions"><a href="#配置Actions" class="headerlink" title="配置Actions"></a>配置Actions</h3><ul><li>配置GameFeature的Actions</li><li>配置GF的初始状态</li><li>重启</li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689157876182.png" alt="Alt text"></p><h3 id="配置Actor"><a href="#配置Actor" class="headerlink" title="配置Actor"></a>配置Actor</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158319619.png" alt="Alt text"></p><h3 id="激活GF"><a href="#激活GF" class="headerlink" title="激活GF"></a>激活GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158363976.png" alt="Alt text"></p><h2 id="框架机制"><a href="#框架机制" class="headerlink" title="框架机制"></a>框架机制</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><ul><li>Core Game</li><li>Game Feature - <code>GF</code></li><li>UGameFeatureData - <code>GFD</code></li><li>UGameFeatureAciton - <code>GFA</code></li><li>UGameFeatureSubsystem - <code>GFS</code></li><li>UGameFrameworkComponentManager - <code>GFCM</code></li></ul><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158431456.png" alt="Alt text"></p><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158642833.png" alt="Alt text"></p><h3 id="Game-Features-启动流程-最初"><a href="#Game-Features-启动流程-最初" class="headerlink" title="Game Features 启动流程 - 最初"></a>Game Features 启动流程 - 最初</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158752012.png" alt="Alt text"></p><h3 id="创建加载策略"><a href="#创建加载策略" class="headerlink" title="创建加载策略"></a>创建加载策略</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158830025.png" alt="Alt text"></p><h3 id="创建加载策略-配置策略"><a href="#创建加载策略-配置策略" class="headerlink" title="创建加载策略-配置策略"></a>创建加载策略-配置策略</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689158941431.png" alt="Alt text"></p><h3 id="GFS设置"><a href="#GFS设置" class="headerlink" title="GFS设置"></a>GFS设置</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159020554.png" alt="Alt text"></p><h3 id="GF-Policies-设置如何加载GF"><a href="#GF-Policies-设置如何加载GF" class="headerlink" title="GF Policies-设置如何加载GF"></a>GF Policies-设置如何加载GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159106347.png" alt="Alt text"></p><h3 id="GFD-Asset-Manager-配置"><a href="#GFD-Asset-Manager-配置" class="headerlink" title="GFD Asset Manager 配置"></a>GFD Asset Manager 配置</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159184122.png" alt="Alt text"></p><h3 id="加载GF-uplugin"><a href="#加载GF-uplugin" class="headerlink" title="加载GF.uplugin"></a>加载GF.uplugin</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689159248581.png" alt="Alt text"></p><h3 id="GF状态-切换"><a href="#GF状态-切换" class="headerlink" title="GF状态 - 切换"></a>GF状态 - 切换</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165438216.png" alt="Alt text"></p><h3 id="GF状态机"><a href="#GF状态机" class="headerlink" title="GF状态机"></a>GF状态机</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165499787.png" alt="Alt text"></p><h3 id="GF状态机加载流程"><a href="#GF状态机加载流程" class="headerlink" title="GF状态机加载流程"></a>GF状态机加载流程</h3><ol><li><p>检查存在性<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165687299.png" alt="Alt text"></p></li><li><p>加载GF C++模块<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165738072.png" alt="Alt text"></p></li><li><p>加载GameFeatureData<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165789054.png" alt="Alt text"></p></li><li><p>预加载资产和配置<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165910937.png" alt="Alt text"></p></li><li><p>激活生效<br><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689165973093.png" alt="Alt text"></p></li></ol><h3 id="GF状态机总结"><a href="#GF状态机总结" class="headerlink" title="GF状态机总结"></a>GF状态机总结</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166040444.png" alt="Alt text"></p><h3 id="GF状态监听"><a href="#GF状态监听" class="headerlink" title="GF状态监听"></a>GF状态监听</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166110209.png" alt="Alt text"></p><h3 id="AddComponent"><a href="#AddComponent" class="headerlink" title="AddComponent"></a>AddComponent</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166186622.png" alt="Alt text"></p><h3 id="GFA-AddComponent-最常见最重要"><a href="#GFA-AddComponent-最常见最重要" class="headerlink" title="GFA_AddComponent 最常见最重要"></a>GFA_AddComponent 最常见最重要</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166240315.png" alt="Alt text"></p><h3 id="AddComponent-Component"><a href="#AddComponent-Component" class="headerlink" title="AddComponent - Component"></a>AddComponent - Component</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166308740.png" alt="Alt text"></p><h3 id="AddComponent-Actor-BP"><a href="#AddComponent-Actor-BP" class="headerlink" title="AddComponent - Actor BP"></a>AddComponent - Actor BP</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166396840.png" alt="Alt text"></p><h3 id="AddComponent-Actor-C"><a href="#AddComponent-Actor-C" class="headerlink" title="AddComponent - Actor C++"></a>AddComponent - Actor C++</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166474798.png" alt="Alt text"></p><h3 id="GFA-Action扩展"><a href="#GFA-Action扩展" class="headerlink" title="GFA_Action扩展"></a>GFA_Action扩展</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166522618.png" alt="Alt text"></p><h3 id="GF-依赖机制"><a href="#GF-依赖机制" class="headerlink" title="GF 依赖机制"></a>GF 依赖机制</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166602959.png" alt="Alt text"></p><h3 id="GF-模块协作"><a href="#GF-模块协作" class="headerlink" title="GF 模块协作"></a>GF 模块协作</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166665288.png" alt="Alt text"></p><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="《古代山谷》项目"><a href="#《古代山谷》项目" class="headerlink" title="《古代山谷》项目"></a>《古代山谷》项目</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166788854.png" alt="Alt text"></p><h3 id="CoreGame预留好逻辑注入点"><a href="#CoreGame预留好逻辑注入点" class="headerlink" title="CoreGame预留好逻辑注入点"></a>CoreGame预留好逻辑注入点</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166843383.png" alt="Alt text"></p><h3 id="可继承扩展的类"><a href="#可继承扩展的类" class="headerlink" title="可继承扩展的类"></a>可继承扩展的类</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166906124.png" alt="Alt text"></p><h3 id="如何转换现有逻辑到GF"><a href="#如何转换现有逻辑到GF" class="headerlink" title="如何转换现有逻辑到GF?"></a>如何转换现有逻辑到GF?</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689166952617.png" alt="Alt text"></p><h3 id="Rethink-in-GF"><a href="#Rethink-in-GF" class="headerlink" title="Rethink in GF"></a>Rethink in GF</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167635992.png" alt="Alt text"></p><h3 id="注意要点"><a href="#注意要点" class="headerlink" title="注意要点"></a>注意要点</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167736060.png" alt="Alt text"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/../img/Modular-Game-Features%EF%BC%88%E6%A8%A1%E5%9D%97%E5%8C%96%E6%B8%B8%E6%88%8F%E5%8A%9F%E8%83%BD%E6%A1%86%E6%9E%B6%EF%BC%89/1689167788987.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> UE5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataRegistry（数据注册表）</title>
      <link href="/post/33896216.html"/>
      <url>/post/33896216.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Data Registry（简称DR）是一种高效的全局存储空间，用于存储带有<code>USTRUCT</code>标记的数据结构。数据注册表支持同步和异步的数据访问，以及用户定义的缓存行为。数据注册表主要用于常见的只读数据。</p></blockquote><p>关于该新特性的官方介绍视频：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1qq4y1W7Ka">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1qq4y1W7Ka.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">DataRegistry：一种统领全局的新数据配置工具 | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="特性由来"><a href="#特性由来" class="headerlink" title="特性由来"></a>特性由来</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>数据驱动开发带来的好处以及当前主流的数据配置方式：</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688442719480.png","alt":"数据驱动"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688442884199.png","alt":"数据配置方式"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>各类数据配置方式优缺点介绍：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV1dk4y1r752">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV1dk4y1r752.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">UE4数据驱动开发 | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <p>鉴于每一种数据配置方式都有一套自己的数据读取方式，处理起来比较麻烦。</p><p>能不能有一种统领全局的数据配置方式，<code>可以存储、合并、读取和管理不同来源的数据</code>。</p><p>于是DataRegistry出现了。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>DR类似于<strong>复合数据表（Composite Data Tables）</strong>，但除了标准的表格数据行之外，还可以存储曲线数据。此外，它使用了一个间接层，而不是手动将多个表格合并在一起。</p><p>DR架构在DT之上，DR本身不直接配置数据，而是更好的组织数据，DT反而会变得更底层一些。DR相当于从多个表里生成临时数据，并且附带了许多优势和特点：</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688443913276.png","alt":"DR特性"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>Unreal数据管理的发展脉络可以简单理解为：<code>DataTable</code> -&gt; <code>CompositeDataTable</code> -&gt; <code>DataRegistry</code></p><p>由于其更好的扩展及缓存机制等优点，DR可能会是将来引擎里面统一的数据管理方式。目前在堡垒之夜中，已深度使用DR来管理数据。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="数据源（DataSource）"><a href="#数据源（DataSource）" class="headerlink" title="数据源（DataSource）"></a>数据源（DataSource）</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688453007962.png" alt="数据源"></p><p>数据注册表从两种数据源类型来采集数据：<strong>数据注册表源（Data Registry Sources）</strong>和<strong>元数据注册表源（Mata Data Registry Sources）</strong></p><ul><li><code>Data Registry Sources</code>：直接拥有你在数据注册表资产内的数组中所创建和配置的数据注册表源对象。</li><li><code>Mata Data Registry Sources</code>：只用来生成数据源的数据源，定义了一套规则，从某个路径里抓来新的数据源</li></ul><p>数据源在数据注册表中的顺序很重要，如果在某个数据源中未找到特定的数据项，数据注册表会在列表后面的数据源中查找该数据项。这样可能会产生覆盖和回退行为，并使得特定于上下文的数据源覆盖通用的数据源。</p><p>DR结构图：</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688453103439.png" alt="DR结构图"></p><ul><li>Subsystem对应多个DRA，即内存加载多个DAR都会保存在同一个Subsystem。所以说它是统一全局数据间接层。因为它有一个SubSystem可以得到所有的数据，而不像DataTable需要定义一个一个的表去做数据。</li><li>一个DRA对应多个数据源，数据源下当前有内置的DataTable、CurveTable以及对应的Meta类，Meta类通过定义规则，批量获得对应的数据源。</li></ul><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>数据注册表插件使用独有的标识符来查找数据注册表以及其中包含的单个数据项。这些标识符本质上都是基于字符串的名称，不过 <code>FDataRegistryType</code>（用于数据注册表资产）和 <code>FDataRegistryId</code>（用于数据注册表中的单个数据项）结构却属于包装器（wrapper），能提供实用的编辑器内部功能。 <code>FDataRegistryType</code> 用于辨识数据注册表资产， <code>FDataRegistryId</code> 用于辨识数据注册表和其中的特定数据项。如果你需要查找数据注册表资产或从中检索单个数据项，可以使用这些标识符类型。</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688468942222.png" alt="标识符"></p><p>每个数据注册表资产都必须在<strong>注册表类型（Registry Type）</strong>字段中具有唯一名称. 如果两个数据注册表资产在此字段中具有相同的名称，系统将仅识别和填充其中一个。类似的，如果多个数据项共用同一个标识数值（名称或Gameplay标签），注册表会读取所有项，但检索操作将仅访问数据注册表资产加载的第一个数据项.</p><h4 id="数据注册表资产标识符"><a href="#数据注册表资产标识符" class="headerlink" title="数据注册表资产标识符"></a>数据注册表资产标识符</h4><p>在设置数据注册表资产时，开发人员必须使用唯一命名来设置<code>Registry Type</code>。它是数据注册表的标识符。</p><h4 id="数据项标识符"><a href="#数据项标识符" class="headerlink" title="数据项标识符"></a>数据项标识符</h4><p>识别单个数据项时（例如数据表中的数据行），需要指定数据注册表资产和数据项本身。</p><p>如果数据注册表的ID格式使用Gameplay标签，用户界面将显示包含该Gameplay标签及其所有子项的筛选后列表。</p><p>如果数据注册表的ID格式未使用Gameplay标签，用户界面将显示一个下拉列表，其中包含数据注册表资产包含的所有已知数据行。</p><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688469623555.png" alt="IDFormat"></p><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="开启DR插件"><a href="#开启DR插件" class="headerlink" title="开启DR插件"></a>开启DR插件</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688444829702.png" alt="开启DR插件"></p><h3 id="项目设置DR扫描目录"><a href="#项目设置DR扫描目录" class="headerlink" title="项目设置DR扫描目录"></a>项目设置DR扫描目录</h3><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688444905873.png" alt="项目设置"></p><h3 id="创建一个DRA"><a href="#创建一个DRA" class="headerlink" title="创建一个DRA"></a>创建一个DRA</h3><ul><li>设置全局唯一的DRT名字</li><li>设置IdFormat，如果想要用GamePlayTag来作为Item Id，否则留空</li><li>设置ItemStruct类型</li><li>设置DataSource</li></ul><p>配置说明：<br><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688452889812.png" alt="DR配置说明"></p><h3 id="点击刷新按钮来预览"><a href="#点击刷新按钮来预览" class="headerlink" title="点击刷新按钮来预览"></a>点击刷新按钮来预览</h3><p>DRA配置完成</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><ul><li>蓝图中获取DR数据的几种方式：<ul><li>Find Data Registry Item</li><li>Get Data Registry Item</li><li>Acquire Data Registry Item</li><li>Evaluate Data Registry Curve</li></ul></li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type1.png","alt":"方式一"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type2.png","alt":"方式二"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type3.png","alt":"方式三"},{"url":"../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/type4.png","alt":"方式四"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="其他补充"><a href="#其他补充" class="headerlink" title="其他补充"></a>其他补充</h3><ul><li>向DR中动态添加数据源:</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688465449709.png" alt="Alt text"></p><ul><li>手动加载Data Registry</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688465938249.png" alt="Alt text"></p><ul><li>自定义数据Id的动态解析</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688466011754.png" alt="Alt text"></p><ul><li>Cache 机制</li></ul><p><img src="/../img/DataRegistry%EF%BC%88%E6%95%B0%E6%8D%AE%E6%B3%A8%E5%86%8C%E8%A1%A8%EF%BC%89/1688467727627.png" alt="Alt text"></p><hr><p>参考资料：</p><ul><li><a href="https://docs.unrealengine.com/5.2/zh-CN/data-registries-in-unreal-engine/">数据注册表_官方文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> UE5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关卡设计之创意玩法(神角技巧)</title>
      <link href="/post/e184f650.html"/>
      <url>/post/e184f650.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>此为还在神角技巧项目组是的一些设计灵感文档整理，大部分已经落地到游戏中，作为开放世界小玩法的关卡内容。</p></blockquote><h2 id="通用场景玩法设计"><a href="#通用场景玩法设计" class="headerlink" title="通用场景玩法设计"></a>通用场景玩法设计</h2><p>点击查看大图</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357523322.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357554944.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357569557.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357582949.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357599229.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357619104.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357685865.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357730595.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="指定场景玩法"><a href="#指定场景玩法" class="headerlink" title="指定场景玩法"></a>指定场景玩法</h2><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357868067.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357887137.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357910482.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357943891.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357962655.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%88%9B%E6%84%8F%E7%8E%A9%E6%B3%95-%E7%A5%9E%E8%A7%92%E6%8A%80%E5%B7%A7/1688357983481.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>以上玩法作为本人很早期的设计作品，还有许多优化空间，仅作为思路整理，仅供参考。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关卡设计 </tag>
            
            <tag> 创意玩法 </tag>
            
            <tag> 神角技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于关卡的体验设计(Dawn)</title>
      <link href="/post/80fc2ac6.html"/>
      <url>/post/80fc2ac6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>此项为作品展示项，也是我工作的内容项。主要是设计要点的提炼，背后有大量设计文档内容，如有需要，请联系我。</p></blockquote><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E7%8E%A9%E6%B3%95%E6%A0%B8%E5%BF%83.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E4%BD%93%E9%AA%8C%E7%BB%B4%E5%BA%A6.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E6%95%B0%E6%8D%AE%E5%88%A9%E7%94%A8.png" alt="Alt text"></p><p><img src="/../img/%E5%9F%BA%E4%BA%8E%E5%85%B3%E5%8D%A1%E7%9A%84%E4%BD%93%E9%AA%8C%E8%AE%BE%E8%AE%A1-Dawn/%E5%A1%91%E9%80%A0%E4%BD%93%E9%AA%8C.png" alt="Alt text"></p><p>由以上几个设计要点输出的设计内容有：</p><ol><li><code>任务设计</code></li><li><code>战备设计</code></li><li><code>操作设计</code></li><li><code>游戏模式设计</code></li><li><code>美术表现设计</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关卡设计 </tag>
            
            <tag> 游戏设计 </tag>
            
            <tag> Dawn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Roll,Pitch,and Yaw</title>
      <link href="/post/547f226e.html"/>
      <url>/post/547f226e.html</url>
      
        <content type="html"><![CDATA[<p>“Roll”、”Pitch” 和 “Yaw” 是航空航天和机器人领域中用于描述物体或飞行器在三个不同轴上的旋转运动。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Roll-Pitch-and-Yaw/1688033142329.png","alt":"Alt text"},{"url":"../img/Roll-Pitch-and-Yaw/1688032592262.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li><p><code>&quot;Roll&quot;（翻滚）</code>是绕物体的纵轴（前后轴）旋转，使其绕横向轴产生旋转运动。类比于飞行器，翻滚是指飞机绕其纵轴（从头到尾的轴线）进行的旋转运动，即向左或向右倾斜。<br><img src="/../img/Roll-Pitch-and-Yaw/roll.gif" alt="Roll"></p></li><li><p><code>&quot;Pitch&quot;（俯仰）</code>是绕物体的横轴（侧向轴）旋转，使其绕纵向轴产生旋转运动。在飞行器的背后，俯仰是指飞机绕其横轴（从一侧到另一侧的轴线）进行的旋转运动，即向上或向下倾斜。<br><img src="/../img/Roll-Pitch-and-Yaw/pitch.gif" alt="Pitch"></p></li><li><p><code>&quot;Yaw&quot;（偏航）</code>是绕物体的垂直轴（竖直轴）旋转，使其绕垂直轴产生旋转运动。对于飞行器，偏航是指飞机绕其垂直轴（通过飞机重心向上的轴线）进行的旋转运动，即左右转向。<br><img src="/../img/Roll-Pitch-and-Yaw/yaw2.gif" alt="Yaw"></p></li></ul><p>这三个名词在Unreal蓝图三维向量节点中经常会出现：<br><img src="/../img/Roll-Pitch-and-Yaw/1688033955639.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 名词注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Enhanced Input（增强输入系统）</title>
      <link href="/post/b32ee82a.html"/>
      <url>/post/b32ee82a.html</url>
      
        <content type="html"><![CDATA[<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bilibili.com/video/BV14r4y1r7nz">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://api.iowen.cn/favicon/www.bilibili.com/video/BV14r4y1r7nz.png);"></div>        <div class="tag-link-right">            <div class="tag-link-title">新一代增强输入框架EnhancedInput | Epic 大钊</div>            <div class="tag-link-sitename">bilibili</div>        </div>        <i class="fa-solid fa-angle-right"></i>    </div>    </a></div>  <h2 id="问题由来"><a href="#问题由来" class="headerlink" title="问题由来"></a>问题由来</h2><h3 id="旧系统问题"><a href="#旧系统问题" class="headerlink" title="旧系统问题"></a>旧系统问题</h3><ul><li>旧系统实现基础的功能比较简单，但在想构建更复杂机制上就得需要在User层做更多的工作。例如角色在不同情景下的输入变化。（近战&#x2F;远程&#x2F;载具的操作模式切换）</li><li>过于简陋，需自己实现众多行为。例如按住&#x2F;攻击。</li></ul><h3 id="新系统目标"><a href="#新系统目标" class="headerlink" title="新系统目标"></a>新系统目标</h3><ul><li>重新梳理简化。Axis&#x2F;Aciton –&gt; Action</li><li>运行时重映射输入场景。UInputMappingContext</li><li>对初级用户易配置。大量默认行为实现，Tap&#x2F;Hold…</li><li>对高级用户易拓展，可继承子类拓展<ul><li>修改器：修改输入值</li><li>触发器：决定触发条件</li><li>优先级：配置输入场景优先级</li></ul></li><li>模块化，不再只依赖ini配置，以资源asset方式配置，堆栈式分隔逻辑。</li><li>提高性能，不需要检查所有输入，只需关心当前的场景和绑定。</li><li>UE5正式替换掉旧有输入系统</li></ul><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><ol><li>开启插件并重启编辑器</li></ol><p><img src="/../img/Enhanced%20Input/1688706220659.png" alt="开启插件"></p><ol start="2"><li>替换默认类型</li></ol><p><img src="/../img/Enhanced%20Input/1688031059407.png" alt="修改默认类"></p><ol start="3"><li>创建 <code>InputAction</code></li></ol><p><img src="/../img/Enhanced%20Input/1688706347006.png" alt="创建InputAction"></p><ol start="4"><li>创建 <code>InputMappingContext</code></li></ol><p><img src="/../img/Enhanced%20Input/1688706433891.png" alt="创建InputMappingContext"></p><ol start="5"><li>绑定Action委托</li></ol><p><img src="/../img/Enhanced%20Input/1688706754986.png" alt="绑定Action"></p><ol start="6"><li>应用 InputMappingContext</li></ol><p><img src="/../img/Enhanced%20Input/1688706878545.png" alt="应用 InputMappingContext"></p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="InputStack"><a href="#InputStack" class="headerlink" title="InputStack"></a>InputStack</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688708513286.png","alt":"InputStack"},{"url":"../img/Enhanced%20Input/1688721979414.png","alt":"InputStack"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="PlayerInput"><a href="#PlayerInput" class="headerlink" title="PlayerInput"></a>PlayerInput</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688722117498.png","alt":"PlayerInput"},{"url":"../img/Enhanced%20Input/1688722221393.png","alt":"InputComponent"},{"url":"../img/Enhanced%20Input/1688722267331.png","alt":"Input处理流程"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="EnhancedInput"><a href="#EnhancedInput" class="headerlink" title="EnhancedInput"></a>EnhancedInput</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688722826976.png","alt":"Enhanced Framework"},{"url":"../img/Enhanced%20Input/1688723124469.png","alt":"EnhancedPlayerInput"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h4 id="UInputComponent，输入组件（IC）"><a href="#UInputComponent，输入组件（IC）" class="headerlink" title="UInputComponent，输入组件（IC）"></a>UInputComponent，输入组件（IC）</h4><p><img src="/../img/Enhanced%20Input/1688723221759.png" alt="EnhancedInputComponent"></p><h4 id="UInputAction，输入动作（IA）"><a href="#UInputAction，输入动作（IA）" class="headerlink" title="UInputAction，输入动作（IA）"></a>UInputAction，输入动作（IA）</h4><p>输入操作在概念上等同于“操作”和“轴”映射名称，只是它们是数据资产。每个输入操作都应表示用户可以执行地操作，你可以在蓝图或C++中添加监听器，以便此输入操作的状态发生变化。</p><p>输入操作可以是几种不同的“类型”，这些“类型”将决定其行为。您可以制作简单的“布尔”操作或更复杂的 3D 轴。操作的类型决定了您可以从中获得什么价值。布尔操作将具有一个简单的布尔值，Axis1D 将是浮点值，Axis2D 将是 FVector2D，而 Axis3D 是整个 FVector。</p><p>当您有只有“开”或“关”状态的东西时，您应该使用“bool”操作。这相当于旧输入系统中的旧“操作”映射。对于游戏手柄操纵杆值等内容，可以使用 2D 轴操作来保持操纵杆位置的 X 和 Y 值。可以使用 3D 轴保存更复杂的数据，例如运动控制器信息。</p><p><img src="/../img/Enhanced%20Input/1688723647162.png" alt="InputAction"></p><ul><li>IA中的<code>Triggers</code>和<code>Modifiers</code>和IMC中的会同时生效，IA中的效果会针对这个action全局生效，无论绑定什么按键。</li></ul><h4 id="UInputModifier，输入修改器（IM）"><a href="#UInputModifier，输入修改器（IM）" class="headerlink" title="UInputModifier，输入修改器（IM）"></a>UInputModifier，输入修改器（IM）</h4><p>用于修改来自用户设备的原始输入值。在输入映射上下文中，每个输入动作的原始输入都可以关联任意数量的修饰器。常见修饰器包括死区、多帧输入平滑处理、将输入向量从本地空间转换到世界空间，以及插件中的一些其他修饰器。开发人员还可以创建自己的修饰器。</p><p><img src="/../img/Enhanced%20Input/1688723351747.png" alt="InputModifier"></p><h4 id="UInputTrigger，输入触发器（IT）"><a href="#UInputTrigger，输入触发器（IT）" class="headerlink" title="UInputTrigger，输入触发器（IT）"></a>UInputTrigger，输入触发器（IT）</h4><p>输入触发器确定用户输入在通过可选的输入修饰符列表后，是否应在其输入映射上下文中激活相应的输入操作。大多数输入触发器会分析输入本身，检查最小驱动值并验证短按、长时间保持或典型的“按下(<code>press</code>)”或“释放(<code>release</code>)”事件等模式。此规则的例外情况是依赖于另一个操作的任何触发器，例如“按弦操作(<code>Chorded Action</code>)”或“组合(<code>Combo</code>)”触发器。默认情况下，输入上的任何用户活动都将在每帧触发。</p><ul><li><code>Chorded Action</code>：通常用于描述一种通过按下多个键或按键的组合来执行特定操作或命令的输入方式</li></ul><p><img src="/../img/Enhanced%20Input/1688723487747.png" alt="InputTrigger"></p><p>触发器状态表示操作所处的当前状态，例如已触发（Triggered）、开始（Started）、持续（Ongoing）、完成（Completed）和取消（Canceled）。</p><ul><li><code>Triggered</code><ul><li>动作已触发，这意味着它已经完成对所有触发要求的评估。</li></ul></li><li><code>Started</code><ul><li>发生了已开始触发评估的事件。例如，第一次按下“双击”触发器将调用“已启动”状态一次。</li></ul></li><li><code>Ongoing</code><ul><li>触发器仍在处理中。例如，当用户在达到指定的持续时间之前按住按钮时，“按住”操作正在进行中。根据触发器，此事件将在收到输入值后触发正在评估操作的每个时钟周期。</li></ul></li><li><code>Completed</code><ul><li>触发器评估过程已完成。</li></ul></li><li><code>Canceled</code><ul><li>触发已取消。例如，用户在触发“长按”操作之前松开按钮。</li></ul></li></ul><h4 id="UInputMappingContext，输入映射上下文环境（IMC）"><a href="#UInputMappingContext，输入映射上下文环境（IMC）" class="headerlink" title="UInputMappingContext，输入映射上下文环境（IMC）"></a>UInputMappingContext，输入映射上下文环境（IMC）</h4><p>输入映射上下文是表示玩家所在的特定上下文的输入操作的集合。它描述了触发给定输入操作所需的规则。</p><p>在这里，你可以执行实际的“输入键到输入操作”绑定，并为每个操作指定其他触发器或修饰符。将IMC添加到增强输入子系统时，还可以为其指定优先级。</p><p><img src="/../img/Enhanced%20Input/1688724067454.png" alt="InputMappingContext"></p><h4 id="Player-Mappable-Input-Config-PMI"><a href="#Player-Mappable-Input-Config-PMI" class="headerlink" title="Player Mappable Input Config(PMI)"></a>Player Mappable Input Config(PMI)</h4><p>可映射配置是输入映射上下文的集合，表示映射的一个“配置”或“预设”。例如，您可以有一个“默认”和一个“左撇子”可映射配置，它们包含不同的输入映射上下文以进行瞄准。您还可以使用这些配置预定义一组上下文及其优先级，以便一次性添加它们，而不必手动添加输入映射上下文数组。</p><h4 id="EnhancedInput处理流程"><a href="#EnhancedInput处理流程" class="headerlink" title="EnhancedInput处理流程"></a>EnhancedInput处理流程</h4><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688724170723.png","alt":"EnhancedInput处理流程"},{"url":"../img/Enhanced%20Input/1688724401645.png","alt":"比较"},{"url":"../img/Enhanced%20Input/1688724486786.png","alt":"AddMappingContext流程"},{"url":"../img/Enhanced%20Input/1688724618741.png","alt":"EnhancedInputSubsystem"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><h3 id="IMC-BindAction"><a href="#IMC-BindAction" class="headerlink" title="IMC BindAction"></a>IMC BindAction</h3><ul><li>初始情况应该在哪里开始应用IMC</li><li>后续运行时在蓝图中应该如何切换IMC</li><li>何时Remove IMC？</li><li>在哪里绑定Action和Axis</li><li>在蓝图中如何BindAction</li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688724917645.png","alt":"PlayerController"},{"url":"../img/Enhanced%20Input/1688725135376.png","alt":"Pawn"},{"url":"../img/Enhanced%20Input/1688725252675.png","alt":"PawnRemove"},{"url":"../img/Enhanced%20Input/1688725317235.png","alt":"IMC BingAction最佳实践"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><p><img src="/../img/Enhanced%20Input/1688725540514.png" alt="Debug"></p><h3 id="联动"><a href="#联动" class="headerlink" title="联动"></a>联动</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688725917343.png","alt":"联动GameFeatures01"},{"url":"../img/Enhanced%20Input/1688725743972.png","alt":"联动GameFeatures02"},{"url":"../img/Enhanced%20Input/1688725783610.png","alt":"联动GAS"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p><img src="/../img/Enhanced%20Input/1688725975620.png" alt="扩展"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/../img/Enhanced%20Input/1688726015986.png" alt="总结"></p><h2 id="于蓝图中的简单应用实例"><a href="#于蓝图中的简单应用实例" class="headerlink" title="于蓝图中的简单应用实例"></a>于蓝图中的简单应用实例</h2><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/Enhanced%20Input/1688029452250.png","alt":"Alt text"},{"url":"../img/Enhanced%20Input/1688029098466.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>如果操作未生效，可以去<code>Project Setting -&gt; Input -&gt; Default Classes</code>中看看是否开启：</p><p><img src="/../img/Enhanced%20Input/1688031059407.png" alt="Alt text"></p><hr><p>资料来源：</p><ul><li><a href="https://dev.epicgames.com/community/learning/tutorials/eD13/unreal-engine-enhanced-input-in-ue5">Enhanced Input in UE5</a></li><li><a href="https://docs.unrealengine.com/5.2/zh-CN/enhanced-input-in-unreal-engine/">Enhanced Input</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> UE5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>战斗设计之经验谈01</title>
      <link href="/post/17b23a90.html"/>
      <url>/post/17b23a90.html</url>
      
        <content type="html"><![CDATA[<p>原本早早应该梳理的总结，却因为自己对设计方向的迷茫，而不知从何下笔。这几年在我个人的思考、他人设计的赏析、与朋友的讨论中，始终未能寻得一个答案。</p><p>这几年我总抱着“要做就做好，要不然就不做的”心态行事，完成了一些令人满意的工作，但也因此阻碍了前进的脚步。比如战斗设计方向上的探索，虽然想了许多，但因还不够好而却迟迟没有行动。因此想以本篇闲谈之文，开启探索方向上的行进旅程。</p><h2 id="个人偏好"><a href="#个人偏好" class="headerlink" title="个人偏好"></a>个人偏好</h2><p>没有最好的设计，只有最适合的设计。</p><p>战斗设计有许多种，不同类型游戏其所占比重及设计方向各有所不同。而我个人则更偏好实时操作、及时反馈的动作类战斗设计。</p><p>此类的代表作有：</p><ul><li>主机平台：鬼泣、猎天使魔女、忍龙、怪物猎人</li><li>手游平台：崩坏3、战双</li><li>网游平台：剑灵、DNF</li></ul><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687853945576.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687854668715.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687855866809.png","alt":"Alt text"},{"url":"../img/%E6%88%98%E6%96%97%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687856121375.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>当然并不是说我完全喜欢以上游戏的战斗玩法设计。跟手的操作，以及战斗画面的精准反馈（打击感），这种战斗体验才是让我所喜欢的——所操作角色的感觉延伸至现实个体，从而带来强烈的沉浸感。</p><h2 id="战斗玩法设计的思考"><a href="#战斗玩法设计的思考" class="headerlink" title="战斗玩法设计的思考"></a>战斗玩法设计的思考</h2><p>“战斗玩法设计”是指在电子游戏或其他相关娱乐产品中，针对战斗或战斗系统的设计过程和方法。它包括游戏中的战斗机制、战斗规则、技能系统、武器装备、角色能力等方面的设计。</p><p>战斗玩法设计的目的是为了提供给玩家有趣、挑战性和令人满足的战斗体验。这需要考虑到玩家的参与感、游戏平衡性、战斗策略、动作操作、反应速度以及角色成长等方面的因素。</p><p>在战斗玩法设计中，开发者通常会设计不同的战斗模式或游戏关卡，提供多样化的敌对NPC或其他玩家对战的机会。他们会考虑角色的技能树和能力升级系统，以便玩家可以在游戏的进程中逐渐解锁更多强大的技能和装备，从而提升战斗的效果和乐趣。</p><p>战斗玩法设计还需要平衡不同的角色和武器之间的能力，以确保游戏中的战斗是公平且有挑战性的。开发者还可能会加入一些战斗机制，如特殊技能、连击系统、躲避机制等，以增加游戏的深度和战斗的策略性。</p><p>总而言之，战斗玩法设计是游戏开发中关键的一部分，它旨在为玩家提供丰富、刺激和令人满足的战斗体验，以增加游戏的乐趣和可玩性。</p><p>不过由于游戏品类众多，各战斗玩法层出不穷，无法以一个设计涵盖整个品类，这里仅以我个人的偏好说说我个人觉得好玩的战斗设计。</p><h3 id="战斗手感"><a href="#战斗手感" class="headerlink" title="战斗手感"></a>战斗手感</h3><p>无限逼近直觉设计：</p><ul><li>极低的操作延迟</li><li>丰富的操作行为</li><li>连贯的行为过渡</li><li>符合预期的视效与音效</li></ul><h3 id="战斗节奏及策略"><a href="#战斗节奏及策略" class="headerlink" title="战斗节奏及策略"></a>战斗节奏及策略</h3><p>我喜欢有节奏感的战斗设计，它有着以下几个特点：</p><ul><li>小技能与大技能的规律释放</li><li>技能招式的各种连段</li><li>战斗资源的不断循环</li><li>存在战斗谜题与解</li><li>战斗与关卡实时交互反馈</li></ul><h3 id="战斗故事"><a href="#战斗故事" class="headerlink" title="战斗故事"></a>战斗故事</h3><p>一场战斗的发生不是莫名其妙的，它可以是：</p><ul><li>推动剧情</li><li>获得奖励</li><li>个人挑战</li><li>满足好奇</li><li>符合生态</li></ul><h3 id="战斗数值"><a href="#战斗数值" class="headerlink" title="战斗数值"></a>战斗数值</h3><p>轻数值重操作：</p><ul><li>高水准的操作换来高数值的收益</li><li>操作可以是考验反应速度、对技能的理解与掌握、对战场的观察…….</li></ul><h3 id="战斗美感"><a href="#战斗美感" class="headerlink" title="战斗美感"></a>战斗美感</h3><p>战斗不光是要好玩，它还要足够漂亮，因此需要有：</p><ul><li>极具美感的镜头</li><li>生动的角色</li><li>漂亮的招式</li><li>符合情绪的场景</li><li>动人的音乐</li></ul><p>以上每一点的设计都足够拿出来写个长篇细说了，后面有时间再来填这个坑。</p><h2 id="战斗设计在项目研发中的一些问题"><a href="#战斗设计在项目研发中的一些问题" class="headerlink" title="战斗设计在项目研发中的一些问题"></a>战斗设计在项目研发中的一些问题</h2><p>近年来，由于个人职位的提升，逐渐能触及到战斗核心玩法设计，但也因此遇到以下矛盾问题：</p><ul><li>怎样的战斗才是好玩的战斗？</li></ul><p>受限于个人游戏经历和生活经验，每个人都对此有不同的看法。制作人有制作人的看法，主策有主策的看法，玩家有玩家的看法（玩家之间还分群体），而我也有我的看法。这就造成了一个问题，我该以什么样的视角或者是以谁的标准去制定3C的设计？如果以上所列举都是一类人群，只需遵照一个标准，那事情理所当然的顺利推进。但现实往往是令人啼笑皆非的，研发组内部能统一意见都算是庆幸的了，到玩家这一层面，又是一次巨大的挑战。</p><p>何解？</p><p>个人的看法是，集权或放权。是依照某一个人的想法（工作层面）或是遵从某一类玩家群体的意志（设计层面）、还是各有占比？只有把这个问题聊清楚聊干净了，那么才能说战斗设计的方向有了，战斗的核心战斗的灵魂才有了。 </p><ul><li>角色3C的体验设计如何界定？</li></ul><p>这个完全取决于个人审美水准。例如在增强打击感这块，镜头抖动和材质特效是公认的能强化打击感的手段，但有的设计者对这些效果的胡乱使用，导致玩家晕镜头或使画面显得廉价（点名《神陨》这款游戏）。</p><p>这个问题倒好解决，交给大众投票，或用过往作品证明自己的审美。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所谓战斗设计，更多的是一种艺术表达，而表达的方式远不止一种，适合项目的才是最好的。而从哪些方面去设计与表达，这个就见仁见智了。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
            <tag> 经验总结 </tag>
            
            <tag> 战斗设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记之Unreal蓝图</title>
      <link href="/post/b5e676b7.html"/>
      <url>/post/b5e676b7.html</url>
      
        <content type="html"><![CDATA[<h2 id="Blueprint-Communication"><a href="#Blueprint-Communication" class="headerlink" title="Blueprint Communication"></a><a href="https://dev.epicgames.com/community/learning/courses/LWv/unreal-engine-blueprint-communication/">Blueprint Communication</a></h2><h3 id="Public-Variables"><a href="#Public-Variables" class="headerlink" title="Public Variables"></a>Public Variables</h3><p>在和对象交流时，我们需要通过引用或变量来交流。作为两个对象中间的沟通桥梁或连接器。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687698745699.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><ul><li>对象引用（Object Reference）是关卡中拥有的东西，是关卡中存在的东西</li><li>类（Class Reference）是类本身，或者说它的构成元素，也就是定义这个项目的代码，我们可以在内容浏览器中看到它</li></ul><h3 id="Casting"><a href="#Casting" class="headerlink" title="Casting"></a>Casting</h3><p>转换类型是指把对象当作具体对象来操作，相当于为对象做进一步的说明，获取特定版本的对象，充分利用父子关系概念。</p><p>静态网格体Actor是Actor的子项，角色是Pawn的子项，同时也是Actor的子项。在使用蓝图的时候，我们可能需要获取层级更高的对象。通过类型转换，我们就可以把这个对象当作更具体的对象来操作。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687698102879.png","alt":"Alt text"},{"url":"../img/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BUnreal%E8%93%9D%E5%9B%BE/1687697965897.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>通过类型转换，我们就可以将一个Actor作为BP（蓝图）来对待，然后和它交流；BP上有的变量，它上面的项目（Actor）没有这个变量，这个变量只有它和它的子项有。</p><p><code>任何时候，如果返回的不是你想要的对象类型，需要特别制定，你就可以使用类型转换。</code>还能用它快速检测某样东西是不是某样东西，你可以类型转换，如果不是，它就会失败。</p><h3 id="Blueprint-Interfaces"><a href="#Blueprint-Interfaces" class="headerlink" title="Blueprint Interfaces"></a>Blueprint Interfaces</h3><p>蓝图接口是允许两个对象相互通信的一种好方法，包括不同类型的对象。</p><p>例如，我可能想和一个对象沟通，告诉它我想和它互动，我只想让能和我互动的对象去做某些事情，除它以外的所有对象都忽略这个请求。</p><h3 id="Event-Dispatchers"><a href="#Event-Dispatchers" class="headerlink" title="Event Dispatchers"></a>Event Dispatchers</h3><p>有时候可能会发生一件事，然后很多东西都想知道这件事。例如，关卡结束了或者玩家死亡，我们可以在项目中创建专门的代码来处理这项工作，我们想看到的所有事件都可以放在一个地方，但这需要创建硬连接，我们可能不想要这样，不想要把应该在某个地方的代码放到其他地方，在一个地方处理所有事情，事实上我们不需要这么做，我们可以使用事件分发器。</p><p>它可以在事件发生时，让其他东西在更合适的地方处理这件事，你可以把它看作一张可以订阅的列表，有一个事件告诉我们玩家死了。所有订阅这个事件或列表的项目，都会在事件发生时收到通知，然后这些项目就可以根据这个事件做出不同的行为。</p><p>事件分发器非常有用，尤其是想让物品管理好自己的时候，而不是在一个地方处理所有事情</p><h2 id="Demonstrating-Animation-Blueprints-and-AI-for-Gameplay-Designers"><a href="#Demonstrating-Animation-Blueprints-and-AI-for-Gameplay-Designers" class="headerlink" title="Demonstrating Animation Blueprints and AI for Gameplay Designers"></a><a href="https://dev.epicgames.com/community/learning/courses/pl2/unreal-engine-demonstrating-animation-blueprints-and-ai-for-gameplay-designers/GxBZ/unreal-engine-demonstrating-animation-blueprints-and-ai-for-gameplay-designers-introduction">Demonstrating Animation Blueprints and AI for Gameplay Designers</a></h2><h3 id="layered-blend-per-bone"><a href="#layered-blend-per-bone" class="headerlink" title="layered blend per bone"></a>layered blend per bone</h3><p>可以以骨骼名称作为分层边界</p><h3 id="Save-Cached-Pose"><a href="#Save-Cached-Pose" class="headerlink" title="Save Cached Pose"></a>Save Cached Pose</h3><p>将动画蓝图中的输出的姿势进行缓存，用于后续调用；有点像蓝图提升为变量一样，可以在其他地方使用此变量值。</p><h3 id="Anim-Slot"><a href="#Anim-Slot" class="headerlink" title="Anim Slot"></a>Anim Slot</h3><p>给蒙太奇动画指定插槽，然后在动画蓝图中引用插槽进行动画输出。即蒙太奇动画只能通过插槽的方式参与角色动画蓝图</p><h3 id="PawnSendsing"><a href="#PawnSendsing" class="headerlink" title="PawnSendsing"></a>PawnSendsing</h3><p>AI感应组件中的一种，用于搜寻敌人</p><h2 id="初识UMG"><a href="#初识UMG" class="headerlink" title="初识UMG"></a><a href="https://dev.epicgames.com/community/learning/courses/q3r/unreal-engine-umg/vJDR/unreal-engine-3d74bf">初识UMG</a></h2><h3 id="Append"><a href="#Append" class="headerlink" title="Append"></a>Append</h3><p>能将多个字符串合并成一个字符串输出</p><h3 id="Add-to-Viewport-x2F-Add-to-Player-Screen"><a href="#Add-to-Viewport-x2F-Add-to-Player-Screen" class="headerlink" title="Add to Viewport&#x2F;Add to Player Screen"></a>Add to Viewport&#x2F;Add to Player Screen</h3><p><strong>创建控件原则：为谁所用，就在谁的蓝图上创建</strong></p><p>90%的情况下，创建控件显示用“Add to Viewport”,”Add to Player Screen”主要用于分屏显示，如果你的游戏和分屏显示或同屏多人显示无关，你就应该选择“Add to Viewport”。</p><h3 id="控件数据更新方式"><a href="#控件数据更新方式" class="headerlink" title="控件数据更新方式"></a>控件数据更新方式</h3><ol><li>控件的属性绑定（Binding）</li></ol><p>绑定的函数每帧都在运行，非实时更新的数据不建议，会消耗大量性能。只有计时器、倒计时、时钟，这类需要每帧精准显示的功能，才需要使用绑定功能</p><ol start="2"><li>新建更新功能函数，蓝图事件调用函数执行</li></ol><h3 id="Input-Mode（输入模式）"><a href="#Input-Mode（输入模式）" class="headerlink" title="Input Mode（输入模式）"></a>Input Mode（输入模式）</h3><ul><li><p>Set Input Mode UI Only（仅UI）</p></li><li><p>Set Input Mode Game Only （仅游戏）</p></li><li><p>Set Input Mode Game and UI （游戏和UI）</p></li></ul><p>输入模式节点（Set Input Mode）属于控制器（Get Player Controller）的功能函数</p><p>默认的输入模式是“Set Input Mode Game Only”，所有来自鼠标、手柄、周边设备以及键盘的输入仅针对游戏启用。在这种模式中，通常是你的手柄或其他设备接受输入信号。也就是说，是你的游戏视口接受输入，而不是你的UI。</p><p><strong>不要在打开关卡之后设置输入模式，因为在打开关卡后，不一定能保证执行后续逻辑。</strong></p><h3 id="Remove-from-Parent"><a href="#Remove-from-Parent" class="headerlink" title="Remove from Parent"></a>Remove from Parent</h3><p>将控件从父类中移除，用于隐藏界面中某一控件。或者切换界面。</p>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 蓝图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unreal实用小技巧</title>
      <link href="/post/2ea21597.html"/>
      <url>/post/2ea21597.html</url>
      
        <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="游戏运行"><a href="#游戏运行" class="headerlink" title="游戏运行"></a>游戏运行</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Alt+P</td><td align="center">运行</td></tr><tr><td align="center">Esc</td><td align="center">退出</td></tr><tr><td align="center">Shift+F1</td><td align="center">呼出鼠标</td></tr><tr><td align="center">F8</td><td align="center">弹出</td></tr></tbody></table><h3 id="关卡编辑器"><a href="#关卡编辑器" class="headerlink" title="关卡编辑器"></a>关卡编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Shift+1</td><td align="center">模式-选择</td></tr><tr><td align="center">Shift+2</td><td align="center">模式-地形</td></tr><tr><td align="center">Shift+3</td><td align="center">模式-植物</td></tr><tr><td align="center">Shift+4</td><td align="center">模式-绘制</td></tr><tr><td align="center">Shift+5</td><td align="center">模式-模型编辑</td></tr><tr><td align="center">Shift+6</td><td align="center">模式-破碎</td></tr><tr><td align="center">Shift+7</td><td align="center">模式-笔刷编辑</td></tr></tbody></table><h3 id="视图窗口"><a href="#视图窗口" class="headerlink" title="视图窗口"></a>视图窗口</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">F11</td><td align="center">视口全屏</td></tr><tr><td align="center">Shift+F11</td><td align="center">编辑器全屏</td></tr><tr><td align="center">G</td><td align="center">游戏视图</td></tr><tr><td align="center">F</td><td align="center">聚焦选中的物体</td></tr><tr><td align="center">F9</td><td align="center">视口屏幕截图</td></tr><tr><td align="center">Alt+G</td><td align="center">视图-透视（默认）</td></tr><tr><td align="center">Alt+H</td><td align="center">视图-前</td></tr><tr><td align="center">Alt+Shift+H</td><td align="center">视图-后</td></tr><tr><td align="center">Alt+J</td><td align="center">视图-顶</td></tr><tr><td align="center">Alt+Shift+J</td><td align="center">视图-底</td></tr><tr><td align="center">Alt+K</td><td align="center">视图-左</td></tr><tr><td align="center">Alt+Shift+K</td><td align="center">视图-右</td></tr><tr><td align="center">Alt+C</td><td align="center">显示碰撞体</td></tr><tr><td align="center">Alt+F</td><td align="center">显示雾</td></tr><tr><td align="center">Ctrl+Shift+H</td><td align="center">显示FPS</td></tr><tr><td align="center">Ctrl+Shift+T</td><td align="center">显示工具栏</td></tr><tr><td align="center">Alt+0</td><td align="center">光照贴图密度</td></tr><tr><td align="center">Alt+2</td><td align="center">线框</td></tr><tr><td align="center">Alt+3</td><td align="center">无光照</td></tr><tr><td align="center">Alt+4</td><td align="center">光照</td></tr><tr><td align="center">Alt+5</td><td align="center">细节光照</td></tr><tr><td align="center">Alt+6</td><td align="center">仅光照</td></tr><tr><td align="center">Alt+7</td><td align="center">光照复杂度</td></tr><tr><td align="center">Alt+8</td><td align="center">着色器复杂度</td></tr></tbody></table><h3 id="内容浏览器"><a href="#内容浏览器" class="headerlink" title="内容浏览器"></a>内容浏览器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">Ctrl+Shift+F</td><td align="center">打开内容浏览器</td></tr><tr><td align="center">Ctrl+Space</td><td align="center">打开内容浏览器抽屉</td></tr><tr><td align="center">Ctrl+B</td><td align="center">内容浏览器定位</td></tr><tr><td align="center">Ctrl+shift+N</td><td align="center">新建文件夹</td></tr><tr><td align="center">Space</td><td align="center">预览资源</td></tr><tr><td align="center">Ctrl+N</td><td align="center">新建关卡</td></tr><tr><td align="center">Ctrl+O</td><td align="center">打开关卡</td></tr><tr><td align="center">Ctrl+E</td><td align="center">编辑选中Actor</td></tr></tbody></table><h3 id="Actor-操作"><a href="#Actor-操作" class="headerlink" title="Actor 操作"></a>Actor 操作</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">W</td><td align="center">变换-移动</td></tr><tr><td align="center">E</td><td align="center">变换-旋转</td></tr><tr><td align="center">R</td><td align="center">变换-缩放</td></tr><tr><td align="center">Space</td><td align="center">变换-轮换</td></tr></tbody></table><h3 id="网格预览"><a href="#网格预览" class="headerlink" title="网格预览"></a>网格预览</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">I</td><td align="center">开关显示环境</td></tr><tr><td align="center">O</td><td align="center">开关显示地板</td></tr><tr><td align="center">P</td><td align="center">开关显示后期</td></tr></tbody></table><h3 id="蓝图编辑器"><a href="#蓝图编辑器" class="headerlink" title="蓝图编辑器"></a>蓝图编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">C</td><td align="center">注释</td></tr><tr><td align="center">Tab</td><td align="center">打开创建节点菜单</td></tr><tr><td align="center">Alt+鼠标左键</td><td align="center">断开引脚</td></tr><tr><td align="center">Ctrl+鼠标左键+Drag</td><td align="center">Get</td></tr><tr><td align="center">Shift+鼠标左键+Drag</td><td align="center">Set</td></tr><tr><td align="center">B+鼠标左键</td><td align="center">分支Branch</td></tr><tr><td align="center">D+鼠标左键</td><td align="center">延迟Delay</td></tr><tr><td align="center">F+鼠标左键</td><td align="center">循环ForEachLoop</td></tr><tr><td align="center">G+鼠标左键</td><td align="center">门节点Gate</td></tr><tr><td align="center">M+鼠标左键</td><td align="center">减缓Mutigate</td></tr><tr><td align="center">N+鼠标左键</td><td align="center">条件内多次执行DoN</td></tr><tr><td align="center">O+鼠标左键</td><td align="center">条件内单次执行DoOnce</td></tr><tr><td align="center">P+鼠标左键</td><td align="center">BeginPlay</td></tr><tr><td align="center">S+鼠标左键</td><td align="center">序列Sequence</td></tr><tr><td align="center">F7</td><td align="center">编译</td></tr><tr><td align="center">F9</td><td align="center">设置断点</td></tr><tr><td align="center">Ctrl+Shift+F9</td><td align="center">清除所有断点</td></tr><tr><td align="center">F10</td><td align="center">跳过</td></tr><tr><td align="center">F11</td><td align="center">跳进</td></tr><tr><td align="center">Alt+Shift+F11</td><td align="center">跳出</td></tr><tr><td align="center">双击鼠标左键</td><td align="center">添加中间连接点</td></tr><tr><td align="center">Q</td><td align="center">节点-拉直</td></tr><tr><td align="center">Shift+S</td><td align="center">节点-下对齐</td></tr><tr><td align="center">Shift+W</td><td align="center">节点-顶对齐</td></tr><tr><td align="center">Shift+A</td><td align="center">节点-左对齐</td></tr><tr><td align="center">Shift+D</td><td align="center">节点-右对齐</td></tr><tr><td align="center">Alt+Shift+W</td><td align="center">节点-水平对齐</td></tr><tr><td align="center">Alt+Shift+S</td><td align="center">节点-垂直对齐</td></tr></tbody></table><h3 id="材质编辑器"><a href="#材质编辑器" class="headerlink" title="材质编辑器"></a>材质编辑器</h3><table><thead><tr><th align="center">快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1+鼠标左键</td><td align="center">常量Constant</td></tr><tr><td align="center">2+鼠标左键</td><td align="center">二维常量Constant 2Vector</td></tr><tr><td align="center">3+鼠标左键</td><td align="center">Constant 3Vector</td></tr><tr><td align="center">4+鼠标左键</td><td align="center">Constant 4Vecor</td></tr><tr><td align="center">A+鼠标左键</td><td align="center">Add</td></tr><tr><td align="center">B+鼠标左键</td><td align="center">凹凸贴图偏移BumpOffset</td></tr><tr><td align="center">D+鼠标左键</td><td align="center">Divide</td></tr><tr><td align="center">E+鼠标左键</td><td align="center">Power</td></tr><tr><td align="center">F+鼠标左键</td><td align="center">材质函数调用MaterialFunctionCall</td></tr><tr><td align="center">I+鼠标左键</td><td align="center">If</td></tr><tr><td align="center">L+鼠标左键</td><td align="center">线性插值Lerp</td></tr><tr><td align="center">M+鼠标左键</td><td align="center">乘Multiply</td></tr><tr><td align="center">N+鼠标左键</td><td align="center">标准化Normalize</td></tr><tr><td align="center">O+鼠标左键</td><td align="center">参数反向OneMinus</td></tr><tr><td align="center">P+鼠标左键</td><td align="center">相位Panner</td></tr><tr><td align="center">R+鼠标左键</td><td align="center">关联向量RelectionVector</td></tr><tr><td align="center">S+鼠标左键</td><td align="center">标量参数ScalarParameter</td></tr><tr><td align="center">T+鼠标左键</td><td align="center">纹理采样TextureSample</td></tr><tr><td align="center">U+鼠标左键</td><td align="center">纹理坐标TextureCoordinate</td></tr><tr><td align="center">V+鼠标左键</td><td align="center">向量参数VectorParameter</td></tr><tr><td align="center">Shift+C</td><td align="center">分离通道ComponentMask</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Unreal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unreal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关卡设计之经验谈01</title>
      <link href="/post/96253f08.html"/>
      <url>/post/96253f08.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>设计的方式不止一种，没有所谓最好的方式。这里仅回顾过往设计所学所感，虽有些形式化，但对于梳理思绪或是面试之谈，还是有所帮助的。</p></blockquote><h2 id="设计任务01"><a href="#设计任务01" class="headerlink" title="设计任务01"></a>设计任务01</h2><p><code>如何设计一个副本（关卡玩法）？</code></p><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>这个问题其实问的挺笼统的，一般工作中这种问题只会出现在有明确上下文的情景中，只是在一些面试问答中还是会出现此类问题的。一是面试官没时间去想更具体地问题；二是可以借此考验一下面试者地发散思维（脑洞）。</p><p>针对这个问题，我们需要得到以下几个答案，可以是向需求人询问，也可以是自己思考并设定：</p><ul><li>游戏的核心玩法是什么？<ul><li>可以是游戏类型的说明：RPG\FPS\解密\赛车...</li><li>也可以是操作的说明：玩家可用的交互手段有哪些？</li></ul></li><li>副本所需承担的作用是什么（体验目标）？<ul><li>传递一种情绪：这里可以参考“情绪之轮”。狂喜、钦佩、惊愕、悲伤、厌恶、愤怒、警觉……</li><li>给予知觉反馈：人体五感，主要是视听体验和触觉反馈，其他反馈手段有待开发。</li><li>社交：如果是大型多人在线游戏，则这部分很重要。</li></ul></li><li>作为设计者的你想借此表达什么（设计目标）？<ul><li>能够运行游戏的硬件：手机、PC、主机、VR</li><li>游戏机制、动词和玩家活动：你希望看到玩家以怎样方式的游玩？</li><li>交互方式：触摸屏、键鼠还是手柄</li><li>游戏类型：如果没有明确的核心玩法，则这里可以思考怎样的玩法适合你的体验目标</li><li>游戏主题：你的游戏是关于什么？是多人组队协力通关副本，还是独自挑战击败最终大boss?</li><li>叙事主题：即故事的中心主题，是从坏蛋手中拯救公主的经典故事，还是其他更深刻的哲学探讨？</li><li>游戏的美术目标：卡通、二次元还是写实画面？</li><li>游戏的艺术目标：emmm，目前的我谈艺术还不够格，这里举例《风之旅人》</li><li>游戏的影响力目标：像是目前一些进入校园的教育类功能性游戏，其影响力就是让大家对游戏误人子弟的观念进行改观。</li></ul></li><li>副本参数有额外的规范要求么？<ul><li>设计数值限制：副本时长、角色属性……</li><li>性能参数限制：模型数量、模型面熟、光照数量……</li></ul></li><li>副本开发所需的时间和资源有限制么？<ul><li>几周or几个月？</li><li>能够投入的人力资源有多少？</li></ul></li></ul><p>以上这些信息仅作为参考，可以根据自己理想中设计进行增减要素。</p><h2 id="设计工具"><a href="#设计工具" class="headerlink" title="设计工具"></a>设计工具</h2><p>设计工具只是一种辅助手段，并不能决定设计的好坏。但运用得当的话，可以保证设计质量的下限。</p><h3 id="兴趣曲线"><a href="#兴趣曲线" class="headerlink" title="兴趣曲线"></a>兴趣曲线</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687490532113.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="情绪之轮"><a href="#情绪之轮" class="headerlink" title="情绪之轮"></a>情绪之轮</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_291652802540913.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="故事节拍"><a href="#故事节拍" class="headerlink" title="故事节拍"></a>故事节拍</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1493453804123156.jpeg","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687490738575.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="成就感知"><a href="#成就感知" class="headerlink" title="成就感知"></a>成就感知</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="250" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687489530668.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="渐进式教学"><a href="#渐进式教学" class="headerlink" title="渐进式教学"></a>渐进式教学</h3><p><img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687488922917.png" alt="Alt text"></p><h3 id="心流"><a href="#心流" class="headerlink" title="心流"></a>心流</h3><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687491599004.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687491815763.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h2 id="设计流程"><a href="#设计流程" class="headerlink" title="设计流程"></a>设计流程</h2><ol><li>确定需求</li><li>设定目标</li><li>开始设计<ul><li><p>关卡草图：素描、线框图</p> <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495942543.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495763095.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>关卡白模</p><ul><li>白模制作<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496608701.png" alt="Alt text"></li><li>三视图<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495011470.png" alt="Alt text"></li><li>标准参数<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495096528.png" alt="Alt text"></li></ul></li><li><p>角色3C相关数值：</p><ul><li>人物体积、走跑速度、蹲伏高度、跳跃距离、攀爬高度</li><li>相机视野<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495293761.png" alt="Alt text"></li></ul></li><li><p>性能参数：</p><ul><li>Drawcall</li><li>资源大小</li><li>模型面数<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687495409273.png" alt="Alt text"></li></ul></li><li><p>场景风格参考图</p> <div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496174776.png","alt":"Alt text"},{"url":"../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687496326574.png","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>玩法区域设计</p><ul><li>战斗热区</li><li>动线</li><li>兴趣点</li><li>更细节的设计描述补充<br>  <img src="/../img/%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BB%8F%E9%AA%8C%E8%B0%8801/1687492298579.png" alt="Alt text"></li></ul></li><li><p>白盒文件链接</p><ul><li>附上文件下载地址和个人联系方式</li></ul></li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>依稀记得刚入行时，问主策用什么工具输出设计比较好？主策回答我说：不限工具，只要你能把自己的设计向他人清楚表述就行。随着工作项目经验的增多，愈发觉得，能让他人清楚并理解的设计就是好的设计，文档和工具不过一种形式。</p><p>如果你要问我如何做好一份关卡设计，我会给出这样一个简短的答案：</p><p><code>多玩多思多看，找到一种适合自己以及适合团队的方式，进行设计理念的传达。</code></p>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关卡设计 </tag>
            
            <tag> 游戏设计 </tag>
            
            <tag> 经验总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目总结之《Dawn》</title>
      <link href="/post/4bd7b3b2.html"/>
      <url>/post/4bd7b3b2.html</url>
      
        <content type="html"><![CDATA[<p>在总结这款项目之前，先来让我介绍以下两款游戏：</p><h2 id="《胡闹厨房（Overcooked）》"><a href="#《胡闹厨房（Overcooked）》" class="headerlink" title="《胡闹厨房（Overcooked）》"></a>《胡闹厨房（Overcooked）》</h2><iframe src="https://store.steampowered.com/widget/448510/" frameborder="0" width="100%" height="190"></iframe><p>这是一款厨房合作游戏，每一关为了完成订单，你得先拿食材，切菜、煮菜，然后上菜。</p><p>这本来挺简单的，但餐厅可能坐落于摇摆的海盗船，或被地震一分为二，或乘着热气球，然后中途坠入另一间餐厅，于是你得同时供应寿司和沙拉了，就真的挺疯狂的。</p><p>游戏最大的挑战是让两名、三名甚至四名玩家合作顺畅。大家想要成功闯关就得保持紧密配合和交流，只是和以往的合作游戏不同。</p><h3 id="角色设计"><a href="#角色设计" class="headerlink" title="角色设计"></a>角色设计</h3><p>合作游戏总是妙趣横生，从往日的《魂斗罗》与《合金弹头》，到今天的《光环》与《茶杯头》，人人都知道与朋友一起玩，很多游戏会更有趣。但这些游戏很少要求你去真正的与搭档交流。这通常是因为游戏的<code>对称性（SYMMETRICAL）</code>，所以你与搭档的游戏方式几乎一模一样。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602123859.png","alt":"魂斗罗"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602153953.png","alt":"合金弹头"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602691239.png","alt":"光环"},{"url":"../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687602633706.png","alt":"茶杯头"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>以《生化危机5》为例，你玩着差别不大，无论是选主角克里斯（Chris），还是选谢娃（Sheva），他们都用枪，都能痛殴丧尸，都携带相同的装备。因为每个角色如此相近，你们常常觉得大家仿佛在各玩各的，只是偶尔相互支援一下。这跟后来的《生化危机：启示录2》截然不同，后者提供更差异化的角色，比如第一章，一人选了克莱尔·雷德菲尔德，她是那种传统的、全能的“生化”角色；另一人选了莫伊拉·伯顿，她不能用枪，但拿着一支手电筒，可以照亮敌人或暂时拖延它们。通过这种设计，两名玩家必须更紧密的合作，因为独自一人很难生存。克莱尔需要莫伊拉的手电筒，莫伊拉需要克莱尔的火力。这大大强化了两名玩家之间的依赖，并推动了某种配合与交流，这是许多合作游戏缺乏的。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601741073.png" alt="生化危机：启示录2"></p><p>如果说《启示录2》展示了能力不对称如何推动紧密配合，那么《没人会被炸掉（Keep Talking and Nobody Explodes）》则证明信息不对称也能强化团队合作。游戏里，一名玩家屏幕上显示着定时炸弹，上面满是线缆、按钮、按键和奇怪的玩意儿；另一名玩家拿着一份拆弹指南。于是玩家1必须描述炸弹，玩家2必须理解手册上的拆弹步骤。玩家1必须认真听，并遵循指令，唯一的通关方式就是合作。</p><p><code>非对称（ASYMMETRIC）</code>合作不仅强调交流，还能让不同技术水平的玩家玩到一起。这是任天堂近年大量尝试的，比如《超级马力欧：银河》。一名玩家控制马力欧像往常一样游玩，另一名玩家则轻松地扮演一枚浮标，收集星屑并拖住敌人。再比如《超级马力欧：奥德赛》，一名玩家控制马力欧，另一名玩家控制帽子，帽子可以帮助马力欧跳的更高更远，并且可以攻击敌人。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687603214865.png" alt="超级马力欧：奥德赛"></p><p>尽管非对称设计有利于合作，却不适合《胡闹厨房》。因为这款游戏要适应玩家人数，你可能是四人玩、三人玩、两人玩，甚至一个人玩。另外，这款游戏会吸引水平不同的玩家，所以要针对不同水平档次划分角色，确保那些还不熟悉游戏的人，不必完成高难度的动作，比如躲火球或在滑动平台间穿梭。这款游戏里，所有厨师的能力完全相同，信息完全对称。每个玩家都能独自完成从准备到上菜的所有工序，只要你们约定好各自分工…但《胡闹厨房》最后玩着却不是这样，why？其实，这里的秘诀在于关卡设计。</p><h3 id="关卡设计"><a href="#关卡设计" class="headerlink" title="关卡设计"></a>关卡设计</h3><p>从第一代第一关开始，厨房的设计中就有一条长岛横置中央，让你疲于奔命，从洋葱柜到切菜板，再到煮锅、传送带。只要两人合作，借助中间的桌子递洋葱，速度就快很多。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601404903.png" alt="Overcooked!"></p><p>几乎每一关都是如此，后期还会更糟糕，比如只能容纳一人的窄道、和场地被行驶的汽车分开。速度很重要，因为分数系统完全基于时间，菜要煮快点，否则气走顾客会被罚分。游戏也会催促你尽快上菜，你的最终得分全在于每关限定时间里能上多少道菜。所以，关卡设计和分数系统的要求，在潜移默化中推动玩家分饰不同的非对称角色。</p><p>比如下面这间厨房，一名玩家也许专注切菜和准备肉饼，另一名负责煎肉饼、叠汉堡并送到餐厅。这要求玩家每关开始前进行大量交流，确定各自分工，一起琢磨出完成订单的最高效策略。<br><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687601528622.png" alt="Overcooked!"></p><p>但在此之后，《胡闹厨房》可能会受累于非对称合作的最大缺点，你们会陷入某种固化模式：大家分配好角色，就不变了。某些游戏中，你们甚至可能不再需要交流，因为你们习惯了某种配合。但《胡闹厨房》并非如此，无论每次一开始商量得多好，大家最后都会乱成一团。为什么总是如此？</p><p>其实，这是因为很多巧妙地细节设计，它们扰乱大家的舒适区，迫使你们不断变换角色。</p><ol><li><strong>煮菜的等待时间</strong></li></ol><p>煎肉饼要几秒，所以站在那干等有点浪费，玩家会想走开，看看去别处能帮什么忙，这通常成了混乱之源。汉堡煎太久会起火，所以同伴不得不过来帮你擦屁股。</p><ol start="2"><li><strong>洗碗</strong></li></ol><p>没人喜欢洗碗，但它也许正是《胡闹厨房》成功的关键。因为没人专职洗碗，它没有别的任务那种愉快稳定的节奏，它在后期才变得重要，而且没人想管。这意味着每次干净盘子用完时，流水线被打断，锅开始着火，大伙的分工被搅得一团糟。</p><ol start="3"><li><strong>破坏性的关卡</strong></li></ol><p>移动的切菜板、摆上传送带的食材、移动的厨房、讨厌的老鼠，都会打破模式，摧毁最佳分工，迫使玩家不停地讨论新对策。</p><p>所以《胡闹厨房》是款没有非对称角色的非对称游戏，它充分运用关卡设计，比如奇葩的厨房布局、脏盘子、随机着火、燃烧的肉饼，推动大家分工合作，并在闯关过程中不断变化角色，引出精彩纷呈的交流。</p><h2 id="《地狱潜兵（HellDivers）》"><a href="#《地狱潜兵（HellDivers）》" class="headerlink" title="《地狱潜兵（HellDivers）》"></a>《地狱潜兵（HellDivers）》</h2><iframe src="https://store.steampowered.com/widget/394510/" frameborder="0" width="100%" height="190"></iframe><p>绝地潜兵是一款使用双操作杆操作游玩的多人合作式射击游戏，极具挑战性且耐玩度高。玩家将扮演精英部队“绝地潜兵”的一员，与其他玩家并肩作战，投身银河之战中保护超级地球，打倒敌人。</p><p><img src="/../img/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E4%B9%8B%E3%80%8ADawn%E3%80%8B/1687604573750.png" alt="Alt text"></p><p>尽管在加载界面Helldivers就明确了它的多人属性，当下降到gameplay时却会发现，除去“难度”门槛以外，再无任何能限制单机玩家顺利过关的要素。而难度本身也是作为相对概念存在，即单人与多人情况下地图的基准是相同的，区别仅仅在于一个人需要同时兼顾多个维度的工作。这在多人游戏中通过合理交流与配合可以被分摊到多个玩家身上，从而使得游戏变得相对容易，仅此而已。</p><p>在角色塑造上，Helldivers同样贯彻了对称准则。在背景故事设定以及实际游玩过程中，人物的概念均被模糊、独立与抽象化，更多的是作为技能的载体而存在。让一个角色与另一个角色形成差异的唯一途径就是玩家在任务开始前选择的技能，而技能选择上完全的开放性使得任何人都能扮演任何角色。这是几乎完全对称的设计。</p><h3 id="对称角色的非对称结构设计"><a href="#对称角色的非对称结构设计" class="headerlink" title="对称角色的非对称结构设计"></a>对称角色的非对称结构设计</h3><p>比起“抬起另一名玩家翻过墙壁”、“在信息不对等的情况下合作解密”等等硬性设计，Helldivers倾向于在潜移默化中引导玩家形成非对称结构。技能系统就是一个很好的例子。角色边界的模糊并不代表着消失。一定要划分的话，Helldivers依然可以切出侦察、反坦克、防御、补给等位置。如果你想，那么也能够选出一套兼顾所有的技能，但在多人实战中你很快就会发现，一个人大包大揽通常是行不通的。战场的混乱与绝对控制权的丧失使得在多人游戏中，扮演专一（抑或“专二”…）角色的作用要远高于全能型角色。这一引导在大幅降低个人操作难度的同时也强调了团队交流，所有角色共享的技能选择界面更是为配合性选择技能与补全提供了绝佳平台。</p><h3 id="非对称设计要点"><a href="#非对称设计要点" class="headerlink" title="非对称设计要点"></a>非对称设计要点</h3><p><code>能否有效避免模式的固化</code>是非对称设计的核心考量点，而Helldivers在这方面做的尤为出色。</p><p>它鼓励在战斗开始前进行交流与提前计划，然后再用各种方式扰乱之前固有模式，逼迫玩家进行新的、即时的交流与重新计划，形成一种延续的回环。这其中有诸多大放异彩的设计值得借鉴，例如适合所有角色的“空动作”：输入无线电、扫&#x2F;拆雷、提黑箱&#x2F;炮弹等等。这迫使进行该项工作的玩家暂停之前在团队中进行的工作，因而之前形成的脆弱平衡被打破，不管是团队自发还是为形势所迫，总要有其他人顶替之前缺失的部分。这就形成了角色的切换。再比如友军与空头仓伤害、角色的死亡与重生。这些看似恶意的设计不仅仅是为了给游戏增加欢乐，更是为了创造更多危急时刻、制造更多角色切换，为玩家提供展现团队交流与配合的空间。正是因为它们，玩家才有机会在被自己&#x2F;队友的蠢操作逗笑的同时体验通过完美合作获得胜利的感觉是多么美妙。</p><h2 id="《代号：Dawn》"><a href="#《代号：Dawn》" class="headerlink" title="《代号：Dawn》"></a><a href="https://www.taptap.cn/app/245399">《代号：Dawn》</a></h2><p>该项目是一款对标主机游戏《HellDivers》的手游项目，力求在手机上还原《HellDivers》的战斗体验，以及做好长线运营的商业模式。</p><h3 id="核心玩法"><a href="#核心玩法" class="headerlink" title="核心玩法"></a>核心玩法</h3><p>项目在研发过程，关于核心玩法的设计，有着以下几个阶段的讨论和演变：</p><table><thead><tr><th align="center">阶段</th><th align="center">核心玩法设计要点</th><th align="center">内部讨论概要</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">保留核心战斗元素“战备”的同时，将部分战备的效果赋予角色技能，从而实现战备与角色的共存</td><td align="center">这么设计的原因是项目内部一致认为角色更适合售卖和后期的运营，参照目前主流的二次元商业和运营模式</td></tr><tr><td align="center">2</td><td align="center">移除角色技能，与HD设计一致，采用对称式设计，玩法设计重心依旧放在战备、任务和怪物上</td><td align="center">分析了头部几家做大DAU类型的核心玩法设计与商业模式，同时为了规避新设计带来的风险，决定还是不轻易改动原核心玩法</td></tr><tr><td align="center">3</td><td align="center">简化操作难度和维度，战斗操作从服务于核心玩家，改为面向泛用户玩家</td><td align="center">几次玩家测试反馈以及游戏对于“大DAU”的最终目标追求，到部分人的个人意志，影响着项目向着不确定的方向开始转变</td></tr><tr><td align="center">4</td><td align="center">……</td><td align="center">从这里开始项目逐渐沉沦</td></tr></tbody></table><p>每个阶段过渡之间过程曲折，实属三言两语难以言尽，却都说明了一个问题，那就是项目立项一开始就没想清楚最终要做个什么样的游戏！</p><h3 id="商业模式"><a href="#商业模式" class="headerlink" title="商业模式"></a>商业模式</h3><p>“<code>大DAU</code>”带来的外观收入为主、数值收入为辅的商业模式。</p><p>鉴于项目在核心玩法层面的缺失，商业模式最终也没能完整落地。但我个人是坚信着，在一个好玩的核心玩法面前，商业模式的落地不过是水到渠成的一件事。</p><hr><p>资料来源：</p><ul><li><a href="https://www.youtube.com/watch?v=C3M8BvWcJQY">How Overcooked’s Kitchens Force You to Communicate</a></li><li><a href="https://zhuanlan.zhihu.com/p/57452709">Helldivers：对称与非对称</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dawn </tag>
            
            <tag> 游戏项目 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>任天堂如何解决塞尔达的开放世界问题</title>
      <link href="/post/6048a2bd.html"/>
      <url>/post/6048a2bd.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>如何做出这么一个开放世界，既让玩家有绝对的探索自由度，又能引导他们前往关键地点触发剧情？</p></blockquote><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687224332681.png" alt="Alt text"></p><h2 id="“点与线”系统"><a href="#“点与线”系统" class="headerlink" title="“点与线”系统"></a>“点与线”系统</h2><p>“点”是指希卡塔，耸立于地面之上，巨大且有着霓虹灯尖顶。从远处眺望也清晰可见，而且还可以给玩家带来好处，即登顶便可获取周边区块地图。</p><p>“线”便是塔与塔之间的路，任天堂可以沿路设置许多任务事件。玩家向塔行进时可以碰到很多角色、敌人营地，还有其他不少好玩的。</p><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687224726498.png" alt="Alt text"></p><p>如此引导确实有效，但有些过于有效了。</p><p>测试者们认为他们似乎受困于线性流程，被迫沿塔进行游戏。许多人都抱怨说像是被无形却又明显的引导线路束缚了。而那些偏离引导路线的玩家要么是迷了路，要么就是觉得探索起来毫无趣味。</p><p>测试数据佐证：任天堂追踪了测试者们的行动并制作热图，以分析被探索过的区域。他们发现，玩家分流成了两个彻底不同的类型。八成玩家忠于职守，沿塔行进；二成玩家则是毫无目的，随机闲逛。这两种都不是任天堂所希望的。</p><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687225090507.png" alt="Alt text"></p><h2 id="地标系统"><a href="#地标系统" class="headerlink" title="地标系统"></a>地标系统</h2><p>与其推动玩家始终沿塔行进，任天堂利用大量地标与兴趣点吸引玩家在地图上随意奔赴，比如神庙、驿站、敌人营地，他们只需找到方法来吸引玩家朝着这些地点靠拢便可，就像飞蛾本能扑向火焰。</p><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687225512576.png" alt="Alt text"></p><p>首先确保每个地点都有明显奖励：</p><ul><li>通关几个神庙可以增加生命值或精力</li><li>敌人据点满是可以拾取的武器</li><li>驿站可以用来登记马匹，还有可回血的床、商店、带传言和支线任务的NPC</li><li>部分地区带有明显的资源奖励：矿石、鱼等各类采集物<ul><li>回血的道具需要采集、打猎、烹饪</li><li>通过挖矿去商店售卖换卢比</li></ul></li></ul><p>其次每个地点都有明显的标记：</p><ul><li>希卡塔巨大且醒目，一些小地标则不然；需要让他们在远处或高空也清晰可见</li><li>神庙的外观独特，灯火长明</li><li>营地的火堆散发着高高的烟柱</li><li>敌人据地往往围绕着巨大骷髅状岩石而建</li><li>驿站则是一个巨大的木制马头雕像</li></ul><p>但当玩家目之所及仅有一两座希卡塔时，那周边就会显得有特别多的小地标。一个开放世界游戏选项过多的话，容易导致玩家不知所措。</p><h2 id="三角法则"><a href="#三角法则" class="headerlink" title="三角法则"></a>三角法则</h2><p>任天堂以三角形设计了海拉鲁的大部分地形和景观，到处都是如金字塔或呈锥形的小丘、山脉、岩石。<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687226503322.png" alt="Alt text"></p><p>这样做的好处：</p><ul><li><p>当玩家面对一座山时，需要决定是翻越还是绕行，这便提升了游戏探索的选择空间和可玩性<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687226778491.png" alt="Alt text"></p></li><li><p>并且，玩家会自然而然地望向三角形地顶点，这样就能往那放兴趣点吸引玩家注意<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687227641243.png" alt="Alt text"></p></li><li><p>更重要地是，这些三角形可以挡住后面的东西。也就是说，玩家不至于被大量内容淹没。这样一来，屏幕上就能保持只出现少量内容，其余能做的事都藏在山的后面。而随着你进山，藏着的内容也会逐渐显现。<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687227748307.png" alt="Alt text"></p></li></ul><h2 id="地标面包屑"><a href="#地标面包屑" class="headerlink" title="地标面包屑"></a>地标面包屑</h2><p>新地点的出现源源不断地制造着惊喜和好奇。也许你朝着一个地标前进的同时，还会顺路发现两三个新地点。可能是地平线上的一座神庙，或是转角处的敌人营地；也许是奇岩怪石，或是峰峦奇景。不管你去哪里，无论你做什么，都会有事物吸引你的眼球，说不定某个新地标激起你的兴趣，你就会改变计划、更换目的地。结束之后，你就会想起原来的计划，然后…再次被吸引走。</p><p>这，是探索与发现连锁反应和无尽循环，一条洒满“<code>地标面包屑</code>”的小径。所有的这一切使你步履不停，漫步地图，只因无法克制自己说“噢，那是什么？”的欲望。而不知不觉，你就到了任天堂最开始就想让你去的希卡塔。</p><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687228596617.png" alt="Alt text"></p><p>现在有了地标系统，虽然玩家移动还是点到点式，但他们随着“<code>地标面包屑</code>”的小径而行，并非一条固定线路。每个玩家的小径，最终都会朝向游戏里最关键的地方。如果说塔至塔的线性方式让玩家感到受迫，那么散布地标的方法则更加生动，使玩家占据主动权。依据兴趣、目标或是心境，玩家自然而然地选择目的地。</p><ul><li><p>不同地点对玩家地吸引力会随需而增或减。<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687228946823.png" alt="Alt text"></p></li><li><p>如果玩家想给角色增强力量，那神庙和敌人营地就比驿站和塔更有诱惑。<br><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687229347015.png" alt="Alt text"></p></li></ul><p><code>-- 效果 --</code></p><p>新的测试热图：80比20地尴尬分流不复存在</p><p>所有玩家都如任天堂所料：自在地徜徉于不同角落，追随兴趣寻找地标，且几乎所有玩家最终都抵达了关键地点。</p><p><img src="/../img/%E4%BB%BB%E5%A4%A9%E5%A0%82%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E5%A1%9E%E5%B0%94%E8%BE%BE%E7%9A%84%E5%BC%80%E6%94%BE%E4%B8%96%E7%95%8C%E9%97%AE%E9%A2%98/1687229458798.png" alt="Alt text"></p><hr><p>🪶资料来源：<br><a href="https://www.youtube.com/watch?v=CZzcVs8tNfE">How Nintendo Solved Zelda’s Open World Problem</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
            <tag> GMTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏解析之《艾尔登法环》</title>
      <link href="/post/41b229dc.html"/>
      <url>/post/41b229dc.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>2022年度最佳游戏！</p></blockquote><iframe src="https://store.steampowered.com/widget/1245620/" frameborder="0" width="100%" height="190"></iframe><p><code>填坑中...🚀</code></p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记之《妙趣横生的游戏制作之旅》</title>
      <link href="/post/bfd75427.html"/>
      <url>/post/bfd75427.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>《妙趣横生的游戏制作之旅》由传奇设计师 Richard Lemarchand撰写，别处心裁地将游戏设计的创意方面与有效项目管理的成熟技术联系起来，旨在向游戏设计师、有抱负的游戏开发人员和游戏设计专业的学生传授如何从头至尾完成一个数字游戏项目，从概念化和设计到构建、游戏测试和迭代，以及如何避免游戏制作过程中常见的棘手问题和不受控制的过度行为。</p></blockquote><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/36078032">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s34314229.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s34314229.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>妙趣横生的游戏制作之旅</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]RichardLemarchand</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2022-9</span></div>            <div class="douban-card-item"><span>评分: </span><span>9.6</span></div>        </div>    </a></div><h2 id="第-1-阶段-构思"><a href="#第-1-阶段-构思" class="headerlink" title="第 1 阶段  构思"></a>第 1 阶段  构思</h2><h3 id="奇思妙想"><a href="#奇思妙想" class="headerlink" title="奇思妙想"></a>奇思妙想</h3><p>开启<code>头脑风暴</code>的简短规则列表：</p><ul><li>设定一个时间限制</li><li>注重数量而不是质量</li><li>委任一名协调员</li><li>一次只有一个人说话</li><li>每个人都有发言的机会</li><li>把一切都写下来</li><li>欢迎不寻常的想法——越奇怪越好</li><li>多说“是的，而且”——结合并改进想法</li><li>不要在头脑风暴期间讨论这些想法</li></ul><p>头脑风暴结果评估方式：</p><ul><li>借用电子表格，指定每个想法的<code>高、中、低的优先级</code></li><li>额外列数据，展示每个想法的<code>有趣程度</code>、<code>兴奋程度</code>、<code>实用程度</code></li></ul><h3 id="游戏原型"><a href="#游戏原型" class="headerlink" title="游戏原型"></a>游戏原型</h3><table><thead><tr><th align="center">名词</th><th align="center">注释</th></tr></thead><tbody><tr><td align="center">游戏机制</td><td align="center">游戏机制是构成游戏功能和互动性的规则和流程，能控制玩家可以做什么以及游戏如何开始、展开和最终结束。</td></tr><tr><td align="center">动词</td><td align="center">游戏中玩家可以做什么的“行动词汇”，例如移动、行动、说话或者购买。这些动词可以进一步“原子”或“分子”化。</td></tr><tr><td align="center">玩家活动</td><td align="center">用来描述玩家如何使用特定动词的术语。玩家活动是游戏机制、游戏动词、游戏叙事以及玩家的感知、想法、行动和意图相结合的结果。</td></tr></tbody></table><p>原型 checklist</p><ul><li><input checked="" disabled="" type="checkbox"> 我在这里为什么样的玩家活动制作原型？</li><li><input checked="" disabled="" type="checkbox"> 我在研究哪些游戏动词？</li><li><input checked="" disabled="" type="checkbox"> 这个玩家活动产生了怎样的体验？</li><li><input checked="" disabled="" type="checkbox"> 玩家活动有什么基调或者情绪？</li><li><input checked="" disabled="" type="checkbox"> 我现在可以用这个玩家活动做什么有趣的游戏玩法和故事？</li><li><input checked="" disabled="" type="checkbox"> 如果我有时间设计不同的情况和场景来使用这个玩家活动，我可以用它做多少事情？</li><li><input checked="" disabled="" type="checkbox"> <strong>我想用这个原型回答什么问题？</strong></li></ul><h3 id="制作数字原型"><a href="#制作数字原型" class="headerlink" title="制作数字原型"></a>制作数字原型</h3><p>要点：</p><ul><li>从构建玩具——<code>小巧、简单、好玩的系统</code>——开始你的数字原型设计</li><li>声音对于数字游戏原型很重要</li><li>应该在分配给构思的时间内尽可能多的制作不同的数字原型，重要的是在方向上的探索，而不是在内容上的堆叠。</li><li>尽可能给每个原型保留一份构建（build）存档，类似开发日志</li></ul><p>关于原型设计，最佳建议就是急切地、快乐地投入其中。不要想太多——做，做，做！享受你所做的一切，不要对你的输出质量有压力。不要害怕原型创作过程中丢失最开始的想法，毕竟制作原型本身的意义就是找到新的方向。</p><p>原型制作将帮助你确定你的创意方向，这将体现在构思阶段最重要的交付物中，这个交付物就是：我们游戏的项目目标。</p><h3 id="沟通是一种游戏设计技能"><a href="#沟通是一种游戏设计技能" class="headerlink" title="沟通是一种游戏设计技能"></a>沟通是一种游戏设计技能</h3><ul><li>最基本的沟通技巧：保持清晰、保持简洁、积极倾听。</li><li><code>三明治法</code><ul><li>第一片面包——赞美：对于别人工作的，告诉他们你喜欢的部分。</li><li>馅料——建设性批评：要直接、要具体、批评对事不对人。</li><li>第二片面包——总结：以另一个赞美来为这次的反馈做总结，给结论性的正面评价。</li></ul></li></ul><p>沟通的最终目的是赢得团队的尊重、信任和认同。伴随着团队默契的加深，沟通成本只会越来越低。</p><h3 id="项目目标"><a href="#项目目标" class="headerlink" title="项目目标"></a>项目目标</h3><p>项目目标的两种类型：</p><ul><li><code>体验目标</code><ul><li><p>情感体验：具体情感描述可参照情绪之轮 </p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="500" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_291652802540913.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div></li><li><p>知觉体验：人体五感</p></li><li><p>社交体验：对于大型多人在线游戏而言，这部分的体验目标很重要</p></li></ul></li><li><code>设计目标</code><ul><li>运行游戏的硬件</li><li>游戏机制、动词和玩家活动</li><li>交互方式</li><li>特殊硬件或软件</li><li>游戏类型</li><li>游戏主题</li><li>叙事主题</li><li>游戏的美术目标</li><li>游戏的艺术目标</li><li>游戏的影响力目标</li></ul></li></ul><p>拿手好戏和成长：分析自己的开发团队所擅长的方向，想学习和改进以及尝试的点，在稳步和创新之间找到平衡。</p><p>考虑游戏的可能受众：从喜欢它的人的角度来审视你的游戏，可能会得到新的设计理念，进而引导你走向有趣和有效的方向。</p><h3 id="最终建议"><a href="#最终建议" class="headerlink" title="最终建议"></a>最终建议</h3><p>尽可能多地制作原型，并尽可能广泛、深入、快速、彻底地探索更多想法，包括使用物理原型、玩具表演和快速、专注地数字原型。通过制作、构建、创作和持续不断地进行游戏测试，从尽可能多的不同角度头脑风暴，探索想法。</p><table><thead><tr><th align="center">交付物</th><th align="center">交付时间</th></tr></thead><tbody><tr><td align="center">奇思妙想的结果</td><td align="center">构思阶段开端，如果需要的话，可能贯穿整个构思阶段</td></tr><tr><td align="center">调研笔记</td><td align="center">构思阶段过程中</td></tr><tr><td align="center">游戏原型</td><td align="center">构思阶段过程中</td></tr><tr><td align="center">项目目标</td><td align="center">构思阶段的结尾</td></tr></tbody></table><h2 id="第-2-阶段-预制作"><a href="#第-2-阶段-预制作" class="headerlink" title="第 2 阶段  预制作"></a>第 2 阶段  预制作</h2><h3 id="垂直切片"><a href="#垂直切片" class="headerlink" title="垂直切片"></a>垂直切片</h3><p>垂直切片是游戏的高质量演示小样，包含游戏设计、图形、音频设计、操控方案、视觉效果及其所有元素的品质都打磨得足够优质。</p><p>电子游戏的垂直切片包括对整个游戏体验至关重要的所有（或大部分）核心功能、资源和叙事的样本。这是我们游戏设计的横截面快照，并演示了我们计划制作的游戏类型。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1347247751620986.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h4 id="核心循环"><a href="#核心循环" class="headerlink" title="核心循环"></a>核心循环</h4><p>主要是指可重复构建的玩法模式。通过游戏设计师与玩家之间的合作，在这种潜在的可重复模式之上建立无穷无尽的变化。设计师呈现出不断变化的游戏元素组合，玩家可以自由地以多种不同的方式触达游戏的每个部分。</p><p>垂直切片将至少包括代表游戏核心循环的一个部分，并展示我们在玩游戏的大部分时间中将拥有的体验类型。</p><p>在垂直切片中，我们还应该尝试展示一些代表游戏中<code>特殊序列</code>的内容：极具挑战性的，具有数量惊人的特殊任务和特定时刻。</p><h4 id="3C"><a href="#3C" class="headerlink" title="3C"></a>3C</h4><ul><li>角色（Character）</li><li>相机（Camera）</li><li>操控 （Control）</li></ul><h4 id="关卡白盒"><a href="#关卡白盒" class="headerlink" title="关卡白盒"></a>关卡白盒</h4><p>垂直切片中还将包括游戏的一个或多个示例关卡（场景），以便我们有一个可以玩的地方，并且可以了解最终游戏的外观和声音。</p><p>迭代流程：</p><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1347262975768901.jpeg" alt="Alt text"></p><p>关卡设计相关资源推荐：</p><ul><li><p>GDC Vault(gdcvault.com) 上搜索“level design workshop”</p></li><li><p>书籍《An Architectural Approach to Level Design》 Christopher W. Totten著</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/11994958">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s27996871.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s27996871.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>AnArchitecturalApproachtoLevelDesign</strong></div>            <div class="douban-card-item"><span>作者: </span><span>AndrewS.Gibbons</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2013-10-29</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.6</span></div>        </div>    </a></div></li><li><p>书籍《通关！游戏设计之道》（Level UP! The Guide to Great Video Game Design） Scott Rogers著</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/5285472">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s4480116.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s4480116.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>LevelUp!</strong></div>            <div class="douban-card-item"><span>作者: </span><span>ScottRogers</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2010-09-07</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.4</span></div>        </div>    </a></div></li><li><p>书籍《建筑师成长记录：学习建筑的101点体会》 Matthew Frederick著</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/4100551">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s4046157.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s4046157.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>建筑师成长记录</strong></div>            <div class="douban-card-item"><span>作者: </span><span>马修·弗莱德里克</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2009-10-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.6</span></div>        </div>    </a></div></li></ul><h4 id="美丽角落"><a href="#美丽角落" class="headerlink" title="美丽角落"></a>美丽角落</h4><p>一个美丽的角落是关卡的一部分，足以填满玩家的电脑屏幕，其中的美术效果和音频已经过打磨，看起来和听起来都与最终游戏中的效果一样好。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="400" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1347556341010002.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>使用美丽角落、补充概念电影和其他演示材料来可视化游戏体验，可以作为对垂直切片的一种灵活的思考方式。</p><h3 id="试玩测试"><a href="#试玩测试" class="headerlink" title="试玩测试"></a>试玩测试</h3><h4 id="游戏设计师模型、系统映像和用户模型"><a href="#游戏设计师模型、系统映像和用户模型" class="headerlink" title="游戏设计师模型、系统映像和用户模型"></a>游戏设计师模型、系统映像和用户模型</h4><p>该概念出自书籍《日常物的设计》（The Design of Everyday Things）Donald A. Norman著，国内翻译本为《设计心理学》。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/26742341">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29343710.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29343710.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>设计心理学</strong></div>            <div class="douban-card-item"><span>作者: </span><span>唐纳德·A·诺曼</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2015-12-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.5</span></div>        </div>    </a></div><ul><li><code>游戏设计师模型</code>：指游戏设计师在他们的脑海中如何看待游戏（或其他类型的交互系统）。它是“游戏设计师对产品外观、感觉和操作的概念”。</li><li><code>系统映像</code>：指游戏实际呈现给玩家的方式。“系统映像是可以从已构建的物理结构（包括文档）中得出的”。</li><li><code>用户模型</code>：指玩家头脑中发生的事情。“用户的心智模型是通过与产品和系统图像的交互来开发的”。</li></ul><p>“游戏设计师希望用户模型与他们自己的模型相同，但由于他们无法直接与用户交流，因此交流的重点在于系统映像。”</p><p>游戏和故事中的概念和机制通常是复杂而抽象的，很难以可靠的方式将它们传达给玩家。如果使用间接沟通方法，会使情况情况变得更具挑战性。</p><p>为了解决这些问题，我们不得不通过多个渠道同时向玩家传达相同的概念：系统的外观、元素的形状和颜色、我们看到它在做什么、我们通过文本或语音明确表达的内容，以及我们设置的训练序列。我们必须将所传递的信息分层，进行<code>冗余通信</code>（一次通过多个渠道传达同一件事），直到每个玩游戏的人都能得到它。</p><h4 id="功能可见性和语义符号"><a href="#功能可见性和语义符号" class="headerlink" title="功能可见性和语义符号"></a>功能可见性和语义符号</h4><p>功能可见性的概念出自书籍《视知觉生态论》（The Ecological Approach to Visual Perception） James J. Gibson著。</p><p>Donald A. Norman将这个想法提炼成一种功能可见性理论，它“定义了哪些行为是可能的”，以及语义符号，它“指出了人们如何发现这些可能性：语义符号是信号，是可以做什么的可感知信号。”</p><h4 id="试玩测试的最佳实践"><a href="#试玩测试的最佳实践" class="headerlink" title="试玩测试的最佳实践"></a>试玩测试的最佳实践</h4><ul><li>在测试之前和测试期间尽量减少与游戏测试者的对话</li><li>让游戏测试者和游戏设计师都是用耳机</li><li>如有必要，准备一份操控备忘单</li><li>准备书面提示或帮助，让玩家了解任何已知的游戏或功能问题</li><li>建议测试者放声思考和感受</li><li>适当使用内容警告</li><li>观察玩家的游戏体验</li><li>观察测试者的所作所为并记下所有内容</li><li>完全不要帮助你的测试者</li><li>关注时间</li><li>游戏测试结束后，进行<code>试玩后访谈</code><ul><li>你最喜欢的时刻或互动是什么？</li><li>你最不喜欢的时刻或互动是什么？</li><li>你觉得自己最聪明的时刻？</li><li>有没有你想做而游戏不允许你做的事情？</li><li>如果你有一根魔杖并且可以改变游戏的任何方面或你的体验，那会是什么？假设你有无限的预算和时间。</li></ul></li><li>不要成为游戏解释者</li><li>不要气馁</li></ul><h4 id="评估试玩测试反馈"><a href="#评估试玩测试反馈" class="headerlink" title="评估试玩测试反馈"></a>评估试玩测试反馈</h4><ul><li>观看和聆听</li><li>写下所有内容<br>认真对待反馈——不要防御，也不要太快忽略</li><li>反馈能否可以轻松<code>归类</code>为<ul><li>严重毁坏：必须修复</li><li>问题：可能修复</li><li>建议：一个新想法</li></ul></li><li>计划修复必须修复的问题</li><li>调查可能的修复并评估新想法，检查项目目标</li><li>仔细解读玩家所说的话，将你看到的他们在游戏中的行为作为指导</li><li>与合作者讨论反馈</li></ul><h4 id="反馈小技巧"><a href="#反馈小技巧" class="headerlink" title="反馈小技巧"></a>反馈小技巧</h4><p>“我喜欢，我希望，如果……”</p><ul><li>通过“我喜欢”，展示对这项工作的欣赏。</li><li>通过“我希望”，表达一些具有建设性的批评意见。</li><li>最后，用“如果……”，提供一个可能实现愿望的想法，给予建设性的反馈意见。</li></ul><p>不管结果如何，“如果……”是总结特定反馈的好方法；它为讨论对话开辟了空间，因为它会很自然地邀请设计师为收到地反馈提供回应。</p><h3 id="同心开发"><a href="#同心开发" class="headerlink" title="同心开发"></a>同心开发</h3><p>同心意味着从中心开始，向外扩展到围绕并且支持该中心的事物。</p><p>当我们进行同心开发时，我们将首先建造主楼，以确保我们有值得周围事物支持的东西。这意味着首先实现游戏的基本元素并对其进行处理，直到它们完成。这些基本元素有时被开发人员成为游戏的主要机制。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="400" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1365953012850424.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h4 id="首先实现基础机制，直到它们完成"><a href="#首先实现基础机制，直到它们完成" class="headerlink" title="首先实现基础机制，直到它们完成"></a>首先实现基础机制，直到它们完成</h4><p>同心开发哲学的核心是，我们不只是将这些基础机制拼凑在一起，就像我们在原型制作时所作的那样，而是会花时间来努力改善它们，直到它们成为完整的和优雅的。这意味着创造最终版本的艺术、动画、声音效果和视觉效果，并将它们与良好的游戏设计和代码结合在一起。</p><p>使用同心开发，我们<code>不会在基础机制已经完成并打磨到了一个很好的程度之前，开始实现任何的二级机制</code>。</p><h4 id="实现二级和三级机制"><a href="#实现二级和三级机制" class="headerlink" title="实现二级和三级机制"></a>实现二级和三级机制</h4><p>二级机制是游戏中一两个最重要的玩家活动或动词，通常是这些动词完成游戏的核心循环。对于具有玩家角色的游戏，最常见的是：</p><ul><li>在关于漫游的游戏中，跳跃和攀爬</li><li>在关于战斗的游戏中，主要战斗动作</li><li>在叙事游戏中，与其他角色交谈</li></ul><p>我们实现每个二级机制，进行迭代，并完成所有相关的美术、动画 、音效设计、视觉效果、控制和算法，打磨它们，直到达到可以发布的水平。我们以这种方式处理每个二级机制，一次一个，直到它们全部完成。然后我们可以继续实现和迭代我们的三级机制。</p><p>这些三级机制将构成我们的游戏机制的“下一层”。它们通常以某种方式依赖于基础机制和二级机制，并且充实了游戏的设计。</p><h4 id="设计参数"><a href="#设计参数" class="headerlink" title="设计参数"></a>设计参数</h4><p>简单来说就是各项规格参数，决定其基本属性的参数值，必须在继续构建我们希望的游戏最终关卡之前牢牢锁定。</p><h4 id="测试关卡"><a href="#测试关卡" class="headerlink" title="测试关卡"></a>测试关卡</h4><p>在制作垂直切片时，用测试关卡来微调和确认游戏的设计参数</p><h3 id="游戏设计师的故事结构"><a href="#游戏设计师的故事结构" class="headerlink" title="游戏设计师的故事结构"></a>游戏设计师的故事结构</h3><blockquote><p>叙事是对变化的研究。—— Irving Belateche</p></blockquote><h4 id="亚里士多德的《诗学》"><a href="#亚里士多德的《诗学》" class="headerlink" title="亚里士多德的《诗学》"></a>亚里士多德的《诗学》</h4><p>一个故事首先陈述一个立场，然后探索那个立场，然后得出一个结论，用各部分之间的因果关系来创造“一个全面且完整的行为的表征”。</p><p>三部曲结构：</p><ul><li>第一幕，开头，通过向我们介绍人物和世界来设置故事</li><li>第二幕，中间，通常是第一幕的两倍，向我们展示故事如何伴随它的展开而变得更加复杂</li><li>第三幕，结尾，往往是最短的一幕，展示了故事的高潮和结局</li></ul><h4 id="弗赖塔格的金字塔"><a href="#弗赖塔格的金字塔" class="headerlink" title="弗赖塔格的金字塔"></a>弗赖塔格的金字塔</h4><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1493451011655969.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>戏剧结构理论：</p><ol><li>说明（<code>exposition</code>）或介绍，解释或设置故事的世界和主要人物。在这里设定故事的时间和地点，以及它的情绪或基调。</li><li>上升的动作（<code>rising action</code>），故事的复杂性展开的地方。这是故事中非常重要的部分，因为它的事件需要有逻辑地流动，以便仔细设置下一部分。</li><li>上升地动作达到高潮（<code>climax</code>），所有的复杂性都达到了高潮，为角色提供了一个转折点，角色的命运发生了根本性的改变。</li><li>高潮之后是回落的动作（<code>falling action</code>），高潮的结果在此上演。回落的动作通常会包含最后一刻的悬念，最终结果似乎不确定。</li><li>最后，我们到达了结局（<code>denouement</code>）或灾难（<code>catastrophe</code>），在那里我们看到了故事的世界是如何因为我们故事中的事件而发生了持久的变化。故事角色开始习惯这种变化，这会释放在故事过程中建立在观众身上的所有紧张和焦虑。</li></ol><h4 id="游戏结构模仿故事结构"><a href="#游戏结构模仿故事结构" class="headerlink" title="游戏结构模仿故事结构"></a>游戏结构模仿故事结构</h4><p>亚里士多德和弗赖塔格都关注开头、中间、结尾的重要性，这是我们通过游戏设计视角讨论故事结构的一个很好的起点。正如 Ellen Lupton 在她的《Design Is Storytelling》一书中指出的那样，我们都认识到自己生活中的这种基本结构，它不可避免地有开头、中间和结尾。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/30150848">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29697982.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s29697982.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>DesignisStorytelling</strong></div>            <div class="douban-card-item"><span>作者: </span><span>EllenLupton</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2017-11</span></div>            <div class="douban-card-item"><span>评分: </span><span>6.9</span></div>        </div>    </a></div><h4 id="故事和游戏玩法是分形的"><a href="#故事和游戏玩法是分形的" class="headerlink" title="故事和游戏玩法是分形的"></a>故事和游戏玩法是分形的</h4><p>一个故事可以分为三到五幕。同样，动作也可以分解为序列。</p><p>Frank Daniel 的“序列结构”法认为一部电影由八个序列组成：第一幕两个，第二幕四个，第三幕两个。</p><blockquote><p>“一部典型的两小时电影是由8到15分钟的连续片段组成的，这些具有自己内部结构的片段，实际上就是嵌在长篇中的短片。在很大程度上，每个序列都有自己的主角、张力、上升的动作和化解——就像一部电影一样。一个序列和一个独立的15分钟电影的区别在于，一个序列中提出的冲突和问题只是在序列内得到了部分解决，当它们解决后，往往会引发新的问题，进而变成后续序列的主题。”——《序列编剧法》</p></blockquote><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/25782653">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27163660.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s27163660.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>序列编剧法</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]保罗•约瑟夫•古林诺</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2013-12</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.7</span></div>        </div>    </a></div><p>一个序列可以分解为多个场景，每个场景通常发生在一个单独的地点或专注于某个特定的角色群。就像一个序列一样，场景是一个独立的故事，它展示了角色在面对不断展开的事件时所经历的变化以及彼此的反应。但一个场景并不是故事中戏剧动作的最小单位：我们可以将一个场景分解为多个节拍。</p><p><code>节拍</code>：来自剧院和电影制作的概念，部分与展开戏剧的时间有关，但也指一个事件、决定、发现或两个角色之间的交流。节拍每时每刻都在推动一个故事。</p><p><code>情绪效价</code>：心理学术语，代指情绪高低。愤怒、悲伤和恐惧等情绪具有负效价，而快乐具有正效价。</p><p>在考虑和场景和节拍时，考虑角色在进入和离开场景或节拍时的情感价值会很有用。一个场景或一个节拍通常让人物以某种情绪效价聚集在一起——比如说，一个快乐，另一个悲伤——然后他们互相回响，进行情感互动并在此过程中改变他们的效价——那个悲伤人现在很开心，反之亦然。如果一个场景让角色保持与他们进入时相同的效价，那么这个场景可能不适合讲故事。</p><p>这就是故事、行为、序列、场景和节拍。</p><p>亚里士多德和弗赖塔格描述的整个故事的“形状”也适用于故事的子部分，以及它们的次子部分，一直到节拍的精细程度。场景中的每一个节拍都有一个难题和其化解、呼叫和响应的上升和回落模式。<code>这种起伏的情绪让我们时时刻刻、分分秒秒都保持兴趣</code>，就像我们可能会被壁炉中闪烁的火焰或岸上的海浪所震撼一样。</p><p>通过这种方式，故事是分形的。这是一个来自数学的概念，用于描述其部分和子部分的形状与整个形状相似的结构。当行动在故事中起起落落时，它会在每个动作、序列、场景、和节拍中起起落落。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="600" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_1493453804123156.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h4 id="故事的组成部分"><a href="#故事的组成部分" class="headerlink" title="故事的组成部分"></a>故事的组成部分</h4><ul><li><code>主人公（protagonist）</code>：故事的英雄，我们在务实和情感的角度都和他的主视角达成认同。讲故事的人通过调用<code>同理心和同情心（empathy and sympathy）</code>的技巧让我们与故事的主人公产生共鸣。</li><li><code>对立角色（antagonist）</code>：也许是一个敌人，他做的事情会成为驱动故事的<code>主要张力（main tension）</code>或<code>核心冲突（core conflict）</code>。</li></ul><p>故事的主线通常是由主人公渴望的东西提供的，一些讲故事的人称之为外在<code>欲望（external desire）</code>或<code>外部目标（want）</code>。主角为了得到那个东西而采取的行为，在他们的<code>人生梦想（life&#39;s dream）</code>的更大背景下，推动他们完成故事，让他们接触到构成故事主题的有趣的角色和场景。在努力实现目标的过程中，主角通常会为一些难以看到或名状的事物而挣扎，这与他们的性格、局限性和个人成长有关。一些讲故事的人称这是一种<code>内在欲望（internal desire）</code>或<code>内心需求（need）</code>，而主角处理这种隐藏的欲望、成长、做好某些事、成为一个全新的人的方式，往往包含了故事的真正含义。</p><p>更多关于故事结构的书籍推荐：</p><ul><li><p>《千面英雄》和《作家之旅》对于游戏设计师来说是一个很好的入门故事结构，因为它很容易映射到我们许多游戏的基于任务的结构上来。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/26707803">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28382455.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s28382455.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>千面英雄</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]约瑟夫·坎贝尔</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2016-2</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.2</span></div>        </div>    </a></div><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/6851810">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s6942269.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s6942269.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>作家之旅</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]ChristopherVogler</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2011-11</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.5</span></div>        </div>    </a></div></li><li><p>《救猫咪》，一个很好的故事结构初学者指南。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35316407">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s33796280.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s33796280.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>救猫咪：电影编剧指南</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]布莱克·斯奈德</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2021-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.0</span></div>        </div>    </a></div></li><li><p>《Screenwriting is Rewriting: The Art and Craft of Professional Revision》，关于优秀作品的迭代性的知识。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/32909781">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s31800026.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s31800026.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>ScreenwritingisRewriting:TheArtandCraftofProfessionalRevision</strong></div>            <div class="douban-card-item"><span>作者: </span><span>{{author}}</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>{{publishDate}}</span></div>            <div class="douban-card-item"><span>评分: </span><span></span></div>        </div>    </a></div></li></ul><h3 id="游戏设计宏观方案"><a href="#游戏设计宏观方案" class="headerlink" title="游戏设计宏观方案"></a>游戏设计宏观方案</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>游戏设计宏观方案是一个精简的游戏设计文档。它是一个想法的矩阵，代表了我们游戏设计的概述。它以简洁的方式列出了我们游戏的所有重要方面，为我们提供了足够的信息来指导项目。它不会详述细节，因为当我们在开发游戏时总会有新的发现，它们很容易发生变化。我们应该能够从游戏设计宏观方案上一眼看出项目重要的量化方面：游戏有多少关卡或地点，有多少角色，有多少主要的目标类型等等。</p><h4 id="塞尔尼方法"><a href="#塞尔尼方法" class="headerlink" title="塞尔尼方法"></a>塞尔尼方法</h4><p>设计分为宏观和微观设计。宏观设计是一个五页的文档，它提供了适合你的游戏的框架，并且可在预制作结束时交付。微观设计就是你的游戏本身，是在生产过程中动态创建的。通过将这两者分开，你可以制作出一款保持连贯性且充满乐趣的创意游戏。</p><p>宏观设计在预制作结束时完成。微观设计是在制作过程中创作的……这这种方法用来应对游戏开发中一个最危险的误区：“<code>你最初的愿景越明确越好</code>”。</p><h4 id="游戏设计宏观方案的两个部分"><a href="#游戏设计宏观方案的两个部分" class="headerlink" title="游戏设计宏观方案的两个部分"></a>游戏设计宏观方案的两个部分</h4><ol><li>一个简短的游戏设计概述，总结了游戏的核心元素：游戏的基本元素，游戏最重要的特殊机制，以及游戏情节的简要概述。</li><li>一个宏观图表，它是一个电子表格，提供了游戏关卡的逐步细分，以及每个关卡内发生的动作、活动和故事节拍。</li></ol><h4 id="游戏设计宏观图表"><a href="#游戏设计宏观图表" class="headerlink" title="游戏设计宏观图表"></a>游戏设计宏观图表</h4><p>游戏设计宏观图表是通过详细思考游戏的体验流程并将其写在电子表格中而制作的。</p><p>在这个电子表格中，我们必须描述:</p><ul><li>游戏中的哪里有哪种游戏玩法</li><li>你打算使用的每个机制都应该在此图表中</li><li>了解游戏里计划好的多样性、游戏范围及其高级结构</li></ul><p>每行应描述：</p><ul><li>那部分游戏的环境</li><li>环境中的物体和人物</li><li>那里发生的游戏玩法类型</li><li>玩家必须做或可以做的事情</li></ul><p>图表模板：<br><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_23095734841788.jpeg" alt="Alt text"></p><table><thead><tr><th align="center">列</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">位置&#x2F;序列名称</td><td align="center">描述该行的事件发生的位置</td></tr><tr><td align="center">时间&#x2F;天气&#x2F;心情</td><td align="center">黎明、早晨、下午、黄昏还是夜晚？适中、闷热、还是暴风雨？或者，是什么心情？</td></tr><tr><td align="center">活动简述</td><td align="center">从游戏玩法和故事的角度来看。这里会发生什么？</td></tr><tr><td align="center">玩家机制</td><td align="center">玩家可以在这部分游戏中使用哪些机制？使用颜色编码或粗体显示新引入机制的时间。</td></tr><tr><td align="center">遇到的角色（包括敌人）</td><td align="center">玩家在这部分游戏中会遇到哪些角色？</td></tr><tr><td align="center">遇到的物体</td><td align="center">在这部分游戏中可以找到哪些物品？所有产经相关物品都要在此处列出，以及任何提供叙事的物品</td></tr><tr><td align="center">需要的其他资产</td><td align="center">指完成游戏的这一部分所需的视觉艺术、动画、音频和触觉（控制器震动）设计元素</td></tr><tr><td align="center">音频笔记</td><td align="center">该部分游戏内容所需的所有声音设计</td></tr><tr><td align="center">视觉效果笔记</td><td align="center">该部分游戏内容的主要视觉效果</td></tr></tbody></table><h4 id="玩家目标、设计目标、情绪节拍"><a href="#玩家目标、设计目标、情绪节拍" class="headerlink" title="玩家目标、设计目标、情绪节拍"></a>玩家目标、设计目标、情绪节拍</h4><ul><li><code>玩家目标</code></li></ul><p>当有人玩游戏时，他们会根据游戏告诉他们的信息、他们想做的事情、他们对游戏运作方式的理解以及他们在其他类似游戏中的经历为自己设定目标。这种自我目标设定的过程被 Mihaly Csikszentmihalyi 描述为“自我意识”。</p><p>游戏每个部分的玩家目标是持有控制器的玩家想要做的事情或认为他们应该做的事情。</p><p>书籍推荐：《游戏设计要则探秘》</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/26317407">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s27999386.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s27999386.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏设计要则探秘（全彩）</strong></div>            <div class="douban-card-item"><span>作者: </span><span>【美】AnnaAnthropy(安娜.安托弗),NaomiClark（娜奥米.克拉克）</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2015-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.6</span></div>        </div>    </a></div><p>作为设计师，你的工作是在玩家设定目标时指导他们的体验。</p><ul><li><code>设计目标</code></li></ul><p>游戏设计师通常希望通过游戏的一部分来实现其他目标，而不仅仅是让玩家设定他们的目标。或是教给玩家一些东西，或是设置一个谜题，或是想在游戏故事中引入一个新的角色…</p><ul><li><code>情绪节拍</code></li></ul><p>当玩家玩游戏的一部分时，他们对那部分会产生主观的体验。游戏中等等每一刻都可能让玩家感到高兴或兴奋、孤独或悲伤，或者Robert Plutchik博士的<code>情绪之轮</code>中显示的任何内容。</p><p>“生活的偶然性会产生情感的高度和深度，但在一部优秀的电影或游戏结束时获得的巨大情感回报并不是偶然发生的：电影制作人或设计师已经把你带到了那里。”</p><p>我们将目光投向作为项目目标的持久情感体验，它是由对比情绪的模式组成。人们常常忽略：为了讲述一个关于一种情绪的故事，你必须使用多种情绪。一个悲伤的故事不能全是悲伤的：如果我们没有一路经历一些快乐，我们就不会深刻地感受到悲伤。</p><p>在游戏设计宏观方案中，“情绪节拍”一栏描述了设计师希望玩家在游戏中的那个时刻产生的感受。</p><p>“我们每个人都以自己的方式对艺术品做出情感反应。艺术家塑造的情感的可能性和模糊性是艺术伟大的一部分。”</p><h4 id="游戏设计宏观方案的优势"><a href="#游戏设计宏观方案的优势" class="headerlink" title="游戏设计宏观方案的优势"></a>游戏设计宏观方案的优势</h4><p>撰写游戏设计宏观方案而不是冗长的游戏设计文档有两个主要优点：</p><ul><li>传达游戏设计理念</li><li>协助项目全制作阶段的时间调度</li></ul><h3 id="编写游戏设计宏观图表"><a href="#编写游戏设计宏观图表" class="headerlink" title="编写游戏设计宏观图表"></a>编写游戏设计宏观图表</h3><blockquote><p>《神秘海域2：纵横四海》游戏设计宏观图表部分</p></blockquote><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_19233505227973.jpeg" alt="Alt text"></p><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_19243855538750.jpeg" alt="Alt text"></p><h4 id="宏观图表的颗粒度"><a href="#宏观图表的颗粒度" class="headerlink" title="宏观图表的颗粒度"></a>宏观图表的颗粒度</h4><p>编写宏观图表时使用的一个好的经验法则是避免将太多不同的事件堆积到电子表格的同一行中。尽可能将离散事件拆分为宏观图表中的单独行。如果你发现自己在任何给定的单元格中写了一整段话，这可能表明该行应该分为两行或多行。</p><blockquote><p>“宏观设计应该保持高概念水平，并将更详细的信息留给故事脚本和设计文档等支持文档。”—— Brian Allgeier</p></blockquote><h4 id="对游戏设计宏观图表进行排序"><a href="#对游戏设计宏观图表进行排序" class="headerlink" title="对游戏设计宏观图表进行排序"></a>对游戏设计宏观图表进行排序</h4><ul><li>游戏事件顺序</li></ul><p>考虑游戏事件的顺序时，一个好的起点是介绍游戏机制的顺序以及玩家学习这些机制的方式。</p><p>设计师制作了连续设置序列，以随着时间的推移逐渐增加和降低游戏难度，制作游戏设计师经常使用的“上升锯齿”难度模式。</p><blockquote><p>“以比之前一个关卡结束时的难度略低一点的感知难度开始每个新的游戏关卡，并在每个关卡的过程中逐渐增加难度……这种锯齿形难度在游戏过程中创造了良好的节奏。”——《游戏设计基础》</p></blockquote><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/3529767">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s3792252.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s3792252.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏设计基础</strong></div>            <div class="douban-card-item"><span>作者: </span><span>ErnestAdams</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2009-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.3</span></div>        </div>    </a></div><ul><li>叙事时间顺序</li></ul><p><code>叙事</code>是以某种方式连接事件的一个报告，以从某处开始并在另一个地方结束的顺序呈现。它为你提供了一些与你将要做的事情有关的信息。</p><p>相比之下，<code>故事</code>是具有特别强连贯性的叙事序列，通常跟随一个或几个角色，并且这些角色所发生打的事情具有隐含的意义或主题。故事从有意义的地方开始，在更有意义的地方结束。总的来说，故事以叙事可能做不到的方式向你传达了一些东西。</p><p>故事是叙事的一个子集。叙事更松散，故事更具体。</p><ul><li>地点的顺序</li></ul><p><code>一个精心设计的关卡是一种将要，或者可能会发生在其中的事件的空间实体化。</code></p><p>考虑如何为游戏中的不同序列重复使用相同的地点可以帮助你高效地工作。</p><ul><li>序列中的对比和连续性</li></ul><p>在对游戏中的游戏玩法、叙事和地点进行排序时，请考虑对比和连续性。是的，你想要从一件事到另一件事的流程的连续性，但你还需要对比来创造能够吸引玩家兴趣的多样性。</p><p>书籍推荐：</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/30281412">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s32306857.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s32306857.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>以眼说话</strong></div>            <div class="douban-card-item"><span>作者: </span><span>［美］布鲁斯·布洛克（BruceA.Block）</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2019-6</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.7</span></div>        </div>    </a></div><h4 id="完成宏观图表"><a href="#完成宏观图表" class="headerlink" title="完成宏观图表"></a>完成宏观图表</h4><p>宏观图表应该包括游戏的每个部分，包括前端及其所有菜单和界面。这包括游戏的标题画面、团队的动画标志以及你想要包含的任何其他“入场动画”，以及展示你的发行商、创意合作伙伴、技术许可或大学部门名称。它包括暂停画面、选项画面、加载画面以及你想要包含的任何“游戏结束”画面。它还包括显示游戏开发人员名单的画面或序列。</p><h4 id="微观设计"><a href="#微观设计" class="headerlink" title="微观设计"></a>微观设计</h4><p>微观设计通常通过从宏观方案中提取一行并将其拓展为关卡布局、物体放置、敌人描述和行为、谜题设计和叙事机制的细节。</p><h4 id="非线性游戏和游戏设计宏观图表"><a href="#非线性游戏和游戏设计宏观图表" class="headerlink" title="非线性游戏和游戏设计宏观图表"></a>非线性游戏和游戏设计宏观图表</h4><p>将宏观图表分成两个部分：</p><ul><li>游戏机制列表和与之交互的对象</li><li>地点列表和这些地点包含的对象</li></ul><p>如何关联宏观图表的这两个部分将反映当玩家获得某些能力是世界向玩家开放的方式。</p><p>在任何关卡的布局发生之前，所有的能力都需要详细设计。</p><h3 id="排期"><a href="#排期" class="headerlink" title="排期"></a>排期</h3><h4 id="我们需要多少人时来制作游戏"><a href="#我们需要多少人时来制作游戏" class="headerlink" title="我们需要多少人时来制作游戏"></a>我们需要多少人时来制作游戏</h4><p>游戏开发者可用的核心资源是<code>人时</code>。这是衡量一个人全神贯注地制作游戏的一个单位。</p><p><code>T(Time)=NxPxW</code></p><ul><li>N&#x3D;团队成员人数</li><li>P&#x3D;每个团队成员平均每周工作的小时数</li><li>W&#x3D;预制作结束与全面制作结束之间的周数</li></ul><h4 id="每个任务的简单排期信息"><a href="#每个任务的简单排期信息" class="headerlink" title="每个任务的简单排期信息"></a>每个任务的简单排期信息</h4><ul><li>优先级<ul><li>第一优先级：你的游戏在任何情况下都绝对不可或缺的内容</li><li>第二优先级：游戏需要但你可能会从中进行一些削减的东西</li><li>第三优先级：有最好，但并不是绝对需要的</li></ul></li><li>预估小时数<ul><li>在预估小时数下，将自己限制为以下数字：1、2、4和8</li></ul></li><li>分配的团队成员<ul><li>根据谁拥有完成对应工作的技能来分配，同时还要考虑谁对制作游戏的哪个部分感兴趣</li></ul></li></ul><h4 id="燃尽图"><a href="#燃尽图" class="headerlink" title="燃尽图"></a>燃尽图</h4><p>Ken Schwaber 是一名软件开发人员和产品经理，他帮助制定了敏捷开发框架Scrum。Ken发明了燃尽图作为规划工具，以帮助Scrum团队预测他们的项目进程。</p><p>燃尽图创建了一个图形来表示：在游戏完成之前还需要完成的工作，你完成工作的平均速度，以及你是否会用完所需时间。</p><p>燃尽图通常包含两个部分：电子表格或图表，在其中输入有关项目任务的数据：信息图，我们可以在其中一目了然地看到自己是否有可能达到里程碑。</p><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_30239754127369.jpeg" alt="燃尽图电子表格示例"></p><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_30245619465076.jpeg" alt="燃尽图信息图示例"></p><p>书籍推荐：</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35100086">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s33667777.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s33667777.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏设计、原型与开发：基于Unity与C#从构思到实现（第2版）</strong></div>            <div class="douban-card-item"><span>作者: </span><span>【美】JeremyGibsonBond</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2020-6</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.1</span></div>        </div>    </a></div><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35484923">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s33989642.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/subject/s/public/s33989642.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏项目管理与敏捷方法（第2版）</strong></div>            <div class="douban-card-item"><span>作者: </span><span>{{author}}</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>{{publishDate}}</span></div>            <div class="douban-card-item"><span>评分: </span><span></span></div>        </div>    </a></div><h3 id="里程碑评审"><a href="#里程碑评审" class="headerlink" title="里程碑评审"></a>里程碑评审</h3><h4 id="何时运行里程碑评审"><a href="#何时运行里程碑评审" class="headerlink" title="何时运行里程碑评审"></a>何时运行里程碑评审</h4><p>里程碑评审主要发生在以下主要里程碑阶段：</p><ul><li>预制作结束</li><li>alpha里程碑</li><li>beta里程碑</li></ul><h4 id="里程碑评审流程"><a href="#里程碑评审流程" class="headerlink" title="里程碑评审流程"></a>里程碑评审流程</h4><ol><li>开发者简要介绍游戏并总结项目进展</li><li>在评审团面前进行游戏Demo展示或者游戏试玩</li><li>如果可以，评审小组地高级成员开始给予反馈</li><li>其他评审组成员参与并做记录，对游戏发表评论</li><li>评审结束后，游戏开发者感谢评审小组的反馈</li><li>在评审多个项目的场景中，例如季度商务会议或游戏开发课程，我们将继续进行下一个项目</li></ol><blockquote><p>一个好的点评说明了什么是错的、什么是缺失的、什么是不清楚的。什么是没有意义的。好的点评是及时的，不会拖到来不及解决问题。好的点评不会提出要求，它甚至不必提供对应的解决方案。如果提供了，则只是为了举例说明问题，而不是给出一个答案。不过，最重要的是，一个好的点评是明确切题的。 —— 《创新公司：皮克斯的启示》</p></blockquote><h3 id="预制作的交付物"><a href="#预制作的交付物" class="headerlink" title="预制作的交付物"></a>预制作的交付物</h3><p>预制作结束时将交付三大成果：<code>垂直切片</code>、<code>游戏设计宏观方案</code>和<code>进度表</code>。</p><p><img src="/../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_31788132635477.jpeg" alt="交付物摘要"></p><h2 id="第3阶段-全面制作"><a href="#第3阶段-全面制作" class="headerlink" title="第3阶段 全面制作"></a>第3阶段 全面制作</h2><h3 id="游戏应该按照什么顺序构建"><a href="#游戏应该按照什么顺序构建" class="headerlink" title="游戏应该按照什么顺序构建"></a>游戏应该按照什么顺序构建</h3><p>建议使用戏剧结构（actstructure）从大致均衡的四个部分来考虑你的游戏：</p><ol><li>第一幕：开端</li><li>第二幕上半场：中段</li><li>第二幕下半场：中段</li><li>第三幕：结尾</li></ol><p>然后按照这个顺序构建你的游戏：</p><ol><li>第二幕上半场</li><li>第一幕</li><li>第三幕</li><li>第二幕下半场</li></ol><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="300" data-limit="10">    <span class="gallery-data">[{"url":"../img/%E5%A6%99%E8%B6%A3%E6%A8%AA%E7%94%9F%E7%9A%84%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E4%B9%8B%E6%97%85/weread_image_164568475156138.jpeg","alt":"Alt text"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>先制作第一幕很少会成功，因为在游戏的开端有很多复杂的工作要做，要教玩家如何玩，还要设置游戏的叙事和基调。它必须非常出色，才能引起轰动并吸引新玩家。</p><h3 id="游戏感和多汁性"><a href="#游戏感和多汁性" class="headerlink" title="游戏感和多汁性"></a>游戏感和多汁性</h3><p>全面制作的开始是检查项目的游戏感和多汁性的好时机。</p><p>游戏感是“操控过程中的愉悦感、掌控感或者笨拙感，以及和虚拟物体交互的触感”。</p><p>打造良好游戏感的要素：</p><ul><li>实时操控</li><li>模拟空间</li><li>视听表现</li></ul><p>相关书籍推荐：《游戏感：游戏操控感和体验设计指南》</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35006358">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s33602314.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s33602314.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏感：游戏操控感和体验设计指南</strong></div>            <div class="douban-card-item"><span>作者: </span><span>SteveSwink（史蒂夫·斯温克）</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2020-4</span></div>            <div class="douban-card-item"><span>评分: </span><span>6.6</span></div>        </div>    </a></div><p>多汁性是“持续而丰富的用户反馈”。</p><p>多汁性通过动画、声音设计、视觉效果和交互设计表现出来，为玩家创造了丰富的体验。</p><p>同心开发有助于在我们的游戏中提升良好的游戏感和多汁性，让我们在进行过程中关注实施的细节。</p><h3 id="游戏测试"><a href="#游戏测试" class="headerlink" title="游戏测试"></a>游戏测试</h3><p>待填坑…</p><h3 id="alpha阶段和缺陷跟踪"><a href="#alpha阶段和缺陷跟踪" class="headerlink" title="alpha阶段和缺陷跟踪"></a>alpha阶段和缺陷跟踪</h3><h4 id="一种简单的缺陷跟踪方法"><a href="#一种简单的缺陷跟踪方法" class="headerlink" title="一种简单的缺陷跟踪方法"></a>一种简单的缺陷跟踪方法</h4><p>关于为游戏制定测试计划的详细技术建议：<a href="https://www.gamedeveloper.com/programming/testing-for-game-development">《游戏开发测试》</a></p><p>对于小型项目，只需使用电子表格来跟踪缺陷。表格列包含：</p><ul><li>缺陷编号</li><li>提交日期和时间</li><li>版本日期和时间（或版本编号）</li><li>概括</li><li>严重程度</li><li>优先级</li><li>类别</li><li>描述</li><li>游戏中的位置</li><li>重现性</li><li>重现步骤</li><li>涉及脚本</li><li>负责人</li><li>当前状态</li><li>附件</li><li>备注</li><li>解决说明</li></ul><h4 id="alpha-里程碑"><a href="#alpha-里程碑" class="headerlink" title="alpha 里程碑"></a>alpha 里程碑</h4><p>到达alpha 里程碑，游戏具备了“特性完备性”，即游戏中的每个功能特性都已存在。</p><ul><li><code>特性和内容</code></li></ul><p>一般来说，特性是游戏运行能力的一部分，是使我们的游戏运转起来的机制。如果游戏中的某些部分由逻辑控制对玩家的输入做出反应，那么它很可能就是一个特性。</p><p>与之相对的，内容是构成游戏实体的数据结构和资源，游戏中的特性被大量数据捆绑在一起，作用于如下这些游戏实体：美术、动画、声音效果、视觉效果、音乐和对话等。</p><ul><li><code>特性完备</code><ul><li>游戏的所有特性都应该以某种形式存在。</li><li>在一个强大的alpha里程碑里，每个独特或有隐患的特性组合都应该已就位。</li></ul></li></ul><p>做好alpha的部分技巧：选择实现的内容，应该能展示游戏中所有事物可能展示的行为。这些行为是游戏的特性，在alpha阶段获得所有特性，特别是在你还有时间改进时，是制作出色游戏的另一个关键。</p><p>alpha里程碑的部分意义在于，我们正试图加快速度，并且不想遗漏预期游戏功能的所有重大发现。</p><ul><li><p><code>游戏序列完备</code></p><ul><li>如果游戏有关卡，则它们都应该至少具有阻挡墙占位美术资源和碰撞几何图形，以便于了解整个游戏的大小和范围。</li><li>前端、菜单和界面（包括标志屏幕、开始屏幕、选项屏幕、暂停屏幕和保存&#x2F;读取屏幕）应就位，至少包含占位美术资源和音频内容。</li><li>任何过场动画的临时版本或基本内容版本都应该就位。</li><li>一切都应该在逻辑上连接在一起，我们应该能够以连续的方式在游戏的每个部分之间试现和穿梭。</li></ul></li><li><p><code>alpha 的范围界定</code></p></li></ul><p>当我们在这里谈论范围时，谈论的是特性和内容。实际上有两种范围被纳入考虑：</p><ol><li>游戏的“可能性空间”，即游戏运行时可能发生的所有不同事件的抽象空间</li><li>游戏的“内容足迹”，即游戏的内容的数量。</li></ol><p>游戏的可能性空间包含好的和坏的东西：有趣的游戏玩法，精彩的紧急情况和有趣的策略，以及游戏设计问题、内容问题和错误。</p><p>即使游戏序列的某系的部分仅使用阻挡墙和其他占位资源，也要在alpha阶段构建具有所有特性和完整游戏序列的游戏。</p><h4 id="alpha里程碑评审"><a href="#alpha里程碑评审" class="headerlink" title="alpha里程碑评审"></a>alpha里程碑评审</h4><p>开发团队应该准备好陈述以下内容：</p><ul><li>谁是游戏的受众</li><li>项目处在alpha阶段的什么位置<ul><li>游戏在alpha阶段表现强劲，并且正在进入beta阶段，其基本版本中的内容完全代表了游戏的特性部分。</li><li>游戏在alpha阶段已进行了测试，并且完全满足alpha阶段的要求，其基本版本中的内容代表了游戏的特性部分。</li><li>游戏已进入alpha阶段，但基本版本中的很多内容不能完全代表游戏的特性部分。</li><li>游戏还没有处于alpha阶段，要说明什么样的缺失导致游戏无法进入alpha阶段。</li></ul></li><li>项目是否存在任何已知问题</li><li>从里程碑评审小组收到的哪些反馈建议是有用的</li></ul><h3 id="把内容以存根形式放入游戏"><a href="#把内容以存根形式放入游戏" class="headerlink" title="把内容以存根形式放入游戏"></a>把内容以存根形式放入游戏</h3><h4 id="什么是存根"><a href="#什么是存根" class="headerlink" title="什么是存根"></a>什么是存根</h4><p>存根是指一小段内容或代码，代表稍后将完成的内容。</p><p>程序员在编写函数和方法时，通常会先创建存根。存根函数的名称就是最终完成时的正确名称，并且可以被代码的其他部分调用，但它只包含一个简单的占位符：也许只是在“伪代码”中描述函数最终会做什么的注释，或者是在调试控制台中确认存根函数已成功调用的输出语句。</p><h4 id="电子游戏中的存根"><a href="#电子游戏中的存根" class="headerlink" title="电子游戏中的存根"></a>电子游戏中的存根</h4><p>白盒、灰盒或阻挡墙等临时对象资源设计。</p><p>（在工作时，建议在对象中添加一个简短的“自述文件”，说明一下哪些设计决策很重要，应该保留在完成的对象中。）</p><h4 id="存根的特性"><a href="#存根的特性" class="headerlink" title="存根的特性"></a>存根的特性</h4><p>一个存根应该具有多少特性？</p><p>尽可能多，只要你能够管理，但不能超出你可以快速创建的东西这一范围。</p><h3 id="beta里程碑"><a href="#beta里程碑" class="headerlink" title="beta里程碑"></a>beta里程碑</h3><h4 id="达到beta里程碑所需条件"><a href="#达到beta里程碑所需条件" class="headerlink" title="达到beta里程碑所需条件"></a>达到beta里程碑所需条件</h4><p>在beta里程碑时，游戏中的所有特性和内容，包括所有美工、动画、音频效果、音乐、视觉效果和触觉效果，全部应该到位，并至少到第一次质检合格的完善水准。</p><p>如果要在游戏中放置彩蛋，那么，它们必须在beta版本中出现，并且应该将彩蛋的存在通知团队的领导和QA部门。</p><h4 id="beta里程碑小结"><a href="#beta里程碑小结" class="headerlink" title="beta里程碑小结"></a>beta里程碑小结</h4><ul><li>游戏的所有特性和内容至少应以第一次质检合格的可发布形式呈现</li><li>所有前端、菜单和界面元素都应至少第一次质检合格的可发布形态呈现，可能包括但不限于以下内容：<ul><li>开发团队&#x2F;游戏工作室的标志图片或视频</li><li>发行商的标志图片或视频</li><li>标题屏幕</li><li>游戏制作人员名单屏幕或序列</li><li>第三方资产的所有权信息</li><li>“GAME OVER”屏幕，宣布一轮游戏结束</li><li>一个或多个选项屏幕，允许玩家自定义游戏选项</li></ul></li><li>APP或可执行文件的各种分辨率的图标图像以及配套标题文本</li><li>对于使用游戏启动器的游戏，需要制作启动画面</li><li>游戏在线商店展示所需的文字和图片</li><li>成就系统和相关内容</li><li>计划在游戏中放入的彩蛋</li><li>如果游戏必须通过认证流程才能发布，开发者应尽可能完成认证要求</li></ul><p>此外，在beta里程碑阶段，必须制定可行的计划来解决以下问题：</p><ul><li>任何突出的设计问题</li><li>任何性能问题</li><li>突出的缺陷</li></ul><h4 id="beta里程碑评审"><a href="#beta里程碑评审" class="headerlink" title="beta里程碑评审"></a>beta里程碑评审</h4><p>在评审会议的简短介绍性演示中，开发团队应该准备好陈述：</p><ul><li>谁是游戏的受众</li><li>项目在beta阶段处于什么位置。例如：<ul><li>beta里程碑版本表现强劲，完全做到了内容完整，游戏没有缺陷且游戏玩法平衡</li><li>刚好到达了beta里程碑，正好符合beta里程碑的要求，内容完整。有一些内容需要打磨，有一些缺陷需要修复，游戏平衡需要调整。</li><li>到达了beta里程碑，但很多内容需要打磨，有很多缺陷需要修复，游戏玩法需要进行大量平衡调整</li><li>还没有达到beta里程碑，此时应该说明缺少什么而无法达到beta里程碑</li></ul></li><li>项目是否存在任何已知问题</li><li>从里程碑评审小组收到什么样的反馈会有用</li></ul><h2 id="第4阶段-后制作"><a href="#第4阶段-后制作" class="headerlink" title="第4阶段 后制作"></a>第4阶段 后制作</h2><p>这个阶段的名称，是对影视制作的后期制作过程的一种致敬。</p><p>建议至少将项目<code>总时间的20%</code>用于后制作。</p><h3 id="后制作流程"><a href="#后制作流程" class="headerlink" title="后制作流程"></a>后制作流程</h3><h4 id="缺陷修复"><a href="#缺陷修复" class="headerlink" title="缺陷修复"></a>缺陷修复</h4><p>在后制作过程中，你要以“医疗紧急情况下的分诊态度”处理你缺陷修复。对于那些涉及面更大、风险更高的修复，你需要提供其优先级，并首先解决它们。</p><h4 id="润色"><a href="#润色" class="headerlink" title="润色"></a>润色</h4><p>游戏达到beta里程碑后，可以通过一些小改动来润色一些内容，以改善游戏的外观、声音和感觉。</p><h4 id="平衡"><a href="#平衡" class="headerlink" title="平衡"></a>平衡</h4><blockquote><p>平衡：描述游戏系统状态的术语，常用评价为“平衡”或“不平衡”。当说某个游戏不平衡时，通常是因为玩起来太容易、太困难，或仅对某些玩家群体来说是最佳的。当游戏平衡时，表示所有目标受众面对的挑战是基本一致的。对于多人对战类游戏，平衡还包括这样的含义：没有一种策略天生就比其他策略更好，并且不应存在可以绕过游戏挑战的漏洞。我们有时也称各个游戏元素彼此“平衡”，这意味着获得这些元素的代价与其能发挥的作用成正比，就像CCG中的卡牌或FPS&#x2F;RPG中的武器一样。—— 《Challenges for Game Designers: Non- Digital Exercises for Video Game Designers》</p></blockquote><p>游戏平衡主要是确定在游戏中使用哪些参数，而这些参数的作用是描述游戏状态。</p><p>相关书籍推荐：</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35460994">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s33895655.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s33895655.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏设计艺术（第3版）</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[美]JesseSchell</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2021-5-7</span></div>            <div class="douban-card-item"><span>评分: </span><span>9.1</span></div>        </div>    </a></div><h4 id="视角的流动性"><a href="#视角的流动性" class="headerlink" title="视角的流动性"></a>视角的流动性</h4><p>不同的视角伴随着不同的模式、优先事项、价值观和思维方式。</p><p>作为游戏设计师考虑视角的流动性时，建议考虑：</p><ul><li>玩家对游戏的看法</li><li>设计师对整个游戏或部分游戏的宏观看法</li><li>设计师对游戏某些细节的微观观察</li><li>玩家角色对游戏所处的虚构世界的看法</li><li>游戏中其他角色对游戏世界的看法</li><li>开发团队的特定专业职能对游戏的看法</li><li>其他将会从事与当前游戏有关的工作的专业人士对游戏的看法。例如，负责游戏营销的人员和社区经理</li></ul><h3 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h3><p>如果我们正在为索尼、微软或任天堂等公司所属平台的硬件制作游戏，或者准备在苹果生态系统的移动平台上发布游戏，游戏在发布前需要通过一个认证流程。其包括如下内容：</p><ul><li>技术要求指明游戏如何使用平台的硬件或软件库，包括对屏幕分辨率和刷新率、磁盘或驱动器访问速度及如何调用处理器</li><li>质量控制要求游戏必须是零缺陷且具有良好界面可用性</li><li>安全性指防止游戏被复制和保护用户隐私的机制</li><li>限定是否允许某些图像、声音和主题，以及游戏如何处理多语言</li><li>成就等游戏玩法系统的实现，必须符合特定标准和惯例</li><li>如何使用品牌标明和修改公司与游戏的标志，包括与游戏控制器相关的图像</li><li>在平台所有者的在线商店中销售游戏所需的资产，如文本、图像、视频短片和图标</li><li>内容分级</li><li>本地化要求，取决于游戏将在世界的哪个地方发布</li><li>定价</li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Miyoo mini的折腾日记</title>
      <link href="/post/7e1523.html"/>
      <url>/post/7e1523.html</url>
      
        <content type="html"><![CDATA[<p>去年7月份的时候，在机核网上看到一篇关于 Miyoo mini 的掌机介绍，顿时起了兴趣立马下单了一台。迷你小巧的机身，搭配海量的街机游戏以及部分复古掌机，让人爱不释手。外观设计也深得我心。</p><p><img src="/../img/Miyoo%20mini%20%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/1684116970260.png" alt="Alt text"></p><p>不过由于工作原因，一直都没怎么玩，直到…我女朋友把它给折腾坏了。起因是因为她有一部很想玩的游戏，名叫《黄昏症候群》；是一部ps1平台的主机游戏，刚好这部掌机也支持该平台的模拟器。于是她自己捣鼓，结果游戏没装好，还把主机里面自带大部分游戏给弄丢了。</p><p>趁着这段时间我刚好有空，就试着深入了解了一下这部掌机以及如何自己安装游戏。</p><h2 id="Miyoo-mini-刷机"><a href="#Miyoo-mini-刷机" class="headerlink" title="Miyoo mini 刷机"></a>Miyoo mini 刷机</h2><p>目标：将掌机还原至出厂设置，即游戏未丢失前。</p><p>分析：机子自带的还原出厂设置无效，电脑读取内存卡时，发现部分内容丢失,需要找到备份文件进行还原。</p><p>操作：</p><ul><li><a href="https://www.lomiyoo.com/gujianxiazai.html">官网固件下载</a>，选择 <code>mini0419中文包</code>，下载并解压至本地</li><li>拔出掌机内存卡，并用读卡器连接电脑后，将其格式化</li><li>复制解压包全部内容至内存卡内</li><li>将内存卡插回掌机，开机后于主界面点击 <code>MENU</code> 按钮，选择 <code>刷新ROM</code></li></ul><p>至此，掌机还原至出厂状态，并包含全部自带游戏内容。</p><h2 id="游戏安装"><a href="#游戏安装" class="headerlink" title="游戏安装"></a>游戏安装</h2><h3 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h3><p>由于是比较古老的游戏资源了，在例如3dm等游戏破解资源网站上都难以找寻，且资源零散或不可用。最后在 <a href="https://tieba.baidu.com/p/7155802788?fid=10630005&pid=137076683271#137076683271">黄昏症候群吧</a> 找到齐全的文件资源。果然术业有专攻，感谢吧里喜爱着这个游戏的各位，以及提供的该游戏全部相关资料！</p><p>资源下载解压后，得到包含 <code>.bin</code> 和 <code>.cue</code> 的如下两个文件：<br><img src="/../img/Miyoo%20mini%20%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/1684114153165.png" alt="Alt text"></p><p>看着不太像能在掌机上运行的文件格式，于是打开掌机内存卡的对应的游戏存放文件夹，发现ps平台对应的游戏运行文件格式为 <code>.PBP</code>:<br><img src="/../img/Miyoo%20mini%20%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/1684114514519.png" alt="Alt text"></p><p>于是百度一下：</p><ul><li><code>.bin 和 .cue </code>：BIN和CUE文件是成对的，是光盘镜像文件，需要你的电脑上安装虚拟光驱软件，然后在把BIN&#x2F;CUE文件挂载到虚拟光驱里，就可以看到镜像文件里面的内容了。</li><li><code>.PBP</code> ：bpb是psp的游戏文件格式。</li></ul><p>所以想要在掌机的虚拟平台上运行下载好的资源，还需要一步文件格式转换。</p><p>*注：Miyoo mini是否支持 <code>.bin</code> 文件的直接运行，本人还未尝试过。只是倾向于和官方文件保持一致。</p><h3 id="资源转换"><a href="#资源转换" class="headerlink" title="资源转换"></a>资源转换</h3><p>目前网上普遍用到的转换软件为 <code>PSX2PSP</code></p><ul><li><p>官网：<a href="https://www.cfwaifu.com/psx2psp/">https://www.cfwaifu.com/psx2psp/</a> ，下载运行后弹窗报错，原因未知，pass</p></li><li><p>三方：<a href="http://9ioldgame.com/software/PSX2PSP.html">http://9ioldgame.com/software/PSX2PSP.html</a> ，成功运行，不错！</p></li><li><p>GitHub：<a href="https://github.com/RupertAvery/PSXPackager">https://github.com/RupertAvery/PSXPackager</a> ，意外搜到的一个软件，看着应该不错，可惜没能成功运行，懒得进一步折腾，pass</p></li></ul><p>转换完成后得到文件：<br><img src="/../img/Miyoo%20mini%20%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/1684115677247.png" alt="Alt text"></p><h3 id="资源安装"><a href="#资源安装" class="headerlink" title="资源安装"></a>资源安装</h3><p>复制对应文件至内存卡 <code>\Roms\PS</code> , 执行操作 <code>刷新ROM</code> 后即可看到对应游戏，并能成功运行！</p><p><img src="/../img/Miyoo%20mini%20%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/1684116854945.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数码产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年度个人总结</title>
      <link href="/post/87fa10bf.html"/>
      <url>/post/87fa10bf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>无所作为，则人生太长；欲有所为，则人生太短。</p></blockquote><p>这是一篇迟来的年度总结，每每提笔之时，内心便五味杂陈。</p><p>原本想着尽情宣泄过去一年中遭遇的种种不满，只是转念一想，生活哪有一帆风顺的，这里免去吐槽，细数收获，为下一年的计划开展努力准备着。</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>应前辈的邀约，我从上家公司离职去往他所主导的项目组。起初如他和我所想的一样，项目在不断地迭代中开始变得越来越好，而我也当上“主策”，在职业的道路上顺利的上升了一个台阶。只是自下半年各种人事变动后，项目一波三折，最终草草收场。</p><p>在这一年的工作中，我开始明白：</p><ul><li>你必须清楚且坚定项目的方向，这是游戏是否能做出来的关键点。</li><li>行动本身比行动计划更重要，东西只有做出来，让别人看得见摸得着，它才是有意义的。</li><li>所谓规范，需因团队而异，因事情而行。一味的主张合乎规范，犹如给他人套上枷锁。</li><li>在游戏这个行业，经验是永远不够用的，需要与时俱进地不断学习，才能帮助团队全力以赴。</li></ul><p>我学会了：</p><ul><li>战斗系统相关的底层设计</li><li>结构化的拆解游戏底层系统</li><li>项目研发的不同阶段所需的不同标准</li><li>游戏商业化的设计实现</li><li>项目研发管理的新方式（故事结构、燃尽图）</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="一只叫“讯号”的小猫"><a href="#一只叫“讯号”的小猫" class="headerlink" title="一只叫“讯号”的小猫"></a>一只叫“讯号”的小猫</h3><p>今年最大的收获是我终于有猫了！它叫“讯号”，是我领养的一只漂亮且乖巧的长毛大狸花。我和女朋友都非常地喜欢它。</p><p>2022&#x2F;06&#x2F;05，下午刚下完小雨，天气阴凉。在住处附近的一家宠物医院，从救助人手里接过了小讯号。刚开始的体检一切顺利，正准备回家时，它却突然尿血而不得不住院治疗，紧张的同时稍微松了口气，还好发现及时，后面几天的治疗一切顺利。虽然前后断断续续花了好久才得以痊愈，但那段时间真的挺开心的，家庭成员从此多了一位毛茸茸的小家伙，就真的挺治愈的。</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="400" data-limit="10">    <span class="gallery-data">[{"url":"../img/2022%E5%B9%B4%E5%BA%A6%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/1687341751985.png","alt":"第一次到家的小讯号，看上去很凶，但其实是个粘人的小猫猫"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><table><thead><tr><th align="center">游戏</th><th align="center">进度</th><th align="center">心得概要</th></tr></thead><tbody><tr><td align="center">《艾尔登法环》</td><td align="center">一周目通关</td><td align="center">年度最佳游戏！开放世界的设计不算优秀，但装备·技能·道具的战斗乘法组合，使得玩法方式千变万化，内容大有可玩~ 故事和美术设定也十分精彩。</td></tr><tr><td align="center">《异度之刃3》</td><td align="center">未通关</td><td align="center">完全是冲着2代的情怀买的，听说故事和音乐一如既往的很棒，但是前期节奏比较拖沓（也许是我比较沉不下心去享受），且角色设定也没有2代那么吸引人，放下就很难再拿起来玩了。</td></tr><tr><td align="center">《猎天使魔女3》</td><td align="center">未通关</td><td align="center">很不错的动作游戏呢，只是连续高强度的战斗操作还是会让人有些吃不消，抽个空补完。</td></tr><tr><td align="center">《HELLDIVERS》</td><td align="center">587h</td><td align="center">工作需要，也确实好玩，但门槛很高，需要朋友。</td></tr></tbody></table><p>今年游戏玩的不多，也没有深入的分析。后面还是要养成良好的习惯，定期分析和总结。</p><h3 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h3><ul><li>《赛博朋克：边缘行者》</li></ul><p>游戏《赛博朋克2077》的定制剧，扳机社制作。一开始并未抱着很高的期待观看，毕竟该游戏的市场表现在前。然而，画面表现水准和剧情节奏意外地很棒，看完后久久让人回味，播出后也给游戏带来了一波不小的热度。算是今年看过的个人最喜欢的一部作品了。</p><div class="douban-card-block">    <a class="douban-card" href="https://movie.douban.com/subject/35118256">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2877118797.jpg');"></div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2877118797.jpg');"></div>            <div class="douban-card-status">灯影绰约</div>        </div>        <div class="douban-card-right">            <div class="douban-card-item"><span>电影名: </span><strong>赛博朋克：边缘行者Cyberpunk:Edgerunners(2022)</strong></div>            <div class="douban-card-item"><span>导演: </span><span>今石洋之</span></div>            <div class="douban-card-item"><span>主演: </span><span>大桥贤一郎/悠木碧</span></div>            <div class="douban-card-item"><span>上映时间: </span><span>2022-09-13(美国/日本)</span></div>            <div class="douban-card-item"><span>评分: </span><span>9.0</span></div>        </div>    </a></div><ul><li>《万神殿 第一季》</li></ul><p>故事里的一些设定即科幻又现实，十分吸引眼球。故事本身又具备遐想和哲学讨论的空间，属于创意型的剧作了。这类作品相较边缘行者而言，比较挑人，个人还是非常喜欢的。</p><div class="douban-card-block">    <a class="douban-card" href="https://movie.douban.com/subject/34990593">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2878569702.jpg');"></div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2878569702.jpg');"></div>            <div class="douban-card-status">灯影绰约</div>        </div>        <div class="douban-card-right">            <div class="douban-card-item"><span>电影名: </span><strong>万神殿第一季PantheonSeason1(2022)</strong></div>            <div class="douban-card-item"><span>导演: </span><span>梅尔基奥尔·祖耶/DavidDwoomanWoo</span></div>            <div class="douban-card-item"><span>主演: </span><span>凯蒂·张/保罗·达诺</span></div>            <div class="douban-card-item"><span>上映时间: </span><span>2022-09-01(美国)</span></div>            <div class="douban-card-item"><span>评分: </span><span>8.8</span></div>        </div>    </a></div><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><p>今年看完了：</p><ul><li>《游戏设计艺术》</li></ul><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/26791007">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s28710350.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s28710350.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>游戏设计艺术（第2版）</strong></div>            <div class="douban-card-item"><span>作者: </span><span>【美】JesseSchell（杰西•谢尔）</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2016-4-1</span></div>            <div class="douban-card-item"><span>评分: </span><span>9.2</span></div>        </div>    </a></div><ul><li>《任天堂的体验设计》</li></ul><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/35643201">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s34128486.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/subject/s/public/s34128486.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>任天堂的体验设计</strong></div>            <div class="douban-card-item"><span>作者: </span><span>玉树真一郎</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2021-9</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.6</span></div>        </div>    </a></div><p>今年的工作任务繁重，都没多少精力和时间完整看完一本书。这两本还是勉强抽空看完的（cry，对于游戏设计这一块的提升帮助还是有的。后面需要找个时间补上读书笔记，巩固一下知识点…这里先挖个坑，择日再填。</p><h3 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h3><p>今年去了：</p><ul><li>浙江·宁波</li></ul><p>✨ 开启一份新工作前的温泉之旅</p><ul><li>江苏·苏州</li><li>江苏·杭州</li></ul><p>✨ 陪姥姥和姥爷第一次在上海周边游玩</p><h2 id="2023年目标"><a href="#2023年目标" class="headerlink" title="2023年目标"></a>2023年目标</h2><ul><li><input disabled="" type="checkbox"> 读完至少<code>两本</code>游戏设计相关<code>书籍</code>，并记录相关笔记</li><li><input disabled="" type="checkbox"> 完整拆解至少<code>一款</code>游戏的玩法<code>设计</code>，包含年度最佳游戏</li><li><input disabled="" type="checkbox"> 熟练掌握UE5，并至少做出<code>一个玩法原型</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT的私有化部署</title>
      <link href="/post/c60760e2.html"/>
      <url>/post/c60760e2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近由于OpenAI对账号使用的监察收紧，只是以挂代理的方式，使用网页版GPT容易频繁掉线或是直接无权访问无法登录，能够使用的代理IP也十分局限，用着十分糟心。而以API的形式使用又涉及到付费问题，国内信用卡无法直接使用。所以在此基础上想着能否找到一个私有化部署Web版GPT的解决方案。</p></blockquote><h2 id="Pandora"><a href="#Pandora" class="headerlink" title="Pandora"></a>Pandora</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="https://github.com/pengzhile/pandora">潘多拉 (Pandora)</a>，一个不只是命令行的 ChatGPT。</p><p>潘多拉实现了网页版 ChatGPT 的主要操作。后端优化，绕过 Cloudflare，速度喜人。</p><p>优点：</p><ul><li>高峰期能绕过官方限制，继续使用。</li><li>应答速度直逼<code>PLUS</code>，白嫖用户的福音。</li><li>官方故障的时候，它可能还是能跑。</li><li>多模式：网页&#x2F;命令行&#x2F;API，私有化部署。</li><li>不会像官方那样无故断线、报错。</li></ul><h3 id="安装与运行"><a href="#安装与运行" class="headerlink" title="安装与运行"></a>安装与运行</h3><p>如果你恰好有一台国外的服务器，那么直接docker运行：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull pengzhile/pandora</span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -it --<span class="built_in">rm</span> --name pandora -p 6000:6000 -e PANDORA_SERVER=0.0.0.0:6000 pengzhile/pandora </span></span><br></pre></td></tr></table></figure><p>其中关于<code>-e</code>的环境变量参考官方说明进行使用配置</p><ul><li><code>PANDORA_ACCESS_TOKEN</code> 指定<code>Access Token</code>字符串。</li><li><code>PANDORA_TOKENS_FILE</code> 指定一个存放多<code>Access Token</code>的文件路径。</li><li><code>PANDORA_PROXY</code> 指定代理，格式：<code>protocol://user:pass@ip:port</code>。</li><li><code>PANDORA_SERVER</code> 以<code>http</code>服务方式启动，格式：<code>ip:port</code>。</li><li><code>PANDORA_API</code> 使用<code>gpt-3.5-turboAPI</code>请求，你可能需要向OpenAI支付费用。</li><li><code>PANDORA_SENTRY</code> 启用<code>sentry</code>框架来发送错误报告供作者查错，敏感信息不会被发送。</li><li><code>PANDORA_VERBOSE</code> 显示调试信息，且出错时打印异常堆栈信息，供查错使用。</li></ul><p>安装完成后，就可以用过你指定的<code>http://ip:port</code>来访问一个极简版的 ChatGPT 了。因为是国外的服务器，所以也无需代理了。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>个人在自己的服务器进行配置的时候遇到一个问题：安装运行完成后，无法直接通过<code>ip:端口</code>的形式进行访问，而通过Nginx以域名的形式进行反向代理后可以正常访问。推测是和容器<code>http</code>服务形式有关，暂未细察，先留个坑。</p>]]></content>
      
      
      <categories>
          
          <category> AI工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Watchtower的安装与使用</title>
      <link href="/post/5301354c.html"/>
      <url>/post/5301354c.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Watchtower是一个Docker容器，可以自动更新您的Docker映像。使用Watchtower可以确保您的容器始终运行最新版本的映像。</p><h2 id="安装Watchtower"><a href="#安装Watchtower" class="headerlink" title="安装Watchtower"></a>安装Watchtower</h2><p>您可以使用Docker命令从Docker Hub上安装Watchtower映像。在命令行中输入以下命令： </p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull containrrr/watchtower</span><br></pre></td></tr></table></figure><h2 id="运行Watchtower容器"><a href="#运行Watchtower容器" class="headerlink" title="运行Watchtower容器"></a>运行Watchtower容器</h2><p>要启动Watchtower容器，请在命令行中输入以下命令： </p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower</span></span><br></pre></td></tr></table></figure><p>这将在后台运行Watchtower容器，并将Docker守护程序的Unix套接字挂载到Watchtower容器中。</p><h2 id="设置Watchtower容器的参数"><a href="#设置Watchtower容器的参数" class="headerlink" title="设置Watchtower容器的参数"></a>设置Watchtower容器的参数</h2><p>在运行Watchtower容器之前，您可以设置一些参数来控制其行为。以下是一些常见的参数：</p><ul><li><code>--interval</code>：设置Watchtower检查更新的时间间隔，默认值为300秒。</li><li><code>--cleanup</code>：在更新容器时自动清理停止的容器和未使用的镜像。这对于释放磁盘空间很有用。  </li><li><code>--label-enable</code>: 启用基于标签的过滤器</li><li><code>--label</code>: 指定要监视的容器标签</li><li><code>--debug</code>：启用详细日志记录，以便进行故障排除。</li></ul><p>在命令行中，您可以通过以下方式设置这些参数：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --interval 60 --cleanup --debug</span></span><br></pre></td></tr></table></figure><p>这将以每60秒检查一次更新的间隔运行Watchtower容器，并在更新容器时自动清理停止的容器和未使用的镜像。  </p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name watchtower -v /var/run/docker.sock:/var/run/docker.sock -e WATCHTOWER_LABELS=my-container containrrr/watchtower</span></span><br></pre></td></tr></table></figure><p>使用标签过滤器监视名为 my-container 的容器</p><h2 id="配置要更新的容器"><a href="#配置要更新的容器" class="headerlink" title="配置要更新的容器"></a>配置要更新的容器</h2><p>Watchtower会自动监视所有正在运行的容器，并在新版本可用时自动更新它们。但是，如果您希望Watchtower只更新特定的容器，可以使用标签来指定要更新的容器。例如，以下命令将在启动容器时使用<code>com.centurylinklabs.watchtower.enable=true</code>标签：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> --name myapp -d -p 80:80 -e <span class="string">&quot;com.centurylinklabs.watchtower.enable=true&quot;</span> myapp:latest</span></span><br></pre></td></tr></table></figure><p>这将使Watchtower仅更新使用此标签的容器。</p><h2 id="检查更新"><a href="#检查更新" class="headerlink" title="检查更新"></a>检查更新</h2><p>Watchtower将在容器的映像发生更改时自动更新它们。您可以在容器日志中查看更新记录。要查看Watchtower容器的日志，请使用以下命令：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs watchtower</span><br></pre></td></tr></table></figure><p>如果您看到Watchtower输出的<code>Found new running container</code>消息，则表示Watchtower已更新一个容器。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MiniGames</title>
      <link href="/post/52d239e4.html"/>
      <url>/post/52d239e4.html</url>
      
        <content type="html"><![CDATA[<div class="tabs" id="1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1-1">Catch Cat</button></li><li class="tab"><button type="button" data-href="#1-2">MiniGames</button></li><li class="tab"><button type="button" data-href="#1-3">Downhill Ski</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1-1"><div class="aspect-ratio" >    <iframe src="https://ganlvtech.github.io/phaser-catch-the-cat/" scrolling="no" border="0" frameborder="0" framespacing="0" high_quality="1" danmaku="1" allowfullscreen=""></iframe></div><style>  .aspect-ratio {    position: relative;    width: 100%;    height: 0;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;  }  .aspect-ratio iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;  }  @media screen and (max-width:500px){    .aspect-ratio{        padding-bottom:100%;        position:relative!important;        overflow:hidden!important;        position:relative;        width:100%;        height:0;        margin:3% auto;        text-align:center    }    canvas{            width:570px!important;height:501px!important    }    iframe{            position:absolute;transform:scale(.6)!important;width:570px!important;height:570px!important;left:-120px!important;top:-100px!important    }  }</style><p><a class="btn-beautify block right outline" href="https://github.com/SadTomlzr/catch-cat"   title="项目地址"><span>项目地址</span></a>  </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-2"><div class="aspect-ratio" >    <iframe src="https://demonisblack.com/code/2022/minigames/game/" scrolling="no" border="0" frameborder="0" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="" loading="lazy"></iframe></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><div class="aspect-ratio" >    <iframe src="https://demonisblack.com/code/2022/downhillski/game/"scrolling="no" border="0" frameborder="0" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="" loading="lazy"></iframe></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>  ]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo网站的自动化部署</title>
      <link href="/post/65c2dc85.html"/>
      <url>/post/65c2dc85.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-GitHub-建站"><a href="#Hexo-GitHub-建站" class="headerlink" title="Hexo + GitHub 建站"></a>Hexo + GitHub 建站</h2><p>这个视频讲解的很明晰了，就不重复造轮子了。文字版 <a class="btn-beautify outline" href="https://www.jianshu.com/p/97dfbc8e79db"   title="点这里"><i class="far fa-hand-point-right"></i><span>点这里</span></a>  </p>  <a href="https://www.bilibili.com/video/BV1dt4y1Q7UE/" class="bilibili_box" id="BV1dt4y1Q7UE"></a>  <script>    bilibili()    function bilibili() {      let dom = document.getElementById('BV1dt4y1Q7UE')      fetch('https://api.320.ink/api/b?id=BV1dt4y1Q7UE').then(res=>res.json()).then(data=>{        dom.innerHTML = `        <div class="bilibili_cover">          <img src="https://s1.hdslb.com/bfs/static/player/img/play.svg" class="play_icon no-lazyload">          <img src="${data.pic + '&h=300'}" class="no-lazyload">          <span>17:06</span>        </div>        <div class="bilibili_info">          <div class="title">${data.title}</div>                    <div class="stat">            <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none" class="icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.67735 4.2798C5.98983 4.1725 7.85812 4.0625 10 4.0625C12.1421 4.0625 14.0105 4.17252 15.323 4.27983C16.2216 4.3533 16.9184 5.04049 16.9989 5.9318C17.0962 7.00837 17.1875 8.43614 17.1875 10C17.1875 11.5639 17.0962 12.9916 16.9989 14.0682C16.9184 14.9595 16.2216 15.6467 15.323 15.7202C14.0105 15.8275 12.1421 15.9375 10 15.9375C7.85812 15.9375 5.98983 15.8275 4.67735 15.7202C3.77861 15.6467 3.08174 14.9593 3.00119 14.0678C2.90388 12.9908 2.8125 11.5627 2.8125 10C2.8125 8.43727 2.90388 7.00924 3.00119 5.93221C3.08174 5.04067 3.77861 4.35327 4.67735 4.2798ZM10 2.8125C7.81674 2.8125 5.9136 2.92456 4.5755 3.03395C3.07738 3.15643 1.8921 4.31616 1.75626 5.81973C1.65651 6.92379 1.5625 8.39058 1.5625 10C1.5625 11.6094 1.65651 13.0762 1.75626 14.1803C1.8921 15.6838 3.07738 16.8436 4.5755 16.966C5.9136 17.0754 7.81674 17.1875 10 17.1875C12.1835 17.1875 14.0868 17.0754 15.4249 16.966C16.9228 16.8436 18.108 15.6841 18.2438 14.1807C18.3435 13.077 18.4375 11.6105 18.4375 10C18.4375 8.38948 18.3435 6.92296 18.2438 5.81931C18.108 4.31588 16.9228 3.15645 15.4249 3.03398C14.0868 2.92458 12.1835 2.8125 10 2.8125ZM12.1876 10.722C12.7431 10.4013 12.7431 9.59941 12.1876 9.27866L9.06133 7.47373C8.50577 7.15298 7.81133 7.55392 7.81133 8.19542V11.8053C7.81133 12.4468 8.50577 12.8477 9.06133 12.527L12.1876 10.722Z" fill="#9499A0"/></svg>${data.view}</span>            <span><svg width="36" height="36" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" class="icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.77234 30.8573V11.7471H7.54573C5.50932 11.7471 3.85742 13.3931 3.85742 15.425V27.1794C3.85742 29.2112 5.50932 30.8573 7.54573 30.8573H9.77234ZM11.9902 30.8573V11.7054C14.9897 10.627 16.6942 7.8853 17.1055 3.33591C17.2666 1.55463 18.9633 0.814421 20.5803 1.59505C22.1847 2.36964 23.243 4.32583 23.243 6.93947C23.243 8.50265 23.0478 10.1054 22.6582 11.7471H29.7324C31.7739 11.7471 33.4289 13.402 33.4289 15.4435C33.4289 15.7416 33.3928 16.0386 33.3215 16.328L30.9883 25.7957C30.2558 28.7683 27.5894 30.8573 24.528 30.8573H11.9911H11.9902Z"></path></svg>${data.like}</span>            <span><svg width="28" height="28" viewBox="0 0 28 28" xmlns="http://www.w3.org/2000/svg" class="icon" style="fill:;"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.045 25.5454C7.69377 25.5454 2.54504 20.3967 2.54504 14.0454C2.54504 7.69413 7.69377 2.54541 14.045 2.54541C20.3963 2.54541 25.545 7.69413 25.545 14.0454C25.545 17.0954 24.3334 20.0205 22.1768 22.1771C20.0201 24.3338 17.095 25.5454 14.045 25.5454ZM9.66202 6.81624H18.2761C18.825 6.81624 19.27 7.22183 19.27 7.72216C19.27 8.22248 18.825 8.62807 18.2761 8.62807H14.95V10.2903C17.989 10.4444 20.3766 12.9487 20.3855 15.9916V17.1995C20.3854 17.6997 19.9799 18.1052 19.4796 18.1052C18.9793 18.1052 18.5738 17.6997 18.5737 17.1995V15.9916C18.5667 13.9478 16.9882 12.2535 14.95 12.1022V20.5574C14.95 21.0577 14.5444 21.4633 14.0441 21.4633C13.5437 21.4633 13.1382 21.0577 13.1382 20.5574V12.1022C11.1 12.2535 9.52148 13.9478 9.51448 15.9916V17.1995C9.5144 17.6997 9.10883 18.1052 8.60856 18.1052C8.1083 18.1052 7.70273 17.6997 7.70265 17.1995V15.9916C7.71158 12.9487 10.0992 10.4444 13.1382 10.2903V8.62807H9.66202C9.11309 8.62807 8.66809 8.22248 8.66809 7.72216C8.66809 7.22183 9.11309 6.81624 9.66202 6.81624Z"></path></svg>${data.coin}</span>          </div>          <div class="owner">            <span class="tip">视频</span>            <img src="${data.face + '&h=100'}" class="no-lazyload">            <span>${data.owner}</span>          </div>        </div>        `      })    }  </script>    <!-- 如果你要隐藏简介，添加true即可（注意，要隐藏简介则必须设置适配时间！），如下 --><!--   <a href="https://www.bilibili.com/video/BV1eh411G7bK/" class="bilibili_box" id="BV1eh411G7bK"></a>  <script>    bilibili()    function bilibili() {      let dom = document.getElementById('BV1eh411G7bK')      fetch('https://api.320.ink/api/b?id=BV1eh411G7bK').then(res=>res.json()).then(data=>{        dom.innerHTML = `        <div class="bilibili_cover">          <img src="https://s1.hdslb.com/bfs/static/player/img/play.svg" class="play_icon no-lazyload">          <img src="${data.pic + '&h=300'}" class="no-lazyload">          <span>00:29</span>        </div>        <div class="bilibili_info">          <div class="title">${data.title}</div>                    <div class="stat">            <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none" class="icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.67735 4.2798C5.98983 4.1725 7.85812 4.0625 10 4.0625C12.1421 4.0625 14.0105 4.17252 15.323 4.27983C16.2216 4.3533 16.9184 5.04049 16.9989 5.9318C17.0962 7.00837 17.1875 8.43614 17.1875 10C17.1875 11.5639 17.0962 12.9916 16.9989 14.0682C16.9184 14.9595 16.2216 15.6467 15.323 15.7202C14.0105 15.8275 12.1421 15.9375 10 15.9375C7.85812 15.9375 5.98983 15.8275 4.67735 15.7202C3.77861 15.6467 3.08174 14.9593 3.00119 14.0678C2.90388 12.9908 2.8125 11.5627 2.8125 10C2.8125 8.43727 2.90388 7.00924 3.00119 5.93221C3.08174 5.04067 3.77861 4.35327 4.67735 4.2798ZM10 2.8125C7.81674 2.8125 5.9136 2.92456 4.5755 3.03395C3.07738 3.15643 1.8921 4.31616 1.75626 5.81973C1.65651 6.92379 1.5625 8.39058 1.5625 10C1.5625 11.6094 1.65651 13.0762 1.75626 14.1803C1.8921 15.6838 3.07738 16.8436 4.5755 16.966C5.9136 17.0754 7.81674 17.1875 10 17.1875C12.1835 17.1875 14.0868 17.0754 15.4249 16.966C16.9228 16.8436 18.108 15.6841 18.2438 14.1807C18.3435 13.077 18.4375 11.6105 18.4375 10C18.4375 8.38948 18.3435 6.92296 18.2438 5.81931C18.108 4.31588 16.9228 3.15645 15.4249 3.03398C14.0868 2.92458 12.1835 2.8125 10 2.8125ZM12.1876 10.722C12.7431 10.4013 12.7431 9.59941 12.1876 9.27866L9.06133 7.47373C8.50577 7.15298 7.81133 7.55392 7.81133 8.19542V11.8053C7.81133 12.4468 8.50577 12.8477 9.06133 12.527L12.1876 10.722Z" fill="#9499A0"/></svg>${data.view}</span>            <span><svg width="36" height="36" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" class="icon"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.77234 30.8573V11.7471H7.54573C5.50932 11.7471 3.85742 13.3931 3.85742 15.425V27.1794C3.85742 29.2112 5.50932 30.8573 7.54573 30.8573H9.77234ZM11.9902 30.8573V11.7054C14.9897 10.627 16.6942 7.8853 17.1055 3.33591C17.2666 1.55463 18.9633 0.814421 20.5803 1.59505C22.1847 2.36964 23.243 4.32583 23.243 6.93947C23.243 8.50265 23.0478 10.1054 22.6582 11.7471H29.7324C31.7739 11.7471 33.4289 13.402 33.4289 15.4435C33.4289 15.7416 33.3928 16.0386 33.3215 16.328L30.9883 25.7957C30.2558 28.7683 27.5894 30.8573 24.528 30.8573H11.9911H11.9902Z"></path></svg>${data.like}</span>            <span><svg width="28" height="28" viewBox="0 0 28 28" xmlns="http://www.w3.org/2000/svg" class="icon" style="fill:;"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.045 25.5454C7.69377 25.5454 2.54504 20.3967 2.54504 14.0454C2.54504 7.69413 7.69377 2.54541 14.045 2.54541C20.3963 2.54541 25.545 7.69413 25.545 14.0454C25.545 17.0954 24.3334 20.0205 22.1768 22.1771C20.0201 24.3338 17.095 25.5454 14.045 25.5454ZM9.66202 6.81624H18.2761C18.825 6.81624 19.27 7.22183 19.27 7.72216C19.27 8.22248 18.825 8.62807 18.2761 8.62807H14.95V10.2903C17.989 10.4444 20.3766 12.9487 20.3855 15.9916V17.1995C20.3854 17.6997 19.9799 18.1052 19.4796 18.1052C18.9793 18.1052 18.5738 17.6997 18.5737 17.1995V15.9916C18.5667 13.9478 16.9882 12.2535 14.95 12.1022V20.5574C14.95 21.0577 14.5444 21.4633 14.0441 21.4633C13.5437 21.4633 13.1382 21.0577 13.1382 20.5574V12.1022C11.1 12.2535 9.52148 13.9478 9.51448 15.9916V17.1995C9.5144 17.6997 9.10883 18.1052 8.60856 18.1052C8.1083 18.1052 7.70273 17.6997 7.70265 17.1995V15.9916C7.71158 12.9487 10.0992 10.4444 13.1382 10.2903V8.62807H9.66202C9.11309 8.62807 8.66809 8.22248 8.66809 7.72216C8.66809 7.22183 9.11309 6.81624 9.66202 6.81624Z"></path></svg>${data.coin}</span>          </div>          <div class="owner">            <span class="tip">视频</span>            <img src="${data.face + '&h=100'}" class="no-lazyload">            <span>${data.owner}</span>          </div>        </div>        `      })    }  </script>   --><!-- 来源：https://blog.leonus.cn/2023/butterflyTag-1.html --><h2 id="GitHub-Actions-自动化"><a href="#GitHub-Actions-自动化" class="headerlink" title="GitHub Actions 自动化"></a>GitHub Actions 自动化</h2><ul><li>新建workflows脚本<br>  在<code>.github/workflows/</code>文件夹下新建文件<code>deploy.yml</code>,填写内容如下：  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span> <span class="comment"># If you&#x27;re using actions/checkout@v3 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">        <span class="attr">persist-credentials:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">and</span> <span class="string">Build</span> <span class="string">🔧</span> <span class="comment"># This example project is built using npm and outputs the result to the &#x27;build&#x27; folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install</span></span><br><span class="line"><span class="string">        npm run build</span></span><br><span class="line"><span class="string">        env:</span></span><br><span class="line"><span class="string">        CI: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span> <span class="comment">#部署至github-pages所对应仓库</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@releases/v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">        <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">BRANCH:</span> <span class="string">master</span> <span class="comment"># The branch the action should deploy to.</span></span><br><span class="line">        <span class="attr">FOLDER:</span> <span class="string">public</span> <span class="comment"># The folder the action should deploy.</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Docker</span> <span class="string">deploy</span> <span class="comment">#通过git部署至自己的服务器对应文件地址</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@main</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span> <span class="comment"># ACCESS_TOKEN 为加密参数，于仓库的 Settings-Secrets and variables-Acitons 页面点击 New repository secret 进行添加，确保添加的名称与这里的对应上</span></span><br><span class="line">        <span class="attr">ARGS:</span> <span class="string">&quot;-rlgoDzvc -i --delete&quot;</span></span><br><span class="line">        <span class="attr">SOURCE:</span> <span class="string">&quot;public/&quot;</span></span><br><span class="line">        <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_HOST</span> <span class="string">&#125;&#125;</span> <span class="comment"># REMOTE_HOST 为加密参数</span></span><br><span class="line">        <span class="attr">REMOTE_USER:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_USER</span> <span class="string">&#125;&#125;</span> <span class="comment"># REMOTE_USER 为加密参数</span></span><br><span class="line">        <span class="attr">TARGET:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.TARGET</span> <span class="string">&#125;&#125;</span> <span class="comment"># TARGET 为加密参数</span></span><br></pre></td></tr></table></figure>  推送至仓库后会自动化执行对应脚本。<br>  此处用到了三个脚本，有兴趣的可自行了解：  <ul><li><a href="https://github.com/actions/checkout">actions&#x2F;checkout</a>  </li><li><a href="https://github.com/JamesIves/github-pages-deploy-action">JamesIves&#x2F;github-pages-deploy-action</a>  </li><li><a href="https://github.com/easingthemes/ssh-deploy">easingthemes&#x2F;ssh-deploy</a><br>  额外注释：<br>  <img src="/../img/Hexo%E7%BD%91%E7%AB%99%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/1681812168797.png" alt="Alt text"></li></ul></li></ul><h2 id="Hexo的Docker部署"><a href="#Hexo的Docker部署" class="headerlink" title="Hexo的Docker部署"></a>Hexo的Docker部署</h2><ul><li><p>网站文件夹所在根目录下新建文件 <code>Dockerfile</code> ,输入内容：  </p>  <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于 node 镜像构建</span></span><br><span class="line"><span class="keyword">FROM</span> node:latest</span><br><span class="line"><span class="comment"># 复制 hexo 目录下的数据至容器的 data 目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> hexo /data/</span></span><br><span class="line"><span class="comment"># 安装 http-server 模块</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install -g http-server</span></span><br><span class="line"><span class="comment"># 指定工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /data</span></span><br><span class="line"><span class="comment"># 运行容器时执行的shell命令：启动 http 服务指向 /data 目录，默认端口为 5000</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [ <span class="string">&quot;http-server&quot;</span>,<span class="string">&quot;-p&quot;</span>,<span class="string">&quot;5000&quot;</span> ]</span></span><br></pre></td></tr></table></figure><p>  上传此文件和网站文件至自己服务器<br>  <em>注：文件的构建方式有多种，此处只是用最简单的方式进行实现，具体构建方式可自行探索。更多指令详见 <a href="https://www.runoob.com/docker/docker-dockerfile.html">Dockerfile</a>。</em>  </p></li><li><p>连接服务器并进入文件所在地址  </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /存放文件的地址/</span><br></pre></td></tr></table></figure></li><li><p>执行Docker镜像构建指令  </p>  <figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t hexo(镜像名称可自定义)</span><br></pre></td></tr></table></figure></li><li><p>使用构建的镜像创建容器 </p>  <figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d -p 5000:5000 -v /root/website_data/hexo:/data --name my-hexo-blog --restart=always hexo</span></span><br></pre></td></tr></table></figure><p>  其中：<br>  <code>-p</code> 指定访问端口<br>  <code>-v</code> 映射程序运行数据的文件地址，容器内文件地址不好找，最好自定义文件路径<br>  <code>--name</code> 定义容器名称<br>  <code>--restart=always</code> 跟随docker程序自启动<br>  <code>hexo</code> 自构建镜像名称</p></li></ul><h2 id="添加域名访问"><a href="#添加域名访问" class="headerlink" title="添加域名访问"></a>添加域名访问</h2><p>使用代理软件对指定端口以域名形式进行访问，具体操作见这篇文章：<a href="/post/661ecc9.html" title="Nginx的安装与配置">Nginx的安装与配置</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Portainer安装</title>
      <link href="/post/13d4b70d.html"/>
      <url>/post/13d4b70d.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Portainer是一个开源的Docker管理工具，它可以帮助用户在Web界面上轻松地管理Docker容器、镜像、卷和网络等。  </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>确认已经安装了<code>Docker</code>和<code>Docker Compose</code>，如果没有，请先安装。</p></li><li><p>在终端中输入以下命令，从Docker Hub上下载Portainer的最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer-ce</span><br></pre></td></tr></table></figure></li><li><p>创建一个新的Docker容器并运行Portainer：</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d -p 8000:8000 -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</span></span><br></pre></td></tr></table></figure><p>解释一下上面的命令：</p><ul><li><code>-d</code> 参数表示以后台模式运行容器</li><li><code>-p</code> 参数将主机的端口映射到容器的端口，例如 <code>-p 8000:8000</code> 将主机的8000端口映射到容器的8000端口</li><li><code>--name</code> 参数指定容器的名称为 <code>portainer</code></li><li><code>--restart always</code> 参数表示容器在崩溃或重启后将自动重新启动</li><li><code>-v</code> 参数将主机的目录或文件夹挂载到容器中，例如 <code>-v /var/run/docker.sock:/var/run/docker.sock</code> 将主机的Docker socket文件挂载到容器中，方便容器访问宿主机的Docker引擎</li><li><code>portainer/portainer-ce</code> 是要运行的Docker镜像的名称</li></ul></li><li><p>打开Web浏览器，访问 <code>http://localhost:9000</code>，按照界面上的提示设置管理员账号和密码，然后就可以开始使用Portainer了。</p><p><em>注意：如果使用的是远程服务器，则需要将 <code>localhost</code> 替换为服务器的IP地址或域名。另外，建议在使用Portainer之前先了解Docker的基本概念和使用方法。</em></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx的安装与配置</title>
      <link href="/post/661ecc9.html"/>
      <url>/post/661ecc9.html</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h2><p>Nginx是一款高性能的Web服务器和反向代理服务器，它可以处理高并发的请求，同时还支持负载均衡、HTTP缓存和动态HTTP请求等功能。Nginx的设计理念是高并发、低消耗、高可靠性和易扩展，因此在大型网站的应用非常广泛。</p><p>Nginx的主要作用包括：</p><ol><li>Web服务器：Nginx可以作为Web服务器，处理HTTP请求，向客户端提供静态或动态的Web内容。</li><li>反向代理服务器：Nginx可以作为反向代理服务器，将客户端请求转发到后端服务器，处理后端服务器的响应结果并返回给客户端。</li><li>负载均衡器：Nginx可以作为负载均衡器，将客户端请求分发到多个后端服务器，实现负载均衡，提高系统的可扩展性和稳定性。</li><li>HTTP缓存服务器：Nginx可以作为HTTP缓存服务器，缓存静态文件和动态文件，提高Web应用的响应速度和性能。</li><li>TCP&#x2F;UDP代理服务器：Nginx还可以作为TCP&#x2F;UDP代理服务器，处理TCP&#x2F;UDP请求，实现代理和转发功能。</li></ol><p>具体使用方式详见 <a href="http://nginx.org/en/">官网</a> , 对于个人而言，一般是用来设置SSL证书，让域名代理的主机地址能通过<code>https</code>访问。</p><h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2><ul><li><a href="https://github.com/nginx/nginx">nginx&#x2F;nginx</a><br>官方项目，使用方式略繁琐，网上的一些教程过时不好用，最好配合官网说明使用。  </li><li><a href="https://github.com/NginxProxyManager/nginx-proxy-manager">NginxProxyManager</a><br>基于Docker的可视化操作Web界面，配置简单明了。十分推荐！  </li><li><a href="chishin/nginx-proxy-manager-zh">nginx-proxy-manager-zh</a><br>NginxProxyManager的汉化版</li></ul><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><p>系统：<code>Ubuntu 20.04 x64</code><br>已安装程序：<code>Docker</code> <code>Docker-Compose</code><br>使用功能：<code>SSL</code> </p><ol><li><p>创建<code>docker-compose.yml</code>文件，内容如下：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>进入到对应文件目录，输入指令并运行：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker-compose</span> <span class="string">up</span> <span class="string">-d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#If using docker-compose-plugin</span></span><br><span class="line"><span class="string">docker</span> <span class="string">compose</span> <span class="string">up</span> <span class="string">-d</span></span><br></pre></td></tr></table></figure></li><li><p>配置防火墙<br>Ubuntu20 默认开启了防火墙，且默认端口均为开放，所以相关应用程序端口一定要加入白名单，不然就各种问题！</p></li></ol><ul><li>允许HTTP<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80</span><br></pre></td></tr></table></figure></li><li>允许HTTPS<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 443</span><br></pre></td></tr></table></figure></li><li>允许Nginx管理WebUI<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 81</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li><p>登录WebUI<br><a href="http://hostname(主机ip地址):81/">http://hostname(主机IP地址):81</a><br>默认账户 </p><pre><code>Email:    admin@example.comPassword: changeme</code></pre><p>初次登录后会要求修改默认账户名和密码</p></li><li><p>配置SSL<br><img src="/../img/Nginx%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/ssl.png" alt="Alt text"><br>进入<code>SSL Certificates</code> 面板，点击 <code>Add SSL Certificate</code>，如果有域名证书的选择 <code>Custom</code> ,输入备注名称上传对应证书文件和密钥即可；没有证书的也可以选择 <code>Let&#39;s Encrypt</code>自行申请免费证书。<br><em>注：域名证书可在域名供应商那里申请到免费的，以阿里云来说，每个域名明年可申请20张免费证书。</em> </p></li><li><p>配置代理<br><img src="/../img/Nginx%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/hosts.png" alt="Alt text"><br>进入 <code>Hosts</code> 面板选择 Proxy Host，点击 <code>Add Proxy Host</code> ,按照如下示例配置：<br> <img src="/../img/Nginx%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/ssl03.png" alt="Alt text"><br>保存后，你就可以通过配有证书的域名以 <code>https</code> 的方式访问对应主机端口的应用了。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里只以Nginx的SSL功能举例，也是本人常用的一个功能。但对于Nginx来说，该功能只是冰山一角，更多的功能使用待各位自行发掘。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT的微信和qq接入</title>
      <link href="/post/1082c8d6.html"/>
      <url>/post/1082c8d6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>今年算是AI的爆发元年了，井喷式的AI工具涌现而出。最近一直在琢磨着将 AI 融入工作和生活，浅尝之下，不得不感叹AI带来的高效与便利。而如何更好的融合和使用这些AI工具，应该是未来几年需要持续摸索的一件事情了。 </p></blockquote><h2 id="ChatGPT账号注册"><a href="#ChatGPT账号注册" class="headerlink" title="ChatGPT账号注册"></a>ChatGPT账号注册</h2><ul><li><p>通过在线SMS服务选择OpenAI支持的手机号完成账号注册<br>  <a href="https://chat.openai.com/">ChatGPT官网</a> （需代理）<br>  <a href="https://sms-activate.org/">SMS虚拟手机号码服务</a><br>  此处提供的sms服务需要付费，大概1$不到。网上也能找到免费的，不过质量层次不齐，不保证能接收到验证码，出于节省时间的目的，还是更推荐付费的。 </p></li><li><p>获取API为其他通讯方式的接入做准备<br>   <img src="/../img/ChatGPT%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%92%8Cqq%E6%8E%A5%E5%85%A5/API_KEY.png" alt="Alt text"><br>  进入 <a href="https://platform.openai.com/account/api-keys">OpenAI API</a> ，点击创建新的 key ，API key的调用是要收费的，具体收费方式详见官网，每个账号有 <code>5$</code> 的额度，个人使用还是足够的，多人使用推荐上 plus 版本。</p></li></ul><h2 id="微信接入"><a href="#微信接入" class="headerlink" title="微信接入"></a>微信接入</h2><p>主要还是通过GitHub开源项目进行接入，具体接入方式详见各自项目的说明文档  </p><ul><li>个人微信接入 <a href="https://github.com/limccn/chatgpt-on-wechat">chatgpt-on-wechat</a>  </li><li>公众号接入  <a href="https://github.com/zhayujie/bot-on-anything">bot-on-anything</a></li></ul><h2 id="QQ接入"><a href="#QQ接入" class="headerlink" title="QQ接入"></a>QQ接入</h2><ol><li>部署qq登录程序  <a href="https://github.com/Mrs4s/go-cqhttp">go-cqhttp</a><br>通讯方式选用反向代理，即 <code>severs</code> 部分的配置选用 <code>ws-reverse</code> 设置参数。服务器监听的地址需要与 <code>chatpgt-mirai-qq-bot</code> 的运行地址和端口保持一致。</li><li>对接ChatGPT  <a href="https://github.com/lss233chatgpt-mirai-qq-bot">chatgpt-mirai-qq-bot</a><br>该项目支持多种AI的调用方式，具体细节详见官方说明文档。</li></ol>]]></content>
      
      
      <categories>
          
          <category> AI工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> Bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI绘画</title>
      <link href="/post/a01715fb.html"/>
      <url>/post/a01715fb.html</url>
      
        <content type="html"><![CDATA[<h2 id="主流AI绘画工具"><a href="#主流AI绘画工具" class="headerlink" title="主流AI绘画工具"></a>主流AI绘画工具</h2><ul><li><p>Stable Diffusion</p></li><li><p>MidJourney</p></li><li><p>Waifu Diffusion</p></li><li><p>PicUP.AI</p></li><li><p>其他</p><p><strong>Stable Diffusion</strong> </p><p>简称“ SD ”，Stable Diffusion 是一种基于潜在扩散模型的 AI 模型，它可以生成图像，也可以通过文本提示修改现有图像，类似于 MidJourney 或 DALL-E 2。它最初是由 Stability.ai 在 2022 年 8 月发布的。它可以理解数千个不同的单词，并且可以用几乎任何风格创建几乎任何形象.</p><p>Stable Diffusion 是一种深度生成神经网络，其代码和模型权重已公开发布，可以在大多数配备至少 8 GB VRAM 的消费级硬件上运行。</p><p><strong>MidJourney</strong> </p><p>MidJourney 是一种基于 GAN 技术的 AI 绘画工具，它可以生成高质量的图像和艺术作品。它可以通过输入一些简单的文本提示，生成各种不同的图像，包括人物、动物、风景等。MidJourney 的特点是生成的图像非常逼真，可以与真实的照片媲美。</p><p><strong>Waifu Diffusion</strong></p><p>Waifu Diffusion 是一种基于 StyleGAN 技术的 AI 绘画工具，它可以生成各种不同的动漫风格的图像。它的特点是生成的图像非常逼真，可以与真实的动漫人物媲美。Waifu Diffusion 可以通过输入一些简单的文本提示，生成各种不同的动漫人物图像，包括男性、女性、萝莉等。</p><p><strong>PicUP.AI</strong></p><p>PicUP.AI 是一种基于 GAN 技术的 AI 绘画工具，它可以生成各种不同的图像和艺术作品。它可以通过输入一些简单的文本提示，生成各种不同的图像，包括人物、动物、风景等。PicUP.AI 的特点是生成的图像非常逼真，可以与真实的照片媲美。</p><p><strong>其他</strong></p><p>除了上述几种主流的 AI 绘画工具之外，还有许多其他的工具，如 DALL-E2、Artbreeder、GANbreeder 等。这些工具都是基于 GAN 或其他 AI 技术的，可以生成各种不同的图像和艺术作品。它们的特点是生成的图像非常逼真，可以与真实的照片媲美。</p></li></ul><h2 id="工具使用说明"><a href="#工具使用说明" class="headerlink" title="工具使用说明"></a>工具使用说明</h2><h3 id="Stable-Diffusion"><a href="#Stable-Diffusion" class="headerlink" title="Stable Diffusion"></a>Stable Diffusion</h3><h4 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h4><ul><li><p>方式一 : GitHub源码（需梯子）    <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">AUTOMATIC1111&#x2F;stable-diffusion-webui</a>  </p></li><li><p>方式二 : 一键整合包，开箱即用   <a href="https://www.bilibili.com/video/BV17d4y1C73R/?spm_id_from=333.999.0.0">秋葉aaaki（推荐）</a></p></li></ul><h4 id="操作界面说明"><a href="#操作界面说明" class="headerlink" title="操作界面说明"></a>操作界面说明</h4><p>  <img src="/../img/AI%E7%BB%98%E7%94%BB/%E7%95%8C%E9%9D%A2UI%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.jpg" alt="Alt text">  </p><ul><li><p><strong>Stable Duffusion 模型(ckpt)</strong><br> 大模型是数据训练出来的结果，决定了生成图片的美术风格以及它擅长的绘画面。资源可以在网上下载，根据自己的喜好挑选模型。<br> 对应本地资源存放目录 <code>.../models/Stable-diffusion</code>  </p></li><li><p><strong>模型的 VAE(SD VAE)</strong><br> VAE 的主要作用是滤镜，决定了生成图像的色彩饱和度；虽然也有局部修正的作用，但作用效果不明显。有些大模型不用 VAE 直出的图像是灰色的，有些模型则不用，如果模型有配套的VAE,则推荐使用配套的。这部分建议多去尝试与组合，寻找自己的喜欢的风格色彩。<br> 对应本地资源存放目录 <code>.../models/VAE</code></p></li><li><p><strong>提示词(Prompt)</strong><br> 输入自己想要画面元素的关键词(tags)，这里用英文输入，中文输入效果不理想。<br> <code>() 抬升权重</code> 一个 () 权重 * 1.1，多个 (()) 大量抬升<br> <code>[] 降低权重</code> 一个 [] 权重 &#x2F; 1.1<br> <code>(tag:1.2) 赋予权重</code>  权重 * 1.2，还可以(sliver,pink:0.9)表示银色和粉色的比例是 9:1 ,这样可以表现为银色头发的发梢是粉色的<br> <code>[tagA:tagB:step] 分布描绘</code> 到达指定步数前执行 tagA ,到达后，执行 tagB 。Step&gt;1 时，表示步数；Step&lt;1 时，表示占比<br> <code>tagA|tagB 融合描绘</code> 例如 (whrite hair|blue hair)表示白色头发与蓝色头发的发色融合</p></li><li><p><strong>反向提示词(Negative prompt)</strong><br> 输入自己不想要的画面元素关键词</p></li><li><p><strong>采样迭代步数(Steps)</strong><br> 字面意思，理论上迭代次数越多效果越好</p></li><li><p><strong>采样方法(Sampler)</strong><br> 不同采样方法出图的速度和效果不同，一般倾向于用 <code>Euler a</code> <code>DPM++ 2M Karras</code> <code>DPM++SDE Karras</code> 这三种，其他方法可自行尝试。  </p></li><li><p><strong>面部修复</strong><br>推荐勾选，可以提升比较不错的面部效果出图率  </p></li><li><p><strong>高清修复</strong><br>   不推荐勾选，会影响出图效率。可以等出了自己满意的效果图后，再用自带的<code>附加功能</code>进行放大。</p></li></ul><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><ul><li><p><strong>Embedding (textual inversion)</strong><br>  嵌入&#x2F;文本反转，通俗理解：提示词打包，类似与提示词组的概念，可以使用别人已经打包好的tags,用于生成固定特征的人或事物。  </p></li><li><p><strong>Lora (Low-Rank Adaptation of Large Language Models)</strong><br> 大语言模型的低阶适应，是微软的研究人员为了解决大语言模型微调而开发的一项技术。<br> 主要功能：对人物和物品的复刻。通过挂载lora，复刻图片上的指定细节特征，无论是动作还是画风。目前使用比较火热，最新的SD_WebUI已经内置。  </p></li><li><p><strong>Hypernetwork</strong><br>  超网格，可以理解为低配版Lora，主要用来训练画风。</p></li><li><p><strong><a href="https://github.com/lllyasviel/ControlNet">ControlNet</a></strong><br>  是一种通过添加额外条件来控制扩散模型的神经网络结构，可以从线稿、姿态、深度、色彩等方面对参考图片进行预处理，从而更精确得到我们想要的图片特征。<br>  <code>进阶教程</code><br>  <a href="https://www.bilibili.com/video/BV1Wo4y1i77v/?spm_id_from=333.999.0.0&vd_source=8139a2177a04c86c89bc6e136b97f87c">Controlnet的安装与使用</a><br>   <a href="https://www.bilibili.com/video/BV1gk4y1h7xF/?vd_source=8139a2177a04c86c89bc6e136b97f87c">Controlnet+Lora 人设三视图</a></p></li></ul><h4 id="资源站点"><a href="#资源站点" class="headerlink" title="资源站点"></a>资源站点</h4><ul><li>C 站： <a href="https://civitai.com/">https://civitai.com/</a>  </li><li>Pixai 图站： <a href="https://pixai.art/">https://pixai.art/</a>  </li><li>Finding.Art 图站： <a href="https://finding.art/">https://finding.art/</a>  </li><li>AIGODLIKE ： <a href="https://www.aigodlike.com/">https://www.aigodlike.com/</a></li><li>NovelAI.Dev ： <a href="https://novelai.dev/">https://novelai.dev/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 绘画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notes</title>
      <link href="/post/c0da8988.html"/>
      <url>/post/c0da8988.html</url>
      
        <content type="html"><![CDATA[<h2 id="Twikoo"><a href="#Twikoo" class="headerlink" title="Twikoo"></a><a href="https://twikoo.js.org/">Twikoo</a></h2><ul><li>遇到问题：按照官方文档部署完成后，本地测试无问题，但是正式部署到云端服务器后，无法正常运作。</li><li>问题排查：服务器地址云函数运行正常，浏览器中按 F12 发现有报错 <code>This request has been blocked; the content must be served over HTTPS.</code> 该云函数是通过<code>http</code>协议访问的，会被浏览器拦截，本地测试运行则不会。</li><li>解决方案：通过<a href="http://kchris1027.github.io/post/13d4b70d.html">Nginx的安装与配置</a>，配置SSL证书走<code>https</code>协议访问。</li></ul><h2 id="v2rayN"><a href="#v2rayN" class="headerlink" title="v2rayN"></a><a href="https://github.com/2dust/v2rayN">v2rayN</a></h2><ul><li>遇到问题：无法连接代理服务器</li><li>问题排查：<ul><li>服务器可以ping的通</li><li>在其他设备上使用正常，验证服务器没问题</li><li>各版本的软件都尝试过，但就是连不上，推测本地pc环境出了问题</li></ul></li><li>解决方案：由于我之前更改过系统的区域以及时区，后来改回了，但是时间没同步到区域。所以在<code>系统设置-时间和语言-日期和时间</code>里，点击<code>立即同步</code>，之后顺利解决。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题修改记录</title>
      <link href="/post/4ad8e0f8.html"/>
      <url>/post/4ad8e0f8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>考虑到主题更新影响到一些文件的改动，<br>建议在自己博客的<code>\source</code>目录下新建<code>\css</code>和<code>\js</code>文件夹用来存放相关的效果脚本，<br>最终部署的时候会和<code>\themes\butterfly\source</code>目录下的资源进行合并，引用路径都是一样的，无须担心。</p></blockquote><h2 id="插件使用"><a href="#插件使用" class="headerlink" title="插件使用"></a>插件使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install &lt;plugin-name&gt; --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载插件</span></span><br><span class="line">npm uninstall &lt;plugin-name&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">插件名称</th><th align="center">版本</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">hexo-abbrlink</td><td align="center">2.2.1</td><td align="center">为文章生成字母和数字组成的唯一ID,代替默认的日期生成</td></tr><tr><td align="center">hexo-swiper-bar</td><td align="center">1.1.1</td><td align="center"><a href="https://zfe.space/post/hexo-swiper.html">文章首页置顶</a></td></tr><tr><td align="center">hexo-butterfly-charts</td><td align="center">1.1.3</td><td align="center"><a href="https://guole.fun/posts/18158/">统计图表</a></td></tr><tr><td align="center">hexo-douban</td><td align="center">2.1.7</td><td align="center"><a href="https://github.com/mythsman/hexo-douban">豆瓣个人页面</a></td></tr><tr><td align="center">hexo-douban-card</td><td align="center">1.4.0</td><td align="center"><a href="https://github.com/TankNee/hexo-douban-card">在文章中插入豆瓣卡片</a></td></tr><tr><td align="center">hexo-tag-steamgame</td><td align="center">1.0.0</td><td align="center"><a href="https://github.com/HCLonely/hexo-tag-steamgame">在文章中插入steam游戏</a></td></tr></tbody></table><h2 id="脚本构建"><a href="#脚本构建" class="headerlink" title="脚本构建"></a>脚本构建</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">水波纹效果</button></li><li class="tab"><button type="button" data-href="#-2">页脚养鱼</button></li><li class="tab"><button type="button" data-href="#-3">波浪特效</button></li><li class="tab"><button type="button" data-href="#-4">bilibili_card</button></li><li class="tab"><button type="button" data-href="#-5">关于页面</button></li><li class="tab"><button type="button" data-href="#-6">标签页面美化</button></li><li class="tab"><button type="button" data-href="#-7">跳转到指定页</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><ul><li><p>在<code>\themes\butterfly\source\js</code>目录下创建一个<code>ripples.js</code>文件，并将如下代码写入该文件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    $(<span class="string">&quot;#page-header&quot;</span>).<span class="title function_">ripples</span>(&#123;</span><br><span class="line">      <span class="attr">resolution</span>: <span class="number">512</span>,</span><br><span class="line">      <span class="attr">dropRadius</span>: <span class="number">10</span>, <span class="comment">//px</span></span><br><span class="line">      <span class="attr">perturbance</span>: <span class="number">0.04</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    $(<span class="string">&quot;.error&quot;</span>).<span class="title function_">show</span>().<span class="title function_">text</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>找到主题配置文件 <code>_config.butterfly.yml</code>，在inject的bottom处引入一下文件：</p><ul><li>开启 pjax<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://rmt.dogedoge.com/fetch/~/source/jsdelivr/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">data-pjax</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/sirxemic/jquery.ripples/dist/jquery.ripples.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/ripples.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>未开启 pjax<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://rmt.dogedoge.com/fetch/~/source/jsdelivr/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/sirxemic/jquery.ripples/dist/jquery.ripples.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/ripples.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>建议将外挂的链接脚本全部重新复制一份到本地进行引用，防止链接失效导致效果丢失</p></blockquote></li></ul><p>重新部署后即可看到效果。<code>当前效果存在一些适配问题，慎用！</code><br><a class="btn-beautify block right outline" href="https://zsyyblog.com/f050230c.html" title="查看原文"><span>查看原文</span></a></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><ul><li>找到主题配置文件 <code>_config.butterfly.yml</code>，在inject的bottom处引入一下文件：  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://gcore.jsdelivr.net/gh/xiabo2/CDN@latest/fishes.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><a class="btn-beautify block right outline" href="https://blog.4t.pw/posts/263068a8.html#js" title="查看原文"><span>查看原文</span></a></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><ul><li><p>新建wave_style.pug文件<br>在目录 <code>\themes\butterfly\layout\includes\header\wave_style.pug</code> 新建 <code>wave_style.pug</code>，并写入如下代码：  </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">section.main-hero-waves-area.waves-area</span><br><span class="line">  svg.waves-svg(xmlns=<span class="string">&#x27;http://www.w3.org/2000/svg&#x27;</span>, xlink=<span class="string">&#x27;http://www.w3.org/1999/xlink&#x27;</span>, viewBox=<span class="string">&#x27;0 24 150 28&#x27;</span>, preserveAspectRatio=<span class="string">&#x27;none&#x27;</span>, shape-rendering=<span class="string">&#x27;auto&#x27;</span>)</span><br><span class="line">    defs</span><br><span class="line">      path<span class="meta">#gentle-wave(d=&#x27;M -160 44 c 30 0 58 -18 88 -18 s 58 18 88 18 s 58 -18 88 -18 s 58 18 88 18 v 44 h -352 Z&#x27;)</span></span><br><span class="line">    g.<span class="function">parallax</span></span><br><span class="line"><span class="function">      <span class="title">use</span>(<span class="params">href=<span class="string">&#x27;#gentle-wave&#x27;</span>, x=<span class="string">&#x27;48&#x27;</span>, y=<span class="string">&#x27;0&#x27;</span></span>)</span></span><br><span class="line"><span class="function">      <span class="title">use</span>(<span class="params">href=<span class="string">&#x27;#gentle-wave&#x27;</span>, x=<span class="string">&#x27;48&#x27;</span>, y=<span class="string">&#x27;3&#x27;</span></span>)</span></span><br><span class="line"><span class="function">      <span class="title">use</span>(<span class="params">href=<span class="string">&#x27;#gentle-wave&#x27;</span>, x=<span class="string">&#x27;48&#x27;</span>, y=<span class="string">&#x27;5&#x27;</span></span>)</span></span><br><span class="line"><span class="function">      <span class="title">use</span>(<span class="params">href=<span class="string">&#x27;#gentle-wave&#x27;</span>, x=<span class="string">&#x27;48&#x27;</span>, y=<span class="string">&#x27;7&#x27;</span></span>)</span></span><br></pre></td></tr></table></figure></li><li><p>引入CSS样式<br>在<code>\source\css</code>目录下新建 <code>wave_style.css</code> 文件，并添加如下代码： </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*波浪特效*/</span></span><br><span class="line">.main-hero-waves-area &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">    z-index: <span class="number">0</span>;</span><br><span class="line">    bottom: <span class="number">-7.5</span>px <span class="comment">/*特效显示位置调整，正/负值：以中心点 上移/下移，一般改数值即可*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .waves-svg &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height: <span class="number">5</span>rem</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use &#123;</span><br><span class="line">    -webkit-animation: move-forever <span class="number">25</span>s cubic-bezier(<span class="number">.55</span>, <span class="number">.5</span>, <span class="number">.45</span>, <span class="number">.5</span>) infinite;</span><br><span class="line">    animation: move-forever <span class="number">25</span>s cubic-bezier(<span class="number">.55</span>, <span class="number">.5</span>, <span class="number">.45</span>, <span class="number">.5</span>) infinite</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:first-child &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-2</span>s;</span><br><span class="line">    animation-delay: <span class="number">-2</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">7</span>s;</span><br><span class="line">    animation-duration: <span class="number">7</span>s;</span><br><span class="line">    fill: <span class="meta">#ffffffb3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">2</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-3</span>s;</span><br><span class="line">    animation-delay: <span class="number">-3</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">10</span>s;</span><br><span class="line">    animation-duration: <span class="number">10</span>s;</span><br><span class="line">    fill: <span class="meta">#ffffff80</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">3</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-4</span>s;</span><br><span class="line">    animation-delay: <span class="number">-4</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">13</span>s;</span><br><span class="line">    animation-duration: <span class="number">13</span>s;</span><br><span class="line">    fill: <span class="meta">#ffffff4d</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">4</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-5</span>s;</span><br><span class="line">    animation-delay: <span class="number">-5</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">20</span>s;</span><br><span class="line">    animation-duration: <span class="number">20</span>s;</span><br><span class="line">    fill: <span class="meta">#f9fafb</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes move-forever &#123;</span><br><span class="line">    <span class="number">0</span>% &#123;</span><br><span class="line">        transform: translate3d(<span class="number">-90</span>px, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    to &#123;</span><br><span class="line">        transform: translate3d(<span class="number">85</span>px, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes move-forever &#123;</span><br><span class="line">    <span class="number">0</span>% &#123;</span><br><span class="line">        transform: translate3d(<span class="number">-90</span>px, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    to &#123;</span><br><span class="line">        transform: translate3d(<span class="number">85</span>px, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/*向下按钮和大banner社交图标防被遮挡隐藏*/</span></span><br><span class="line"><span class="meta">#page-header #scroll-down .scroll-down-effects&#123;</span></span><br><span class="line">  z-index: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#page-header #site_social_icons&#123;</span></span><br><span class="line">  display: flow-root;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/*黑暗模式适配*/</span></span><br><span class="line">[<span class="meta">data-theme=dark</span>]</span><br><span class="line">.waves-area .parallax&gt;use:first-child &#123;</span><br><span class="line">    fill: <span class="meta">#0f172ab3</span></span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">data-theme=dark</span>]</span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">2</span>) &#123;</span><br><span class="line">    fill: <span class="meta">#0f172a80</span></span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">data-theme=dark</span>]</span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">3</span>) &#123;</span><br><span class="line">    fill: <span class="meta">#0f172a4d</span></span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">data-theme=dark</span>]</span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">4</span>) &#123;</span><br><span class="line">    fill: <span class="meta">#070b14</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果背景色不是纯白的话，需继续添加背景色和波浪特效颜色的代码： </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*主页背景色*/</span></span><br><span class="line"><span class="meta">#web_bg &#123;</span></span><br><span class="line">  background: rgba(<span class="number">246</span>, <span class="number">239</span>, <span class="number">246</span>);</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">data-theme=dark</span>]</span><br><span class="line"><span class="meta">#web_bg &#123;</span></span><br><span class="line">  background: rgb(<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****修改波浪特效fill属性处颜色值（#后六位，7、8位透明度不用改），rgba(246, 239, 246) 与 #F6EFF6 效果是一样的*****/</span></span><br><span class="line">.waves-area .parallax&gt;use:first-child &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-2</span>s;</span><br><span class="line">    animation-delay: <span class="number">-2</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">7</span>s;</span><br><span class="line">    animation-duration: <span class="number">7</span>s;</span><br><span class="line">    fill: <span class="meta">#F6EFF6b3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">2</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-3</span>s;</span><br><span class="line">    animation-delay: <span class="number">-3</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">10</span>s;</span><br><span class="line">    animation-duration: <span class="number">10</span>s;</span><br><span class="line">    fill: <span class="meta">#F6EFF680</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">3</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-4</span>s;</span><br><span class="line">    animation-delay: <span class="number">-4</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">13</span>s;</span><br><span class="line">    animation-duration: <span class="number">13</span>s;</span><br><span class="line">    fill: <span class="meta">#F6EFF64d</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.waves-area .parallax&gt;use:nth-child(<span class="number">4</span>) &#123;</span><br><span class="line">    -webkit-animation-delay: <span class="number">-5</span>s;</span><br><span class="line">    animation-delay: <span class="number">-5</span>s;</span><br><span class="line">    -webkit-animation-duration: <span class="number">20</span>s;</span><br><span class="line">    animation-duration: <span class="number">20</span>s;</span><br><span class="line">    fill: <span class="meta">#F6EFF6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加引入位置<br>在<code>\themes\butterfly\layout\includes\header\index.pug</code>文件中如下位置添加代码：  </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">header<span class="meta">#page-header(class=isHomeClass style=bg_img)</span></span><br><span class="line">  !=<span class="keyword">partial</span>(<span class="string">&#x27;includes/header/nav&#x27;</span>, &#123;&#125;, &#123;cache: <span class="literal">true</span>&#125;)</span><br><span class="line">  <span class="keyword">if</span> top_img !== <span class="function"><span class="literal">false</span></span></span><br><span class="line"><span class="function">    <span class="keyword">if</span> <span class="title">is_post</span>()</span></span><br><span class="line"><span class="function">      include ./post-info.pug</span></span><br><span class="line"><span class="function">    <span class="keyword">else</span> <span class="keyword">if</span> <span class="title">is_home</span>() </span></span><br><span class="line"><span class="function">      #site-info</span></span><br><span class="line"><span class="function">        h1#site-title</span>=site_title</span><br><span class="line">        <span class="keyword">if</span> theme.subtitle.enable</span><br><span class="line">          - <span class="keyword">var</span> loadSubJs = <span class="literal">true</span></span><br><span class="line">          <span class="meta">#site-subtitle</span></span><br><span class="line">            span<span class="meta">#subtitle</span></span><br><span class="line">        <span class="keyword">if</span>(theme.social)</span><br><span class="line">          <span class="meta">#site_social_icons</span></span><br><span class="line">            !=fragment_cache(<span class="string">&#x27;social&#x27;</span>, function()&#123;<span class="keyword">return</span> <span class="keyword">partial</span>(<span class="string">&#x27;includes/header/social&#x27;</span>)&#125;)</span><br><span class="line">      <span class="meta">#scroll-down</span></span><br><span class="line">        i.fas.fa-angle-down.scroll-down-effects</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="meta">#page-site-info</span></span><br><span class="line">        h1<span class="meta">#site-title=site_title</span></span><br><span class="line">  <span class="comment">//- wave特效 添加如下，注意代码缩进与if top_img一致哦~</span></span><br><span class="line">  !=<span class="keyword">partial</span>(<span class="string">&#x27;includes/header/wave_style&#x27;</span>, &#123;&#125;, &#123;cache: <span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure></li></ul><p>重新部署后即可看到效果。 </p><p><a class="btn-beautify block right outline" href="https://snowtafir.top/posts/2022bn5s#%E6%96%B0%E5%BB%BAwave_stylepug%E6%96%87%E4%BB%B6"   title="查看原文"><span>查看原文</span></a>  </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><ul><li><p>在<code>\themes\butterfly\scripts\tag</code>下新建文件<code>bilibili.js</code>并粘贴如下代码： </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">let</span> playIcon = <span class="string">`&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 20 20&quot; fill=&quot;none&quot; class=&quot;icon&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M4.67735 4.2798C5.98983 4.1725 7.85812 4.0625 10 4.0625C12.1421 4.0625 14.0105 4.17252 15.323 4.27983C16.2216 4.3533 16.9184 5.04049 16.9989 5.9318C17.0962 7.00837 17.1875 8.43614 17.1875 10C17.1875 11.5639 17.0962 12.9916 16.9989 14.0682C16.9184 14.9595 16.2216 15.6467 15.323 15.7202C14.0105 15.8275 12.1421 15.9375 10 15.9375C7.85812 15.9375 5.98983 15.8275 4.67735 15.7202C3.77861 15.6467 3.08174 14.9593 3.00119 14.0678C2.90388 12.9908 2.8125 11.5627 2.8125 10C2.8125 8.43727 2.90388 7.00924 3.00119 5.93221C3.08174 5.04067 3.77861 4.35327 4.67735 4.2798ZM10 2.8125C7.81674 2.8125 5.9136 2.92456 4.5755 3.03395C3.07738 3.15643 1.8921 4.31616 1.75626 5.81973C1.65651 6.92379 1.5625 8.39058 1.5625 10C1.5625 11.6094 1.65651 13.0762 1.75626 14.1803C1.8921 15.6838 3.07738 16.8436 4.5755 16.966C5.9136 17.0754 7.81674 17.1875 10 17.1875C12.1835 17.1875 14.0868 17.0754 15.4249 16.966C16.9228 16.8436 18.108 15.6841 18.2438 14.1807C18.3435 13.077 18.4375 11.6105 18.4375 10C18.4375 8.38948 18.3435 6.92296 18.2438 5.81931C18.108 4.31588 16.9228 3.15645 15.4249 3.03398C14.0868 2.92458 12.1835 2.8125 10 2.8125ZM12.1876 10.722C12.7431 10.4013 12.7431 9.59941 12.1876 9.27866L9.06133 7.47373C8.50577 7.15298 7.81133 7.55392 7.81133 8.19542V11.8053C7.81133 12.4468 8.50577 12.8477 9.06133 12.527L12.1876 10.722Z&quot; fill=&quot;#9499A0&quot;/&gt;&lt;/svg&gt;`</span></span><br><span class="line"><span class="keyword">let</span> likeIcon = <span class="string">`&lt;svg width=&quot;36&quot; height=&quot;36&quot; viewBox=&quot;0 0 36 36&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; class=&quot;icon&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M9.77234 30.8573V11.7471H7.54573C5.50932 11.7471 3.85742 13.3931 3.85742 15.425V27.1794C3.85742 29.2112 5.50932 30.8573 7.54573 30.8573H9.77234ZM11.9902 30.8573V11.7054C14.9897 10.627 16.6942 7.8853 17.1055 3.33591C17.2666 1.55463 18.9633 0.814421 20.5803 1.59505C22.1847 2.36964 23.243 4.32583 23.243 6.93947C23.243 8.50265 23.0478 10.1054 22.6582 11.7471H29.7324C31.7739 11.7471 33.4289 13.402 33.4289 15.4435C33.4289 15.7416 33.3928 16.0386 33.3215 16.328L30.9883 25.7957C30.2558 28.7683 27.5894 30.8573 24.528 30.8573H11.9911H11.9902Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;`</span></span><br><span class="line"><span class="keyword">let</span> coinIcon = <span class="string">`&lt;svg width=&quot;28&quot; height=&quot;28&quot; viewBox=&quot;0 0 28 28&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; class=&quot;icon&quot; style=&quot;fill:;&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M14.045 25.5454C7.69377 25.5454 2.54504 20.3967 2.54504 14.0454C2.54504 7.69413 7.69377 2.54541 14.045 2.54541C20.3963 2.54541 25.545 7.69413 25.545 14.0454C25.545 17.0954 24.3334 20.0205 22.1768 22.1771C20.0201 24.3338 17.095 25.5454 14.045 25.5454ZM9.66202 6.81624H18.2761C18.825 6.81624 19.27 7.22183 19.27 7.72216C19.27 8.22248 18.825 8.62807 18.2761 8.62807H14.95V10.2903C17.989 10.4444 20.3766 12.9487 20.3855 15.9916V17.1995C20.3854 17.6997 19.9799 18.1052 19.4796 18.1052C18.9793 18.1052 18.5738 17.6997 18.5737 17.1995V15.9916C18.5667 13.9478 16.9882 12.2535 14.95 12.1022V20.5574C14.95 21.0577 14.5444 21.4633 14.0441 21.4633C13.5437 21.4633 13.1382 21.0577 13.1382 20.5574V12.1022C11.1 12.2535 9.52148 13.9478 9.51448 15.9916V17.1995C9.5144 17.6997 9.10883 18.1052 8.60856 18.1052C8.1083 18.1052 7.70273 17.6997 7.70265 17.1995V15.9916C7.71158 12.9487 10.0992 10.4444 13.1382 10.2903V8.62807H9.66202C9.11309 8.62807 8.66809 8.22248 8.66809 7.72216C8.66809 7.22183 9.11309 6.81624 9.66202 6.81624Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bilibili</span>(<span class="params">args</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> id = args[<span class="number">0</span>].<span class="title function_">replace</span>(<span class="regexp">/.*video\/(.*)\/?.*/</span>, <span class="string">&#x27;$1&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> time = args[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">const</span> hidden_desc = args[<span class="number">2</span>]</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;a href=&quot;https://www.bilibili.com/video/<span class="subst">$&#123;id&#125;</span>/&quot; class=&quot;bilibili_box&quot; id=&quot;<span class="subst">$&#123;id&#125;</span>&quot;&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string">    bilibili()</span></span><br><span class="line"><span class="string">    function bilibili() &#123;</span></span><br><span class="line"><span class="string">      let dom = document.getElementById(&#x27;<span class="subst">$&#123;id&#125;</span>&#x27;)</span></span><br><span class="line"><span class="string">      fetch(&#x27;https://api.320.ink/api/b?id=<span class="subst">$&#123;id&#125;</span>&#x27;).then(res=&gt;res.json()).then(data=&gt;&#123;</span></span><br><span class="line"><span class="string">        dom.innerHTML = \`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;bilibili_cover&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;img src=&quot;https://s1.hdslb.com/bfs/static/player/img/play.svg&quot; class=&quot;play_icon no-lazyload&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;img src=&quot;\$&#123;data.pic + &#x27;&amp;h=300&#x27;&#125;&quot; class=&quot;no-lazyload&quot;&gt;</span></span><br><span class="line"><span class="string">          <span class="subst">$&#123;time ? <span class="string">`&lt;span&gt;<span class="subst">$&#123;time&#125;</span>&lt;/span&gt;`</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;bilibili_info&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;title&quot;&gt;\$&#123;data.title&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">          <span class="subst">$&#123;hidden_desc == <span class="string">&#x27;true&#x27;</span> ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27;&lt;div class=&quot;desc&quot;&gt;\$&#123;data.desc&#125;&lt;/div&gt;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">          &lt;div class=&quot;stat&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;<span class="subst">$&#123;playIcon&#125;</span>\$&#123;data.view&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;<span class="subst">$&#123;likeIcon&#125;</span>\$&#123;data.like&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;<span class="subst">$&#123;coinIcon&#125;</span>\$&#123;data.coin&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;owner&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;tip&quot;&gt;视频&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;\$&#123;data.face + &#x27;&amp;h=100&#x27;&#125;&quot; class=&quot;no-lazyload&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;\$&#123;data.owner&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        \`</span></span><br><span class="line"><span class="string">      &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;bilibili&#x27;</span>, bilibili, &#123; <span class="attr">ends</span>: <span class="literal">false</span> &#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>\themes\butterfly\source\css\_tags</code>下新建文件<code>bilbili.styl</code>并粘贴如下代码： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">.bilibili_box</span><br><span class="line">  display: flex</span><br><span class="line">  background: var(--card-bg)</span><br><span class="line">  border: 1px solid #e0e3ed</span><br><span class="line">  border-radius: 10px</span><br><span class="line">  overflow: hidden</span><br><span class="line">  color: var(--font-color) !important</span><br><span class="line">  text-decoration: none !important</span><br><span class="line">  transition: .3s</span><br><span class="line">  &amp;:hover</span><br><span class="line">    border-color: #4976f5</span><br><span class="line">  +maxWidth768()</span><br><span class="line">    flex-direction: column</span><br><span class="line">  .bilibili_cover</span><br><span class="line">    width: 234px</span><br><span class="line">    position relative</span><br><span class="line">    +maxWidth768()</span><br><span class="line">      width: 100%</span><br><span class="line">    img</span><br><span class="line">      width: 100%</span><br><span class="line">      filter: none</span><br><span class="line">      margin: 0 !important</span><br><span class="line">      border-radius: 0 !important</span><br><span class="line">    .play_icon</span><br><span class="line">      position: absolute</span><br><span class="line">      width 45px</span><br><span class="line">      height 45px</span><br><span class="line">      opacity .8</span><br><span class="line">      top: 50%</span><br><span class="line">      left 50%</span><br><span class="line">      transform: translate(-50%,-50%)</span><br><span class="line">    span </span><br><span class="line">      position: absolute</span><br><span class="line">      bottom: 0px</span><br><span class="line">      right: 5px</span><br><span class="line">      color: white</span><br><span class="line">      text-shadow: 0 1px 3px #7a7a7a</span><br><span class="line">  .bilibili_info</span><br><span class="line">    padding: 10px 10px 10px 18px</span><br><span class="line">    line-height: 1</span><br><span class="line">    width: calc(100% - 200px)</span><br><span class="line">    display: flex</span><br><span class="line">    flex-direction: column</span><br><span class="line">    justify-content: space-around</span><br><span class="line">    +maxWidth768()</span><br><span class="line">      width: 100%</span><br><span class="line">      padding-bottom: 25px</span><br><span class="line">      line-height: 1.5</span><br><span class="line">    .title </span><br><span class="line">      font-size: 1.2rem</span><br><span class="line">      font-weight: bold</span><br><span class="line">      white-space: nowrap</span><br><span class="line">      overflow: hidden</span><br><span class="line">      text-overflow: ellipsis</span><br><span class="line">      line-height: 1.5</span><br><span class="line">    .desc </span><br><span class="line">      font-size: 15px</span><br><span class="line">      margin: 2px 0 4px</span><br><span class="line">      white-space: nowrap</span><br><span class="line">      overflow: hidden</span><br><span class="line">      text-overflow: ellipsis</span><br><span class="line">      +maxWidth768()</span><br><span class="line">        // word-break: break-all</span><br><span class="line">        white-space: normal</span><br><span class="line">        display:-webkit-box;</span><br><span class="line">        -webkit-box-orient:vertical;</span><br><span class="line">        -webkit-line-clamp:2; </span><br><span class="line">    .stat </span><br><span class="line">      font-size: 15px</span><br><span class="line">      svg</span><br><span class="line">        margin-right: 3px</span><br><span class="line">        font-size: 18px</span><br><span class="line">        width: 1em</span><br><span class="line">        height: 1em</span><br><span class="line">        path</span><br><span class="line">          fill: var(--font-color)</span><br><span class="line">      span</span><br><span class="line">        margin-right: 10px</span><br><span class="line">        display: inline-flex</span><br><span class="line">        align-items: center</span><br><span class="line">    .owner </span><br><span class="line">      display: flex</span><br><span class="line">      align-items: center</span><br><span class="line">      line-height: 1</span><br><span class="line">      font-size: 15px</span><br><span class="line">      .tip</span><br><span class="line">        color: #FF6699</span><br><span class="line">        border: 1px solid</span><br><span class="line">        padding: 3px 6px</span><br><span class="line">        font-size: 12px</span><br><span class="line">        border-radius: 5px</span><br><span class="line">        margin-right: 10px</span><br><span class="line">      img</span><br><span class="line">        width 22px</span><br><span class="line">        height: 22px</span><br><span class="line">        border-radius: 50% !important</span><br><span class="line">        object-fit: cover</span><br><span class="line">        margin 0 5px 0 0 !important</span><br><span class="line"></span><br><span class="line">[data-theme=&#x27;light&#x27;] .bilibili_box .bilibili_info .stat svg,</span><br><span class="line">[data-theme=&#x27;dark&#x27;] .bilibili_cover</span><br><span class="line">  opacity .8</span><br></pre></td></tr></table></figure></li></ul><p>标签书写格式如下：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bilibili https://www.bilibili.com/video/BV1eh411G7bK 00:29 %&#125;</span><br><span class="line">&lt;!-- 如果你要隐藏简介，添加true即可（注意，要隐藏简介则必须设置适配时间！），如下 --&gt;</span><br><span class="line">&#123;% bilibili https://www.bilibili.com/video/BV1eh411G7bK 00:29 true %&#125;</span><br></pre></td></tr></table></figure><p><a class="btn-beautify block right outline" href="https://blog.leonus.cn/2023/butterflyTag-1.html"   title="查看原文"><span>查看原文</span></a>  </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><p>这篇教程有一个关于颜色脚本<code>color.css</code>的坑，填坑过程有空再补…施工中🚀<br><a class="btn-beautify block right outline" href="https://opeach.cn/posts/dab4.html"   title="查看原文"><span>查看原文</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-6"><ol><li>标签增加上下标，用于显示标签数量</li></ol><ul><li>修改<code>[blogRoot]/themes/butterfly/scripts/helpers/page.js</code>第49行内容：<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    ···</span><br><span class="line"></span><br><span class="line">  const length = sizes.length - 1</span><br><span class="line">  source.sort(orderby, order).forEach(tag =&gt; &#123;</span><br><span class="line">    const ratio = length ? sizes.indexOf(tag.length) / length : 0</span><br><span class="line">    const size = minfontsize + ((maxfontsize - minfontsize) * ratio)</span><br><span class="line">    let style = `font-size: $&#123;parseFloat(size.toFixed(2))&#125;$&#123;unit&#125;;`</span><br><span class="line">    const color = &#x27;rgb(&#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;)&#x27; // 0,0,0 -&gt; 200,200,200</span><br><span class="line">    style += ` color: $&#123;color&#125;`</span><br><span class="line"><span class="deletion">-   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+    result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  return result</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">    ···</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>新建<code>[blogRoot]/source/css/tag_page.css</code>，添加如下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#page</span> <span class="selector-class">.tag-cloud-list</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5em</span> <span class="number">0</span> <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page</span> <span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-flex;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--icat-fontcolor) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.2em</span> <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-card-bg);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.5em</span> <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    -webkit-<span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">    -webkit-<span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--icat-shadow-border);</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page</span> <span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--icat-fontcolor) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;\e038&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page</span> <span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#page</span> <span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span> &gt; <span class="selector-tag">sup</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-secondbg);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--icat-secondtext);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--icat-shadow-border);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 标签页样式 */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在主题的config文件中引用 <code>tag_page.css</code> 。</p></li><li><p>执行三连</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li></ol><p><a class="btn-beautify block right outline" href="https://meuicat.com/blog/38/"   title="查看原文"><span>查看原文</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-7"><blockquote><p>此效果与<code> _config.butterfly.yml</code> 里功能字段配置 <code>pangu(中英文之间添加空格)</code> 冲突，若想要正确显示，请填写配置 <code>enable:false</code> ，关闭 <code>pangu</code>。</p></blockquote><ol><li><p>修改<code>[blogRoot]/themes/butterfly/layout/includes/pagination.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">  ···</span><br><span class="line"></span><br><span class="line">  var options = &#123;</span><br><span class="line">    prev_text: &#x27;&lt;i class=&quot;fas fa-chevron-left fa-fw&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">    next_text: &#x27;&lt;i class=&quot;fas fa-chevron-right fa-fw&quot;&gt;&lt;/i&gt;&#x27;,</span><br><span class="line">    mid_size: 1,</span><br><span class="line">    escape: false</span><br><span class="line">  &#125;</span><br><span class="line"><span class="addition">+  var icat_options = &#123;</span></span><br><span class="line"><span class="addition">+    prev_text: &#x27;&lt;i class=&quot;iconfont icat-chevron-left fa-fw&quot;&gt;&lt;/i&gt;&lt;div class=&quot;pagination_tips_prev&quot;&gt;上页&lt;/div&gt;&#x27;,</span></span><br><span class="line"><span class="addition">+    next_text: &#x27;&lt;div class=&quot;pagination_tips_next&quot;&gt;下页&lt;/div&gt;&lt;i class=&quot;iconfont icat-chevron-right fa-fw&quot;&gt;&lt;/i&gt;&#x27;,</span></span><br><span class="line"><span class="addition">+    mid_size: 1,</span></span><br><span class="line"><span class="addition">+    escape: false</span></span><br><span class="line"><span class="addition">+  &#125;</span></span><br><span class="line"></span><br><span class="line">if is_post()</span><br><span class="line">  - let prev = theme.post_pagination <span class="comment">=== 1 ? page.prev : page.next</span></span><br><span class="line">  - let next = theme.post_pagination <span class="comment">=== 1 ? page.next : page.prev</span></span><br><span class="line">  nav#pagination.pagination-post</span><br><span class="line">    if(prev)</span><br><span class="line">      - var hasPageNext = next ? &#x27;pull-left&#x27; : &#x27;pull-full&#x27;</span><br><span class="line">      .prev-post(class=hasPageNext)</span><br><span class="line">        a(href=url_for(prev.path) title=prev.title)</span><br><span class="line">          if prev.cover_type <span class="comment">=== &#x27;img&#x27;</span></span><br><span class="line">            img.cover(src=url_for(prev.cover) onerror=`onerror=null;src=&#x27;$&#123;url_for(theme.error_img.post_page)&#125;&#x27;` alt=&#x27;cover of previous post&#x27;)</span><br><span class="line">          else</span><br><span class="line">            .cover(style=`background: $&#123;prev.cover || &#x27;var(--default-bg-color)&#x27;&#125;`)</span><br><span class="line">          .pagination-info</span><br><span class="line">            .label=_p(&#x27;pagination.prev&#x27;)</span><br><span class="line">            .prev_info=prev.title</span><br><span class="line">          </span><br><span class="line">    if(next)</span><br><span class="line">      - var hasPagePrev = prev ? &#x27;pull-right&#x27; : &#x27;pull-full&#x27;</span><br><span class="line">      .next-post(class=hasPagePrev)</span><br><span class="line">        a(href=url_for(next.path) title=next.title)</span><br><span class="line">          if next.cover_type <span class="comment">=== &#x27;img&#x27;</span></span><br><span class="line">            img.cover(src=url_for(next.cover) onerror=`onerror=null;src=&#x27;$&#123;url_for(theme.error_img.post_page)&#125;&#x27;` alt=&#x27;cover of next post&#x27;)</span><br><span class="line">          else</span><br><span class="line">            .cover(style=`background: $&#123;next.cover || &#x27;var(--default-bg-color)&#x27;&#125;`)</span><br><span class="line">          .pagination-info</span><br><span class="line">            .label=_p(&#x27;pagination.next&#x27;)</span><br><span class="line">            .next_info=next.title</span><br><span class="line">else</span><br><span class="line">  nav#pagination</span><br><span class="line">    .pagination</span><br><span class="line">      if is_home()</span><br><span class="line">        - options.format = &#x27;page/%d/#content-inner&#x27;</span><br><span class="line"><span class="deletion">-     !=paginator(options)</span></span><br><span class="line"><span class="addition">+        !=paginator(icat_options)</span></span><br><span class="line"><span class="addition">+      else</span></span><br><span class="line"><span class="addition">+        !=paginator(options)</span></span><br><span class="line"><span class="addition">+      if is_home()</span></span><br><span class="line"><span class="addition">+        .toPageGroup</span></span><br><span class="line"><span class="addition">+          input#toPageText(maxlength=&quot;3&quot; oninput=&quot;value=value.replace(/[^0-9]/g,&#x27;&#x27;)&quot; onkeyup=&quot;if (this.value === &#x27;0&#x27;) this.value = &#x27;&#x27;&quot; title=&quot;跳转到指定页面&quot;)</span></span><br><span class="line"><span class="addition">+          a#toPageButton(data-pjax-state=&quot;&quot; onclick=&quot;icattoPage.toPage()&quot;)</span></span><br><span class="line"><span class="addition">+            i.fa-solid.fa-angles-right</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>新建<code>[blogRoot]/source/css/pagination.css</code>，添加如下内容（<code>注意颜色值的替换</code>）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> &gt; <span class="selector-class">.recent-posts</span> <span class="selector-class">.pagination</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 翻页按钮悬停颜色 */</span></span><br><span class="line"><span class="selector-class">.layout</span> &gt; <span class="selector-class">.recent-posts</span> <span class="selector-class">.pagination</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调整添加原生边框 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span>,</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.25em</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.pagination_tips_prev</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">2.5px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span> <span class="selector-class">.pagination_tips_prev</span> &#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: margin-right .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.pagination_tips_next</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">2.5px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span> <span class="selector-class">.pagination_tips_next</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: margin-left .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span>,</span><br><span class="line">  <span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: sticky;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2.5em</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.prev</span> <span class="selector-class">.pagination_tips_prev</span>,</span><br><span class="line">  <span class="selector-class">.page</span> <span class="selector-class">.layout</span> <span class="selector-class">.recent-posts</span> <span class="selector-id">#pagination</span> <span class="selector-class">.pagination</span> <span class="selector-class">.next</span> <span class="selector-class">.pagination_tips_next</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 上下页按钮魔改 */</span></span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2.5em</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2.5em</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always);</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">outline-style</span>: none;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-secondbg);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--icat-fontcolor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.toPageGroup</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">input</span>,<span class="selector-class">.pagination</span> <span class="selector-class">.toPageGroup</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00c4b6</span>;</span><br><span class="line">  <span class="attribute">outline-style</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toPageGroup</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#toPageButton</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2.5em</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2.5em</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--card-bg);</span><br><span class="line">  <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always);</span><br><span class="line">  <span class="attribute">cursor</span>: text <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toPageGroup</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-id">#toPageButton</span>, <span class="selector-class">.toPageGroup</span><span class="selector-pseudo">:focus</span>-within <span class="selector-tag">a</span><span class="selector-id">#toPageButton</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">27px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">27px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-card-bg);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--icat-none);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toPageGroup</span><span class="selector-pseudo">:focus</span>-within <span class="selector-tag">a</span><span class="selector-id">#toPageButton</span><span class="selector-class">.haveValue</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#toPageButton</span><span class="selector-class">.haveValue</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-id">#toPageButton</span><span class="selector-class">.haveValue</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--icat-theme);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--icat-white);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.toPageGroup</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 页数跳转按钮 */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建<code>[blogRoot]/source/js/pagination.js</code>，添加如下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> icattoPage = &#123;</span><br><span class="line">  <span class="attr">toPage</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;执行跳转&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> e = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.page-number&quot;</span>)</span><br><span class="line">        , t = <span class="built_in">parseInt</span>(e[e.<span class="property">length</span> - <span class="number">1</span>].<span class="property">innerHTML</span>)</span><br><span class="line">        , n = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;toPageText&quot;</span>)</span><br><span class="line">        , a = <span class="built_in">parseInt</span>(n.<span class="property">value</span>);</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(a) &amp;&amp; a &gt; <span class="number">0</span> &amp;&amp; <span class="string">&quot;0&quot;</span> !== (<span class="string">&quot;&quot;</span> + a)[<span class="number">0</span>] &amp;&amp; a &lt;= t) &#123;</span><br><span class="line">          <span class="keyword">var</span> s = <span class="number">1</span> == a ? <span class="string">&quot;/&quot;</span> : <span class="string">&quot;/page/&quot;</span> + a + <span class="string">&quot;/#content-inner&quot;</span>;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;toPageButton&quot;</span>).<span class="property">href</span> = s</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">listenToPageInputPress</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> e = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;toPageText&quot;</span>)</span><br><span class="line">        , t = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;toPageButton&quot;</span>);</span><br><span class="line">      e &amp;&amp; (e.<span class="title function_">addEventListener</span>(<span class="string">&quot;keydown&quot;</span>, (<span class="function"><span class="params">e</span>=&gt;</span>&#123;</span><br><span class="line">          <span class="number">13</span> === e.<span class="property">keyCode</span> &amp;&amp; (icattoPage.<span class="title function_">toPage</span>(),</span><br><span class="line">          pjax.<span class="title function_">loadUrl</span>(t.<span class="property">href</span>))</span><br><span class="line">      &#125;</span><br><span class="line">      )),</span><br><span class="line">      e.<span class="title function_">addEventListener</span>(<span class="string">&quot;input&quot;</span>, (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="string">&quot;&quot;</span> === e.<span class="property">value</span> || <span class="string">&quot;0&quot;</span> === e.<span class="property">value</span> ? t.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;haveValue&quot;</span>) : t.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;haveValue&quot;</span>);</span><br><span class="line">          <span class="keyword">var</span> n = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.page-number&quot;</span>)</span><br><span class="line">            , a = +n[n.<span class="property">length</span> - <span class="number">1</span>].<span class="property">innerHTML</span>;</span><br><span class="line">          +<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;toPageText&quot;</span>).<span class="property">value</span> &gt; a &amp;&amp; (e.<span class="property">value</span> = a)</span><br><span class="line">      &#125;</span><br><span class="line">      )))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">icattoPage.<span class="title function_">listenToPageInputPress</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定页数跳转</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在主题的config文件中引用 <code>pagination.css</code> 和 <code>pagination.js</code>。</p></li><li><p>执行三连</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li></ol><p><a class="btn-beautify block right outline" href="https://meuicat.com/blog/62/"   title="查看原文"><span>查看原文</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>  ]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
